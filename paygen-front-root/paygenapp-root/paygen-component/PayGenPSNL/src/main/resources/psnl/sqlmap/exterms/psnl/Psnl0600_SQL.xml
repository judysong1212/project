<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<sqlMap namespace="Psnl0600">
	
	<typeAlias alias="hashMap" type="java.util.HashMap"/>
    <typeAlias alias="list" type="java.util.List"/>
    <typeAlias alias="int" type="java.lang.Integer"/>
    <typeAlias alias="string" type="java.lang.String"/>
	<typeAlias alias="egovMap" type="egovframework.rte.psl.dataaccess.util.EgovMap"/>
	<typeAlias alias="psnl0600Dto" type="com.app.exterms.personal.client.dto.Psnl0600DTO"/>
	<typeAlias alias="psnl0600SrhVO" type="com.app.exterms.personal.server.vo.Psnl0600SrhVO"/>


	<sql id="emymtDivSelectSql">

		<isEqual property="psnl0112Chk" compareValue="Y">  
		<![CDATA[     
		 
		       /*  병역   */
		       , FCBASS0300CDNM(A.DPOB_CD, D.DSAGE_DIV_CD) AS DSAGE_DIV_CD
		       , DECODE(D.ENRLNT_DT , '' , '' , '00000000' , '' , TO_CHAR ( TO_DATE (D.ENRLNT_DT, 'YYYYMMDD'), 'YYYY.MM.DD') )AS ENRLNT_DT
		       , DECODE(D.DSAGE_DT  , '' , '' , '00000000' , '' , TO_CHAR ( TO_DATE (D.DSAGE_DT , 'YYYYMMDD'), 'YYYY.MM.DD') )AS DSAGE_DT
		       , FCBASS0300CDNM(A.DPOB_CD, D.SERVC_RCGTN_PRID_CD) AS SERVC_RCGTN_PRID_CD
		       , FCBASS0300CDNM(A.DPOB_CD, D.SRVSS_CD) AS SRVSS_CD
		       , FCBASS0300CDNM(A.DPOB_CD, D.BAGGRP_CD) AS BAGGRP_CD
		       , FCBASS0300CDNM(A.DPOB_CD, D.ABOTS_CD) AS ABOTS_CD
		       , FCBASS0300CDNM(A.DPOB_CD, D.CLS_CD) AS CLS_CD
		       , D.MITY_SILNUM
		       , D.MOS
		       , FCBASS0300CDNM(A.DPOB_CD, D.EXMTN_REAS_CD) AS EXMTN_REAS_CD
		]]>       
		</isEqual>        
		 
		 
		<isEqual property="psnl0114Chk" compareValue="Y">  
		<![CDATA[    
		    
		       /*  단체   */
		       , TO_CHAR( TO_DATE(E.JN_DT  ,'YYYYMMDD') ,'YYYY.MM.DD') AS JN_DT
		       , E.JN_OPZTN_NM
		       , FCBASS0300CDNM(A.DPOB_CD, E.ODTY_CD) AS ODTY_CD
		       , TO_CHAR( TO_DATE(E.WIRL_DT,'YYYYMMDD') ,'YYYY.MM.DD') AS WIRL_DT
		       
		]]>       
		</isEqual>
		
		
		<isEqual property="psnl0116Chk" compareValue="Y">  
		<![CDATA[ 
		       
		       /*  학력   */
		       , TO_CHAR( TO_DATE(F.ETNC_ITSHL_DT ,'YYYYMMDD') ,'YYYY.MM.DD') AS ETNC_ITSHL_DT  
		       , TO_CHAR( TO_DATE(F.GRDTN_DT      ,'YYYYMMDD') ,'YYYY.MM.DD') AS GRDTN_DT 
		       , FCBASS0300CDNM(A.DPOB_CD, F.ACAD_ABTY_DIV_CD) AS ACAD_ABTY_DIV_CD
		       , FCBASS0300CDNM(A.DPOB_CD, F.SCHL_CD) AS SCHL_CD 
		       , FCBASS0300CDNM(A.DPOB_CD, F.DEPR_MAJR_CD) AS DEPR_MAJR_CD
		       , FCBASS0300CDNM(A.DPOB_CD, F.DEGR_DIV_CD) AS DEGR_DIV_CD 
		       , FCBASS0300CDNM(A.DPOB_CD, F.LESN_YR_NUM_CD) AS LESN_YR_NUM_CD
		       , F.ACAD_ABTY_NOTE_CTNT
		 ]]>       
		</isEqual>        
		       
		 
		<isEqual property="psnl0119Chk" compareValue="Y">  
		<![CDATA[ 
		              
		        /*  경력   */
		        , TO_CHAR(TO_DATE(G.CARR_BGNN_DT,'YYYYMMDD'),'YYYY.MM.DD') AS CARR_BGNN_DT
		        , TO_CHAR(TO_DATE(G.CARR_END_DT,'YYYYMMDD'),'YYYY.MM.DD') AS CARR_END_DT
		        , G.PAE_WORK_NM
		        , G.ODTY_NM
		        , G.REPBTY_BUSIN_NM
		        , G.CARR_NOTE_CTNT
		       
		]]>       
		</isEqual>      
		
		
		<isEqual property="psnl0118Chk" compareValue="Y">  
		<![CDATA[ 
		   
		        /*  자격   */             
		        , TO_CHAR( TO_DATE(O.AQTN_DT ,'YYYYMMDD') ,'YYYY.MM.DD') AS AQTN_DT
		        , FCBASS0300CDNM(A.DPOB_CD, O.QFTNT_LICNS_CD) AS QFTNT_LICNS_CD
		        , O.QFTNT_LICNS_POVNC_CTNT
		        , O.EFMN_ISTUT_NM
		        , O.QFTNT_LICNS_NUM
		       
		 ]]>       
		 </isEqual>   
		
		 
		<isEqual property="psnl0120Chk" compareValue="Y">  
		<![CDATA[ 
		     
		        /*  교육   */ 
		        , TO_CHAR( TO_DATE(P.EDU_BGNN_DT ,'YYYYMMDD') ,'YYYY.MM.DD') AS EDU_BGNN_DT
		        , TO_CHAR( TO_DATE(P.EDU_END_DT  ,'YYYYMMDD') ,'YYYY.MM.DD') AS EDU_END_DT
		        , P.EDU_CMPTE_TM
		        , P.EDU_KND_NM
		        , P.EDU_ISTUT_NM
		        , P.EDU_NOTE_CTNT
		        
		        
		]]>       
		</isEqual>
		
		
		<isEqual property="psnl0121Chk" compareValue="Y">  
		<![CDATA[ 
		         
		        /*  포상   */
		        , R.ACCLD_YR
		        , TO_CHAR( TO_DATE(R.ACCLD_PRTT_DT ,'YYYYMMDD') ,'YYYY.MM.DD') AS ACCLD_PRTT_DT
		        , FCBASS0300CDNM(A.DPOB_CD, R.ACCLD_KND_CD) AS ACCLD_KND_CD
		        , FCBASS0300CDNM(A.DPOB_CD, R.ACCLD_DIV_CD) AS ACCLD_DIV_CD
		        , R.ACCLD_NM
		        , R.ACCLD_CFMNT_NUM
		        , R.EFMN_ISTUT_NM
		        , R.ACCLD_MNANT_CTNT
		        , R.ACCLD_NOTE_CTNT
		  
		]]>       
		</isEqual>  
		
		
		<isEqual property="psnl0122Chk" compareValue="Y">  
		<![CDATA[  
		        
		        /*  징계    */
		        , S.DSNY_ACT_NM
		        , S.DSNY_ACT_REAS_CTNT
		        , S.DSNY_ACT_ECTG_ORGN
		        , TO_CHAR( TO_DATE(S.DSNY_ACT_BGNN_DT ,'YYYYMMDD') ,'YYYY.MM.DD') AS DSNY_ACT_BGNN_DT
		        , TO_CHAR( TO_DATE(S.DSNY_ACT_END_DT  ,'YYYYMMDD') ,'YYYY.MM.DD') AS DSNY_ACT_END_DT
		        , TO_CHAR( TO_DATE(S.DSNY_ACT_ANSTY_DT,'YYYYMMDD') ,'YYYY.MM.DD') AS DSNY_ACT_ANSTY_DT
		        , FCBASS0300CDNM(A.DPOB_CD, S.DSNY_ACT_ANSTY_DIV_CD) AS DSNY_ACT_ANSTY_DIV_CD
		        , TO_CHAR(S.DSNY_ACT_CTWP_MNTH_ICM)
		        , S.DSNY_ACT_NOTE_CTNT
		        
		]]>       
		</isEqual> 
		
		
		<isEqual property="psnl0123Chk" compareValue="Y">  
		<![CDATA[       
		        
		         /*  휴직   */
		         , FCBASS0300CDNM(A.DPOB_CD, T.LEVF_ABNC_DIV_CD) as LEVF_ABNC_DIV_CD
		         , TO_CHAR(TO_DATE(T.LEVF_ABNC_BGNN_DT,'YYYYMMDD'),'YYYY.MM.DD') AS LEVF_ABNC_BGNN_DT
		         , TO_CHAR(TO_DATE(T.LEVF_ABNC_END_DT,'YYYYMMDD'),'YYYY.MM.DD') AS LEVF_ABNC_END_DT
		         , TO_CHAR(TO_DATE(T.TURTY_RNTMNT_DT,'YYYYMMDD'),'YYYY.MM.DD') AS TURTY_RNTMNT_DT
		         , T.LEVF_ABNC_NOTE_CTNT
		           
		]]>       
		</isEqual> 	

	</sql>
	
	<sql id="emymtDivWhereSql">
	
		<isNotNull property="dpobCd">
			<isNotEmpty property="dpobCd" >
				AND	A.DPOB_CD=#dpobCd#
			</isNotEmpty>
		</isNotNull>	
			
		<isNotNull property="typOccuCd">
		     <isNotEmpty property="typOccuCd">
		 		AND A.TYP_OCCU_CD = #typOccuCd#
		 	 </isNotEmpty>
		</isNotNull>
		<isNotEmpty property="dtilOccuInttnCd">
			<![CDATA[
				AND A.DTIL_OCCU_INTTN_CD
			]]>
			<iterate prepend="IN" property="dtilOccuInttnCdArr" open="(" close=")" conjunction=",">
				#dtilOccuInttnCdArr[]#
			</iterate>
		</isNotEmpty>
			
		<isNotNull property="businCd">
		    <isNotEmpty property="businCd">
		 		AND A.BUSIN_CD = #businCd#
		 	</isNotEmpty>
		</isNotNull>
		
		<isNotNull property="currDeptAppmtDtS">
		    <isNotEmpty property="currDeptAppmtDtS">
			    	<isEqual property="emymtDivCd" compareValue="A0020010">  
			 			AND A.CURR_DEPT_APPMT_DT &gt;= #currDeptAppmtDtS#
			 		</isEqual>	
			 		<isEqual property="emymtDivCd" compareValue="A0020020"> 
			 			AND A.EMYMT_BGNN_DT &gt;= #currDeptAppmtDtS#			 		 
			 		</isEqual>
			 </isNotEmpty>
		</isNotNull>
		
		<isNotNull property="currDeptAppmtDtE">
		     <isNotEmpty property="currDeptAppmtDtE">
		 			<isEqual property="emymtDivCd" compareValue="A0020010">  
			 			AND A.CURR_DEPT_APPMT_DT &lt;= #currDeptAppmtDtE#
			 		</isEqual>
			 		<isEqual property="emymtDivCd" compareValue="A0020020">  
			 			AND A.EMYMT_BGNN_DT &lt;= #currDeptAppmtDtE#
			 		</isEqual>
		 	 </isNotEmpty>
		</isNotNull>
		
		<isNotNull property="frstEmymtDtS">
		    <isNotEmpty property="frstEmymtDtS">
				AND DECODE(P101.FRST_BSE_EMYMT_DT, '',  A.FRST_EMYMT_DT, P101.FRST_BSE_EMYMT_DT) &gt;= #frstEmymtDtS#
		 	 </isNotEmpty>
		 </isNotNull>
		 
		 <isNotNull property="frstEmymtDtE">
		     <isNotEmpty property="frstEmymtDtE">
		 		AND DECODE(P101.FRST_BSE_EMYMT_DT, '',  A.FRST_EMYMT_DT, P101.FRST_BSE_EMYMT_DT) &lt;= #frstEmymtDtE#
		 	 </isNotEmpty>
		 </isNotNull>
		 
		 <isNotNull property="yoobhMnthDayS">
			 <isNotEmpty property="yoobhMnthDayS">
				AND (DECODE(SUBSTR (A.RESN_REGN_NUM, 7, 1), '1', '19', '2', '19', '3', '20', '4', '20')|| SUBSTR (A.RESN_REGN_NUM, 1, 6)) &gt;= #yoobhMnthDayS#
			 </isNotEmpty>
		 </isNotNull>
		 
		 <isNotNull property="yoobhMnthDayE">
			 <isNotEmpty property="yoobhMnthDayE">
				AND (DECODE(SUBSTR (A.RESN_REGN_NUM, 7, 1), '1', '19', '2', '19', '3', '20', '4', '20')|| SUBSTR (A.RESN_REGN_NUM, 1, 6)) &lt;= #yoobhMnthDayE#
		 	 </isNotEmpty>
		 </isNotNull>
		
		 <isNotNull property="sxDivCd">
			 <isNotEmpty property="sxDivCd">
			 	AND A.SX_DIV_CD = #sxDivCd# 
			 </isNotEmpty>
		 </isNotNull>
		 
		 <isNotNull property="logSvcYrNumCdS">
		     <isNotEmpty property="logSvcYrNumCdS">
		 		AND EXISTS ( 
		                     SELECT D.COMM_CD FROM BASS0300 D
		                       WHERE RPSTTV_CD = 'A007'
		                          AND TO_NUMBER(MANGE_ITEM01) &gt;= TO_NUMBER(#logSvcYrNumCdS#)
		                          AND D.DPOB_CD = A.DPOB_CD
		                          AND D.COMM_CD = A.LOG_SVC_YR_NUM_CD
		                      )
			 </isNotEmpty>
		  </isNotNull>
		  
		  <isNotNull property="logSvcYrNumCdE">
			   <isNotEmpty property="logSvcYrNumCdE">
					AND EXISTS ( 
		                        SELECT E.COMM_CD FROM BASS0300 E 
		                        WHERE RPSTTV_CD = 'A007'
		                            AND TO_NUMBER(MANGE_ITEM01) &lt;= TO_NUMBER(#logSvcYrNumCdE#)
		                            AND E.DPOB_CD = A.DPOB_CD
		                            AND E.COMM_CD = A.LOG_SVC_YR_NUM_CD
		                        )
				 </isNotEmpty>
		  </isNotNull>  			       		
		
		  
		<isEqual property="psnl0112Chk" compareValue="Y">
		
			AND A.DPOB_CD = D.DPOB_CD(+)
			AND A.SYSTEMKEY = D.SYSTEMKEY(+)
			
			<isNotNull property="dsageDivCd">
				<isNotEmpty property="dsageDivCd">
					AND D.DSAGE_DIV_CD = #dsageDivCd#
				</isNotEmpty>
			</isNotNull>
			
			<isNotNull property="dsageDtS">
				<isNotEmpty property="dsageDtS">
					AND D.DSAGE_DT &gt;= #dsageDtS#
				</isNotEmpty>
			</isNotNull>
			<isNotNull property="dsageDtE">
				<isNotEmpty property="dsageDtE">
					AND D.DSAGE_DT &lt;= #dsageDtE#
				</isNotEmpty>
			</isNotNull>
			
			<isNotNull property="baggrpCd">
				<isNotEmpty property="baggrpCd">
					AND D.BAGGRP_CD = #baggrpCd#
				</isNotEmpty>
			</isNotNull>
			
			<isNotNull property="abotsCd">
				<isNotEmpty property="abotsCd">
					AND D.ABOTS_CD = #abotsCd#
				</isNotEmpty>
			</isNotNull>
			
			<isNotNull property="clsCd">
				<isNotEmpty property="clsCd">
					AND D.CLS_CD = #clsCd#
				</isNotEmpty>
			</isNotNull>	
		  
		</isEqual> 
		 
		 
		<isEqual property="psnl0114Chk" compareValue="Y"> 
		
		  	AND A.DPOB_CD = E.DPOB_CD(+)
		  	AND A.SYSTEMKEY = E.SYSTEMKEY(+)
		  	
		<isNotNull property="jnOpztnNm">
			<isNotEmpty property="jnOpztnNm">
				AND E.JN_OPZTN_NM LIKE '%' || #jnOpztnNm# || '%' 
		 	</isNotEmpty>
		</isNotNull>
		<isNotNull property="jnDtS">
			<isNotEmpty property="jnDtS">
				AND E.JN_DT &gt;= #jnDtS#
		 	</isNotEmpty>
		</isNotNull>
		<isNotNull property="jnDtE">
		 	<isNotEmpty property="jnDtE">
				AND E.JN_DT &lt;= #jnDtE#
		 	</isNotEmpty>
		</isNotNull>
		  
		</isEqual>   
		
		<isEqual property="psnl0116Chk" compareValue="Y">    
			AND A.DPOB_CD = F.DPOB_CD(+)
		  	AND A.SYSTEMKEY = F.SYSTEMKEY(+)
		  
		<isNotNull property="acadAbtyDivCd">
			<isNotEmpty property="acadAbtyDivCd">
				AND F.ACAD_ABTY_DIV_CD = #acadAbtyDivCd# 
			</isNotEmpty>
		</isNotNull>
		<isNotNull property="degrDivCd">
			<isNotEmpty property="degrDivCd">
				AND F.DEGR_DIV_CD = #degrDivCd# 
			</isNotEmpty>
		</isNotNull>
		<isNotNull property="deprMajrCd">
			<isNotEmpty property="deprMajrCd">
				AND F.DEPR_MAJR_CD = #deprMajrCd# 
			</isNotEmpty>
		</isNotNull>
		<isNotNull property="schlCd">
			<isNotEmpty property="schlCd">
				AND F.SCHL_CD = #schlCd#  
			</isNotEmpty>
		</isNotNull>
		</isEqual>          
		
		<isEqual property="psnl0119Chk" compareValue="Y"> 
		  
			AND A.DPOB_CD = G.DPOB_CD(+)
		  	AND A.SYSTEMKEY = G.SYSTEMKEY(+)
		  	
		<isNotNull property="paeWorkNm">
			<isNotEmpty property="paeWorkNm">
				AND G.PAE_WORK_NM LIKE '%' || #paeWorkNm# || '%' 
			</isNotEmpty>
		</isNotNull>
		<isNotNull property="carrBgnnDtS">
			<isNotEmpty property="carrBgnnDtS">
				AND G.CARR_BGNN_DT &gt;= #carrBgnnDtS#
			 </isNotEmpty>
		</isNotNull>
		<isNotNull property="carrBgnnDtE">
			<isNotEmpty property="carrBgnnDtE">
				AND G.CARR_BGNN_DT &lt;= #carrBgnnDtE#
			</isNotEmpty>
		</isNotNull>					              	
		  	
		</isEqual>  
		
		
		<isEqual property="psnl0118Chk" compareValue="Y"> 
		
		  AND A.DPOB_CD = O.DPOB_CD(+)
		  AND A.SYSTEMKEY = O.SYSTEMKEY(+)
		  
		<isNotNull property="qftntLicnsPovncCtnt">
			<isNotEmpty property="qftntLicnsPovncCtnt">
				AND O.QFTNT_LICNS_POVNC_CTNT LIKE '%' || #qftntLicnsPovncCtnt# || '%' 
			</isNotEmpty>
		</isNotNull>
		<isNotNull property="aqtnDtS">
			<isNotEmpty property="aqtnDtS">
				AND O.AQTN_DT &gt;= #aqtnDtS#
			</isNotEmpty>
		</isNotNull>
		<isNotNull property="aqtnDtE">
			<isNotEmpty property="aqtnDtE">
				AND O.AQTN_DT &lt;= #aqtnDtE#
			</isNotEmpty>
		</isNotNull>			              
		  
		</isEqual>
		 
		<isEqual property="psnl0120Chk" compareValue="Y">   
		
		  AND A.DPOB_CD = P.DPOB_CD(+)
		  AND A.SYSTEMKEY = P.SYSTEMKEY(+)
		  
		<isNotNull property="eduKndNm">
			<isNotEmpty property="eduKndNm">
				AND P.EDU_KND_NM LIKE '%' || #eduKndNm# || '%' 
			</isNotEmpty>
		</isNotNull>
		
		<isNotNull property="eduBgnnDtS">
			<isNotEmpty property="eduBgnnDtS">
				AND P.EDU_BGNN_DT &gt;= #eduBgnnDtS#
			</isNotEmpty>
		</isNotNull>
		
		<isNotNull property="eduBgnnDtE">
			<isNotEmpty property="eduBgnnDtE">
			AND P.EDU_BGNN_DT &lt;= #eduBgnnDtE#
			</isNotEmpty>
		</isNotNull>     
		  
		</isEqual>  
		
		<isEqual property="psnl0121Chk" compareValue="Y">  
		 
		  AND A.DPOB_CD = R.DPOB_CD(+)
		  AND A.SYSTEMKEY = R.SYSTEMKEY(+)
		  
		  
		</isEqual> 
		
		<isEqual property="psnl0122Chk" compareValue="Y">  
		
		  AND A.DPOB_CD = S.DPOB_CD(+)
		  AND A.SYSTEMKEY = S.SYSTEMKEY(+)
		  
		<isNotNull property="dsnyActDivCd">
			<isNotEmpty property="dsnyActDivCd">
				AND S.DSNY_ACT_DIV_CD = #dsnyActDivCd# 
			</isNotEmpty>
		</isNotNull>
		<isNotNull property="dsnyActDsplDtS">
			<isNotEmpty property="dsnyActDsplDtS">
				AND S.DSNY_ACT_DSPL_DT &gt;= #dsnyActDsplDtS#
			</isNotEmpty>
		</isNotNull>
		<isNotNull property="dsnyActDsplDtE">
			<isNotEmpty property="dsnyActDsplDtE">
				AND S.DSNY_ACT_DSPL_DT &lt;= #dsnyActDsplDtE#
			</isNotEmpty>
		</isNotNull>	
		
		</isEqual>      
		      
		<isEqual property="psnl0123Chk" compareValue="Y"> 
		 	               
			AND A.DPOB_CD = T.DPOB_CD(+)
		 	AND A.SYSTEMKEY = T.SYSTEMKEY(+) 
		 	
		<isNotNull property="levfAbncDivCd">
			<isNotEmpty property="levfAbncDivCd">
				AND T.LEVF_ABNC_DIV_CD = #levfAbncDivCd# 
			</isNotEmpty>
		</isNotNull>
		<isNotNull property="levfAbncBgnnDtS">
			<isNotEmpty property="levfAbncBgnnDtS">
				AND T.LEVF_ABNC_BGNN_DT &gt;= #levfAbncBgnnDtS#
			</isNotEmpty>
		</isNotNull>
		<isNotNull property="levfAbncBgnnDtE">
			<isNotEmpty property="levfAbncBgnnDtE">
				AND T.LEVF_ABNC_BGNN_DT &lt;= #levfAbncBgnnDtE#
			</isNotEmpty>
		</isNotNull>	  
			
		</isEqual>  
		              
		  AND A.DPOB_CD = U.DPOB_CD(+)
		  AND A.SYSTEMKEY = U.SYSTEMKEY(+)     
		
		 <!-- 
		<isNotNull property="emymtDivCd">
		   	<isNotEmpty property="emymtDivCd">
				AND A.EMYMT_DIV_CD = #emymtDivCd#
		 	</isNotEmpty>
		</isNotNull>
				 	
		<isNotEmpty property="hdofcCodtnCd" prepend="AND">
			<![CDATA[
				A.HDOFC_CODTN_CD
			]]>
			<iterate prepend="IN" property="hdofcCodtnCdArr" open="(" close=")" conjunction=",">
				 #hdofcCodtnCdArr[]#
			</iterate>
		</isNotEmpty>  						 
		 --> 
		 
		<isNotNull property="payrMangDeptCd">
			<isNotEmpty property="payrMangDeptCd" >
				AND EXISTS  (
			                         SELECT  C.DPOB_CD,
			                                 C.DTIL_OCCU_INTTN_CD,
			                                 C.TYP_OCCU_CD,
			                                 C.DEPT_CD FROM 
			                                             ( SELECT * 
                                                 FROM TABLE(PKG_DTIL_AUTH.FN_DTIL_AUTH_TB(#dpobCd#,#payrMangDeptYn#,#payrMangDeptCd#,#deptCd#,#usrId#,#deptCdAuth#,'' )) ) C
			                                            WHERE     C.DPOB_CD = A.DPOB_CD
									                        AND C.DEPT_CD = A.CURR_AFFN_DEPT_CD
									                        AND NVL(C.TYP_OCCU_CD,'TT')  = NVL(A.TYP_OCCU_CD,'TT') 
			                                                AND NVL(C.DTIL_OCCU_INTTN_CD,'TT')  = NVL(A.DTIL_OCCU_INTTN_CD,'TT')
															<isNotEmpty property="deptCd" prepend="AND">
															    C.DEPT_CD IN ( SELECT BA0400.DEPT_CD
																						FROM BASS0400 BA0400
																					WHERE BA0400.DEPT_USE_YN = 'Y'
																					START WITH BA0400.DEPT_CD 							
																						<iterate prepend="IN" property="deptCdArr" open="(" close=")" conjunction=",">
																							#deptCdArr[]#
																						</iterate>
															                         CONNECT BY PRIOR BA0400.DEPT_CD = BA0400.HHRK_DEPT_CD
																					 ) 
															</isNotEmpty>

										) 
			</isNotEmpty> 
		</isNotNull>	

	</sql>


	<sql id="defaultWhereSql">
	    <!-- 
	     <isNotNull property="deptCd">
		     <isNotEmpty property="deptCd">
		 		AND A.DEPT_CD = #deptCd#
		 	 </isNotEmpty>
		 </isNotNull>
		 
		 <isNotNull property="currAffnDeptCd">
		     <isNotEmpty property="currAffnDeptCd">
		 		AND A.CURR_AFFN_DEPT_CD = #currAffnDeptCd#
		 	 </isNotEmpty>
		 </isNotNull> 
		 -->
		 
		<isNotNull property="dpobCd">
			<isNotEmpty property="dpobCd" >
				AND	A.DPOB_CD=#dpobCd#
			</isNotEmpty>
		</isNotNull>	
		
		<!--
		<isNotNull property="payrMangDeptCd">
		 	<isNotEmpty property="payrMangDeptCd" >
				AND	D.PAYR_MANG_DEPT_CD=#payrMangDeptCd#
			</isNotEmpty> 
		</isNotNull>	
		 
		  
		 <isNotNull property="emymtDivCd">
		     <isNotEmpty property="emymtDivCd">
		 		AND A.EMYMT_DIV_CD = #emymtDivCd#
		 	 </isNotEmpty>
		 </isNotNull>
		 
		  -->
		 <isNotNull property="typOccuCd">
		     <isNotEmpty property="typOccuCd">
		 		AND A.TYP_OCCU_CD = #typOccuCd#
		 	 </isNotEmpty>
		 </isNotNull>
		<isNotEmpty property="dtilOccuInttnCd">
			<![CDATA[
				AND A.DTIL_OCCU_INTTN_CD
			]]>
			<iterate prepend="IN" property="dtilOccuInttnCdArr" open="(" close=")" conjunction=",">
				#dtilOccuInttnCdArr[]#
			</iterate>
		</isNotEmpty>
		
		<!--  
		<isNotEmpty property="hdofcCodtnCd" prepend="AND">
			<![CDATA[
				A.HDOFC_CODTN_CD
			]]>
			<iterate prepend="IN" property="hdofcCodtnCdArr" open="(" close=")" conjunction=",">
				 #hdofcCodtnCdArr[]#
			</iterate>
		</isNotEmpty>  
		-->
		
		 <isNotNull property="businCd">
		     <isNotEmpty property="businCd">
		 		AND A.BUSIN_CD = #businCd#
		 	 </isNotEmpty>
		 </isNotNull>
		 <isNotNull property="currDeptAppmtDtS">
		    <isNotEmpty property="currDeptAppmtDtS">
			    	<isEqual property="emymtDivCd" compareValue="A0020010">  
			 			AND A.CURR_DEPT_APPMT_DT &gt;= #currDeptAppmtDtS#
			 		</isEqual>	
			 		<isEqual property="emymtDivCd" compareValue="A0020020"> 
			 			AND A.EMYMT_BGNN_DT &gt;= #currDeptAppmtDtS#			 		 
			 		</isEqual>
			 </isNotEmpty>
		</isNotNull>
		
		<isNotNull property="currDeptAppmtDtE">
		     <isNotEmpty property="currDeptAppmtDtE">
		 			<isEqual property="emymtDivCd" compareValue="A0020010">  
			 			AND A.CURR_DEPT_APPMT_DT &lt;= #currDeptAppmtDtE#
			 		</isEqual>
			 		<isEqual property="emymtDivCd" compareValue="A0020020">  
			 			AND A.EMYMT_BGNN_DT &lt;= #currDeptAppmtDtE#
			 		</isEqual>
		 	 </isNotEmpty>
		</isNotNull>
		 <isNotNull property="frstEmymtDtS">
		     <isNotEmpty property="frstEmymtDtS">
		 		AND DECODE(E.FRST_BSE_EMYMT_DT, '',  A.FRST_EMYMT_DT, E.FRST_BSE_EMYMT_DT) &gt;= #frstEmymtDtS#
		 	 </isNotEmpty>
		 </isNotNull>
		 <isNotNull property="frstEmymtDtE">
		     <isNotEmpty property="frstEmymtDtE">
		 		AND DECODE(E.FRST_BSE_EMYMT_DT, '',  A.FRST_EMYMT_DT, E.FRST_BSE_EMYMT_DT) &lt;= #frstEmymtDtE#
		 	 </isNotEmpty>
		 </isNotNull>
		 <isNotNull property="yoobhMnthDayS">
		     <isNotEmpty property="yoobhMnthDayS">
		 		AND (DECODE(SUBSTR (A.RESN_REGN_NUM, 7, 1), '1', '19', '2', '19', '3', '20', '4', '20')|| SUBSTR (A.RESN_REGN_NUM, 1, 6)) &gt;= #yoobhMnthDayS#
		 	 </isNotEmpty>
		 </isNotNull>
		 <isNotNull property="yoobhMnthDayE">
		     <isNotEmpty property="yoobhMnthDayE">
		 		AND (DECODE(SUBSTR (A.RESN_REGN_NUM, 7, 1), '1', '19', '2', '19', '3', '20', '4', '20')|| SUBSTR (A.RESN_REGN_NUM, 1, 6)) &lt;= #yoobhMnthDayE#
		 	 </isNotEmpty>
		 </isNotNull>

		 <isNotNull property="sxDivCd">
		     <isNotEmpty property="sxDivCd">
		 		AND A.SX_DIV_CD = #sxDivCd# 
		 	 </isNotEmpty>
		 </isNotNull>
		 <isNotNull property="logSvcYrNumCdS">
		     <isNotEmpty property="logSvcYrNumCdS">
		 		AND EXISTS ( 
	                        SELECT D.COMM_CD FROM BASS0300 D
	                        WHERE RPSTTV_CD = 'A007'
	                            AND TO_NUMBER(MANGE_ITEM01) &gt;= TO_NUMBER(#logSvcYrNumCdS#)
	                            AND D.DPOB_CD = A.DPOB_CD
	                            AND D.COMM_CD = A.LOG_SVC_YR_NUM_CD
	                        )
		 	 </isNotEmpty>
		 </isNotNull>
		 <isNotNull property="logSvcYrNumCdE">
		     <isNotEmpty property="logSvcYrNumCdE">
		 		AND EXISTS ( 
	                        SELECT E.COMM_CD FROM BASS0300 E 
	                        WHERE RPSTTV_CD = 'A007'
	                            AND TO_NUMBER(MANGE_ITEM01) &lt;= TO_NUMBER(#logSvcYrNumCdE#)
	                            AND E.DPOB_CD = A.DPOB_CD
	                            AND E.COMM_CD = A.LOG_SVC_YR_NUM_CD
	                        )
		 	 </isNotEmpty>
		 </isNotNull>  
	</sql>	
	
	
	<!-- 	
	<sql id="defaultWhereSql">
	     <isNotNull property="searchDeptCd">
		     <isNotEmpty property="searchDeptCd">
		 		AND A.DEPT_CD = #searchDeptCd#
		 	 </isNotEmpty>
		 </isNotNull>
		 <isNotNull property="searchCurrDeptCd">
		     <isNotEmpty property="searchCurrDeptCd">
		 		AND A.CURR_AFFN_DEPT_CD = #searchCurrDeptCd#
		 	 </isNotEmpty>
		 </isNotNull> 
		 <isNotNull property="searchEmymtDivCd">
		     <isNotEmpty property="searchEmymtDivCd">
		 		AND A.EMYMT_DIV_CD = #searchEmymtDivCd#
		 	 </isNotEmpty>
		 </isNotNull>
		 <isNotNull property="searchTypOccuCd">
		     <isNotEmpty property="searchTypOccuCd">
		 		AND A.TYP_OCCU_CD = #searchTypOccuCd#
		 	 </isNotEmpty>
		 </isNotNull>
		 <isNotNull property="srhDtilOccuInttnCd">
		     <isNotEmpty property="srhDtilOccuInttnCd">
		 		AND A.DTIL_OCCU_INTTN_CD = #srhDtilOccuInttnCd#
		 	 </isNotEmpty>
		 </isNotNull>
		 <isNotNull property="srhYearBusinCd">
		     <isNotEmpty property="srhYearBusinCd">
		 		AND A.BUSIN_CD = #srhYearBusinCd#
		 	 </isNotEmpty>
		 </isNotNull>
		 <isNotNull property="searchNowDeptDateS">
		     <isNotEmpty property="searchNowDeptDateS">
		 		AND A.CURR_DEPT_APPMT_DT &gt;= #searchNowDeptDateS#
		 	 </isNotEmpty>
		 </isNotNull>
		 <isNotNull property="searchNowDeptDateE">
		     <isNotEmpty property="searchNowDeptDateE">
		 		AND A.CURR_DEPT_APPMT_DT &lt;= #searchNowDeptDateE#
		 	 </isNotEmpty>
		 </isNotNull>
		 <isNotNull property="searchFrstWorkDateS">
		     <isNotEmpty property="searchFrstWorkDateS">
		 		AND A.FRST_EMYMT_DT &gt;= #searchFrstWorkDateS#
		 	 </isNotEmpty>
		 </isNotNull>
		 <isNotNull property="searchFrstWorkDateE">
		     <isNotEmpty property="searchFrstWorkDateE">
		 		AND A.FRST_EMYMT_DT &lt;= #searchFrstWorkDateE#
		 	 </isNotEmpty>
		 </isNotNull>
		 <isNotNull property="searchBirthDateS">
		     <isNotEmpty property="searchBirthDateS">
		 		AND SUBSTR(A.RESN_REGN_NUM,1,6) &gt;= #searchBirthDateS#
		 	 </isNotEmpty>
		 </isNotNull>
		 <isNotNull property="searchBirthDateE">
		     <isNotEmpty property="searchBirthDateE">
		 		AND SUBSTR(A.RESN_REGN_NUM,1,6) &lt;= #searchBirthDateE#
		 	 </isNotEmpty>
		 </isNotNull>
		 <isNotNull property="searchHdofcCodtnCd">
		     <isNotEmpty property="searchHdofcCodtnCd">
		 		AND A.HDOFC_CODTN_CD = #searchHdofcCodtnCd# 
		 	 </isNotEmpty>
		 </isNotNull>
		 <isNotNull property="searchSexType">
		     <isNotEmpty property="searchSexType">
		 		AND A.SX_DIV_CD = #searchSexType# 
		 	 </isNotEmpty>
		 </isNotNull>
		 <isNotNull property="searchWorkYearS">
		     <isNotEmpty property="searchWorkYearS">
		 		AND EXISTS ( 
	                        SELECT D.COMM_CD FROM BASS0300 D
	                        WHERE RPSTTV_CD = 'A007'
	                            AND TO_NUMBER(MANGE_ITEM01) &gt;= TO_NUMBER(#searchWorkYearS#)
	                            AND D.DPOB_CD = A.DPOB_CD
	                            AND D.COMM_CD = A.LOG_SVC_YR_NUM_CD
	                        )
		 	 </isNotEmpty>
		 </isNotNull>
		 <isNotNull property="searchWorkYearE">
		     <isNotEmpty property="searchWorkYearE">
		 		AND EXISTS ( 
	                        SELECT E.COMM_CD FROM BASS0300 E 
	                        WHERE RPSTTV_CD = 'A007'
	                            AND TO_NUMBER(MANGE_ITEM01) &lt;= TO_NUMBER(#searchWorkYearE#)
	                            AND E.DPOB_CD = A.DPOB_CD
	                            AND E.COMM_CD = A.LOG_SVC_YR_NUM_CD
	                        )
		 	 </isNotEmpty>
		 </isNotNull>  
	</sql>
	 -->
	
	<!-- 기본 엑셀 저장 -->
	<!-- <select id="psnl0600DAO.selectPsnl0600" parameterClass="hashMap" resultClass="egovMap"> -->
	<select id="psnl0600DAO.selectPsnl0600" parameterClass="psnl0600SrhVO" resultClass="egovMap">
	    <![CDATA[
	    SELECT ROW_NUMBER() OVER(ORDER BY (SELECT LPAD(DEPT_RANK,5,'0') FROM BASS0400 NN WHERE NN.DEPT_CD = A.CURR_AFFN_DEPT_CD)
	           , A.EMYMT_DIV_CD,A.TYP_OCCU_CD, A.PYSP_GRDE_CD,A.RESN_REGN_NUM ) AS RNUM 
		       , FCBASS0400CDNM (A.DPOB_CD, A.CURR_AFFN_DEPT_CD, '2') AS CURR_DEPT_NM
		       , FCBASS0400CDNM (A.DPOB_CD, A.DEPT_CD, '2') AS DEPT_NM
		       , FCBASS0300CDNM(A.DPOB_CD, A.EMYMT_DIV_CD) as EMYMT_DIV_NM
		       , A.HAN_NM
		       , SUBSTR(A.RESN_REGN_NUM,0,6)||'-'||SUBSTR(A.RESN_REGN_NUM,7) AS RESN_REGN_NUM
		       , fcBass0320CDNM(A.DPOB_CD, A.TYP_OCCU_CD) AS  TYPE_OCCU_NM 
		       , A.DTIL_OCCU_INTTN_CD 
		       , fcBassEx0350CDNM(A.DPOB_CD,A.TYP_OCCU_CD,A.DTIL_OCCU_INTTN_CD,'1' ) AS DTIL_OCCU_INTTN_NM
		       , FCBASS0500CDNM (A.DPOB_CD, SUBSTR (A.EMYMT_BGNN_DT, 1, 4), A.CURR_AFFN_DEPT_CD, A.BUSIN_CD) AS BUSIN_NM
		       , FCBASS0300CDNM(A.DPOB_CD, A.HDOFC_CODTN_CD) as HDOFC_CODTN_NM
		       , DECODE(LENGTH(A.FRST_EMYMT_DT), 8, TO_CHAR(TO_DATE(A.FRST_EMYMT_DT,'YYYYMMDD'),'YYYY.MM.DD'),A.FRST_EMYMT_DT) AS FRST_EMYMT_DT
		       , DECODE(LENGTH(A.CURR_DEPT_APPMT_DT), 8, TO_CHAR(TO_DATE(A.CURR_DEPT_APPMT_DT,'YYYYMMDD'),'YYYY.MM.DD'),A.CURR_DEPT_APPMT_DT) AS CURR_DEPT_APPMT_DT
		       , DECODE(LENGTH(A.RETRY_DT), 8, TO_CHAR(TO_DATE(A.RETRY_DT,'YYYYMMDD'),'YYYY.MM.DD'),A.RETRY_DT) AS RETRY_DT
		       , FCBASS0300CDNM(A.DPOB_CD,A.LOG_SVC_YR_NUM_CD) AS LOG_SVC_YR_NUM_NM
		       , FCBASS0300CDNM(A.DPOB_CD,A.LOG_SVC_MNTH_ICM_CD ) AS LOG_SVC_MNTH_ICM_NM
		       , FCBASS0300CDNM(A.DPOB_CD,B.DABTY_DIV_CD) AS DABTY_DIV_NM 
		       , C.HUS_ROAD_NM_FNDTN_ADDR || C.HUS_ROAD_NM_DTL_PATR_ADDR AS ADDR
		       , C.HUS_PHN_NUM
		       , C.CELL_PHNE_NUM
		       , C.EMAIL_ADDR
		       , A.PERN_NOTE_CTNT
		       , A.SYSTEMKEY 
		 FROM PSNL0100 A, PSNL0113 B, PSNL0111 C, PAYR0500 D
		 WHERE A.DPOB_CD = B.DPOB_CD(+)
		      AND A.SYSTEMKEY = B.SYSTEMKEY(+)
		      AND A.DPOB_CD = C.DPOB_CD(+)
		      AND A.SYSTEMKEY = C.SYSTEMKEY(+)
		      AND A.DPOB_CD = D.DPOB_CD(+)
		      AND A.SYSTEMKEY = D.SYSTEMKEY(+)
		 ]]>
		 <include refid="defaultWhereSql"/>
		 <isNotNull property="emymtDivCd">
		     <isNotEmpty property="emymtDivCd">
		 		AND A.EMYMT_DIV_CD = #emymtDivCd#
		 	 </isNotEmpty>
		 </isNotNull>
		 
		<isNotEmpty property="hdofcCodtnCd" prepend="AND">
			<![CDATA[
				A.HDOFC_CODTN_CD
			]]>
			<iterate prepend="IN" property="hdofcCodtnCdArr" open="(" close=")" conjunction=",">
				 #hdofcCodtnCdArr[]#
			</iterate>
		</isNotEmpty> 		 
		 
		<isNotNull property="payrMangDeptCd">
			<isNotEmpty property="payrMangDeptCd" >
		  AND EXISTS  (
                         SELECT  C.DPOB_CD,
                                 C.DTIL_OCCU_INTTN_CD,
                                 C.TYP_OCCU_CD,
                                 C.DEPT_CD FROM 
                                             ( SELECT * 
                                                 FROM TABLE(PKG_DTIL_AUTH.FN_DTIL_AUTH_TB(#dpobCd#,#payrMangDeptYn#,#payrMangDeptCd#,#deptCd#,#usrId#,#deptCdAuth#,'' )) ) C
                                            WHERE     C.DPOB_CD = A.DPOB_CD
						                        AND C.DEPT_CD = A.CURR_AFFN_DEPT_CD
						                        AND NVL(C.TYP_OCCU_CD,'TT')  = NVL(A.TYP_OCCU_CD,'TT') 
                                                AND NVL(C.DTIL_OCCU_INTTN_CD,'TT')  = NVL(A.DTIL_OCCU_INTTN_CD,'TT')
                                               <isNotEmpty property="deptCd" prepend="AND">
												<![CDATA[
												 C.DEPT_CD
												]]>
												<iterate prepend="IN" property="deptCdArr" open="(" close=")" conjunction=",">
												 #deptCdArr[]#
												</iterate>
												</isNotEmpty> 
						                        
                                           <!--   <isNotNull property="searchCurrDeptCd"> 
                                            <isNotEmpty property="searchCurrDeptCd" prepend="AND"> 
                                                 C.DEPT_CD = #searchCurrDeptCd#
                                            </isNotEmpty>   
                                           </isNotNull>   
                                       <isNotEmpty property="deptCd" prepend="AND">
                                                <![CDATA[
                                                 C.DEPT_CD
                                                ]]>
                                                <iterate prepend="IN" property="deptCdArr" open="(" close=")" conjunction=",">
                                                 #deptCdArr[]#
                                                </iterate>
                                                </isNotEmpty>  --> 
		) 
		</isNotEmpty> 
	</isNotNull>
		ORDER BY  A.DPOB_CD ASC , A.RESN_REGN_NUM ASC
	</select>
	
	
	<!-- 기본 테스트 -->
	<select id="psnl0600DAO.selectPsnl0600List" parameterClass="psnl0600SrhVO" resultClass="egovMap">
	<![CDATA[
	SELECT * FROM (
		SELECT ROWNUM RNUM, T.*
		  FROM (	SELECT DISTINCT SYSTEMKEY
				                    , DPOB_CD
				                    , CURR_DEPT_NM
				                    , DEPT_NM
				                    , EMYMT_DIV_NM
				                    , HAN_NM
				                    , RESN_REGN_NUM
				                    , TYPE_OCCU_NM
				                    , DTIL_OCCU_INTTN_CD
				                    , DTIL_OCCU_INTTN_NM
				                    , BUSIN_NM
				                    , HDOFC_CODTN_NM
				                    , FRST_EMYMT_DT
				                    , CURR_DEPT_APPMT_DT
				                    , RETRY_DT
				                    , LOG_SVC_YR_NUM_NM
				                    , LOG_SVC_MNTH_ICM_NM
				                    , DABTY_DIV_NM
				                    , ADDR
				                    , HUS_PHN_NUM
				                    , CELL_PHNE_NUM
				                    , EMAIL_ADDR
				                    , PERN_NOTE_CTNT
				                    , SX_DIV_CD
				                    , SX_DIV_NM
					
		 				FROM  (    SELECT A.SYSTEMKEY
				                         , A.DPOB_CD
				                         , FCBASS0400CDNM (A.DPOB_CD, A.CURR_AFFN_DEPT_CD, '2') AS CURR_DEPT_NM
				                         , FCBASS0400CDNM (A.DPOB_CD, A.DEPT_CD, '2') AS DEPT_NM
				                         , FCBASS0300CDNM (A.DPOB_CD, A.EMYMT_DIV_CD) AS EMYMT_DIV_NM
				                         , A.HAN_NM
				                         , SUBSTR (A.RESN_REGN_NUM, 0, 6) || '-' || SUBSTR (A.RESN_REGN_NUM, 7)AS RESN_REGN_NUM
				                         , fcBass0320CDNM (A.DPOB_CD , A.TYP_OCCU_CD) AS TYPE_OCCU_NM
				                         , A.DTIL_OCCU_INTTN_CD
				                         , fcBassEx0350CDNM (A.DPOB_CD, A.TYP_OCCU_CD, A.DTIL_OCCU_INTTN_CD,'1')AS DTIL_OCCU_INTTN_NM
				                         , FCBASS0500CDNM (A.DPOB_CD,SUBSTR (A.EMYMT_BGNN_DT, 1, 4),A.CURR_AFFN_DEPT_CD, A.BUSIN_CD)AS BUSIN_NM
				                         , FCBASS0300CDNM (A.DPOB_CD, A.HDOFC_CODTN_CD) AS HDOFC_CODTN_NM
				                       /*  , DECODE (LENGTH (A.FRST_EMYMT_DT),8, TO_CHAR (TO_DATE (A.FRST_EMYMT_DT, 'YYYYMMDD'), 'YYYY.MM.DD'),A.FRST_EMYMT_DT)AS FRST_EMYMT_DT	*/
				                         , DECODE (E.FRST_BSE_EMYMT_DT, '', TO_CHAR (TO_DATE (A.FRST_EMYMT_DT, 'YYYYMMDD'), 'YYYY.MM.DD') , TO_CHAR (TO_DATE (E.FRST_BSE_EMYMT_DT, 'YYYYMMDD'), 'YYYY.MM.DD'))AS FRST_EMYMT_DT 
				                         , DECODE (LENGTH (A.CURR_DEPT_APPMT_DT),8, TO_CHAR (TO_DATE (A.CURR_DEPT_APPMT_DT, 'YYYYMMDD'),'YYYY.MM.DD'), A.CURR_DEPT_APPMT_DT)AS CURR_DEPT_APPMT_DT
				                         , DECODE (LENGTH (A.RETRY_DT), 8, TO_CHAR (TO_DATE (A.RETRY_DT, 'YYYYMMDD'), 'YYYY.MM.DD'), A.RETRY_DT)AS RETRY_DT
				                         , FCBASS0300CDNM (A.DPOB_CD, A.LOG_SVC_YR_NUM_CD) AS LOG_SVC_YR_NUM_NM
				                         , FCBASS0300CDNM (A.DPOB_CD, A.LOG_SVC_MNTH_ICM_CD)AS LOG_SVC_MNTH_ICM_NM
				                         , FCBASS0300CDNM (A.DPOB_CD, B.DABTY_DIV_CD) AS DABTY_DIV_NM
				                         , C.HUS_ROAD_NM_FNDTN_ADDR || C.HUS_ROAD_NM_DTL_PATR_ADDR AS ADDR
				                         , C.HUS_PHN_NUM
				                         , C.CELL_PHNE_NUM
				                         , C.EMAIL_ADDR
				                         , A.PERN_NOTE_CTNT
				                         , A.SX_DIV_CD
				                         , FCBASS0300CDNM (A.DPOB_CD, A.SX_DIV_CD) AS SX_DIV_NM
					                FROM PSNL0100 A,
					                     PSNL0113 B,
					                     PSNL0111 C,
					                     PAYR0500 D,
					                     PSNL0101 E         
					               WHERE     A.DPOB_CD 		= B.DPOB_CD(+)
					                     AND A.SYSTEMKEY 	= B.SYSTEMKEY(+)
					                     
					                     AND A.DPOB_CD 		= C.DPOB_CD(+)
					                     AND A.SYSTEMKEY 	= C.SYSTEMKEY(+)
					                     
					                     AND A.DPOB_CD 		= D.DPOB_CD(+)
					                     AND A.SYSTEMKEY 	= D.SYSTEMKEY(+)
					                     
					                     AND A.DPOB_CD 		= E.DPOB_CD(+)
					                     AND A.SYSTEMKEY 	= E.SYSTEMKEY(+)
					                     AND A.EMYMT_DIV_CD = E.EMYMT_DIV_CD(+)
	]]>	 
					 				<include refid="defaultWhereSql"/>
					 				
					 				<isNotNull property="emymtDivCd">
								     	<isNotEmpty property="emymtDivCd">
								 			AND A.EMYMT_DIV_CD = #emymtDivCd#
								 	 	</isNotEmpty>
								 	</isNotNull>
								 	
									<isNotEmpty property="hdofcCodtnCd" prepend="AND">
										<![CDATA[
											A.HDOFC_CODTN_CD
										]]>
										<iterate prepend="IN" property="hdofcCodtnCdArr" open="(" close=")" conjunction=",">
											 #hdofcCodtnCdArr[]#
										</iterate>
									</isNotEmpty> 
								 	
									<isNotNull property="payrMangDeptCd">
										<isNotEmpty property="payrMangDeptCd" >
									  	AND EXISTS  (
							                         SELECT  C.DPOB_CD,
							                                 C.DTIL_OCCU_INTTN_CD,
							                                 C.TYP_OCCU_CD,
							                                 C.DEPT_CD FROM 
							                                             ( SELECT * 
                                                 FROM TABLE(PKG_DTIL_AUTH.FN_DTIL_AUTH_TB(#dpobCd#,#payrMangDeptYn#,#payrMangDeptCd#,#deptCd#,#usrId#,#deptCdAuth#,'' )) ) C
							                                            WHERE     C.DPOB_CD = A.DPOB_CD
													                        AND C.DEPT_CD = A.CURR_AFFN_DEPT_CD
													                        AND NVL(C.TYP_OCCU_CD,'TT')  = NVL(A.TYP_OCCU_CD,'TT') 
							                                                AND NVL(C.DTIL_OCCU_INTTN_CD,'TT')  = NVL(A.DTIL_OCCU_INTTN_CD,'TT')
							                                                
							                                                <isNotEmpty property="deptCd" prepend="AND">
																			    C.DEPT_CD IN ( SELECT BA0400.DEPT_CD
																										FROM BASS0400 BA0400
																									WHERE BA0400.DEPT_USE_YN = 'Y'
																									START WITH BA0400.DEPT_CD 							
																										<iterate prepend="IN" property="deptCdArr" open="(" close=")" conjunction=",">
																											#deptCdArr[]#
																										</iterate>
																			                         CONNECT BY PRIOR BA0400.DEPT_CD = BA0400.HHRK_DEPT_CD
																									 ) 
																			</isNotEmpty>
							                                                
							                                                <!-- 
							                                               <isNotEmpty property="deptCd" prepend="AND">
																			<![CDATA[
																			 C.DEPT_CD
																			]]>
																			<iterate prepend="IN" property="deptCdArr" open="(" close=")" conjunction=",">
																			 #deptCdArr[]#
																			</iterate>
																			</isNotEmpty> 
																			 -->
														) 
										</isNotEmpty> 
									</isNotNull>
						
			 				<isEqual property="srhFlag" compareValue="Y">
								 				
			 <![CDATA[		UNION ALL
			 				
			 				SELECT A.SYSTEMKEY
				                         , A.DPOB_CD
				                         , FCBASS0400CDNM (F.DPOB_CD, F.DEPT_CD, '2') AS CURR_DEPT_NM
				                         , FCBASS0400CDNM (A.DPOB_CD, A.DEPT_CD, '2') AS DEPT_NM
				                         , FCBASS0300CDNM (F.DPOB_CD, F.EMYMT_DIV_CD) AS EMYMT_DIV_NM
				                         , A.HAN_NM
				                         , SUBSTR (A.RESN_REGN_NUM, 0, 6) || '-' || SUBSTR (A.RESN_REGN_NUM, 7)AS RESN_REGN_NUM
				                         , fcBass0320CDNM (F.DPOB_CD, F.TYP_OCCU_CD) AS TYPE_OCCU_NM
				                         , F.DTIL_OCCU_INTTN_CD
				                         , fcBassEx0350CDNM (F.DPOB_CD, F.TYP_OCCU_CD, F.DTIL_OCCU_INTTN_CD,'1')AS DTIL_OCCU_INTTN_NM
				                         , FCBASS0500CDNM (F.DPOB_CD,SUBSTR (A.EMYMT_BGNN_DT, 1, 4),F.DEPT_CD, F.BUSIN_CD)AS BUSIN_NM
				                         , FCBASS0300CDNM (A.DPOB_CD, 'A0030020') AS HDOFC_CODTN_NM
				                      /*   , DECODE (LENGTH (A.FRST_EMYMT_DT),8, TO_CHAR (TO_DATE (A.FRST_EMYMT_DT, 'YYYYMMDD'), 'YYYY.MM.DD'),A.FRST_EMYMT_DT)AS FRST_EMYMT_DT	*/
				                      	 , DECODE (E.FRST_BSE_EMYMT_DT, '', TO_CHAR (TO_DATE (A.FRST_EMYMT_DT, 'YYYYMMDD'), 'YYYY.MM.DD') , TO_CHAR (TO_DATE (E.FRST_BSE_EMYMT_DT, 'YYYYMMDD'), 'YYYY.MM.DD'))AS FRST_EMYMT_DT 
				                         , DECODE (LENGTH (A.CURR_DEPT_APPMT_DT),8, TO_CHAR (TO_DATE (A.CURR_DEPT_APPMT_DT, 'YYYYMMDD'),'YYYY.MM.DD'), A.CURR_DEPT_APPMT_DT)AS CURR_DEPT_APPMT_DT
				                         , DECODE (LENGTH (A.RETRY_DT), 8, TO_CHAR (TO_DATE (A.RETRY_DT, 'YYYYMMDD'), 'YYYY.MM.DD'), A.RETRY_DT)AS RETRY_DT
				                         , FCBASS0300CDNM (A.DPOB_CD, A.LOG_SVC_YR_NUM_CD) AS LOG_SVC_YR_NUM_NM
				                         , FCBASS0300CDNM (A.DPOB_CD, A.LOG_SVC_MNTH_ICM_CD)AS LOG_SVC_MNTH_ICM_NM
				                         , FCBASS0300CDNM (A.DPOB_CD, B.DABTY_DIV_CD) AS DABTY_DIV_NM
				                         , C.HUS_ROAD_NM_FNDTN_ADDR || C.HUS_ROAD_NM_DTL_PATR_ADDR AS ADDR
				                         , C.HUS_PHN_NUM
				                         , C.CELL_PHNE_NUM
				                         , C.EMAIL_ADDR
				                         , A.PERN_NOTE_CTNT
				                         , A.SX_DIV_CD
				                         , FCBASS0300CDNM (A.DPOB_CD, A.SX_DIV_CD) AS SX_DIV_NM
					                FROM PSNL0100 A,
					                     PSNL0113 B,
					                     PSNL0111 C,
					                     PAYR0500 D,
					                     PSNL0110 F,
					                     PSNL0101 E         
					               WHERE     A.DPOB_CD 		= B.DPOB_CD(+)
					                     AND A.SYSTEMKEY 	= B.SYSTEMKEY(+)
					                     
					                     AND A.DPOB_CD 		= C.DPOB_CD(+)
					                     AND A.SYSTEMKEY 	= C.SYSTEMKEY(+)
					                     
					                     AND A.DPOB_CD 		= D.DPOB_CD(+)
					                     AND A.SYSTEMKEY 	= D.SYSTEMKEY(+)
					                     
					                     AND A.DPOB_CD 		= F.DPOB_CD(+)
                     					 AND A.SYSTEMKEY 	= F.SYSTEMKEY(+) 
                     					 
                     					 AND A.DPOB_CD 		= E.DPOB_CD(+)
					                     AND A.SYSTEMKEY 	= E.SYSTEMKEY(+)
					                     AND F.EMYMT_DIV_CD = E.EMYMT_DIV_CD
					                     
                     					 AND F.EMYMT_BGNN_DT = ( SELECT MAX(EMYMT_BGNN_DT)
				                                                  FROM PSNL0110
				                                                 WHERE DPOB_CD = F.DPOB_CD
				                                 					AND SYSTEMKEY = F.SYSTEMKEY
				                                           			AND EMYMT_DIV_CD = F.EMYMT_DIV_CD
				                                      				AND EMYMT_TYP_CD NOT IN ('A0420990')
                           										)	
                     					 
                     					  
             ]]>	        			
										<include refid="defaultWhereSql"/> 
										<isEqual property="emymtDivCd" compareValue="A0020010">
										 
										 AND A.EMYMT_DIV_CD='A0020020'
						 				 AND F.EMYMT_DIV_CD='A0020010'
						 				 
										</isEqual> 
										
										<isEqual property="emymtDivCd" compareValue="A0020020">
										 
										 AND A.EMYMT_DIV_CD='A0020010'
						 				 AND F.EMYMT_DIV_CD='A0020020'
						 				 
										</isEqual> 
                     					 
					 
									<isNotNull property="payrMangDeptCd">
										<isNotEmpty property="payrMangDeptCd" >
									  	AND EXISTS  (
							                         SELECT  C.DPOB_CD,
							                                 C.DTIL_OCCU_INTTN_CD,
							                                 C.TYP_OCCU_CD,
							                                 C.DEPT_CD FROM 
							                                             ( SELECT * 
                                                 FROM TABLE(PKG_DTIL_AUTH.FN_DTIL_AUTH_TB(#dpobCd#,#payrMangDeptYn#,#payrMangDeptCd#,#deptCd#,#usrId#,#deptCdAuth#,'' )) ) C
							                                            WHERE     C.DPOB_CD = A.DPOB_CD
													                        AND C.DEPT_CD = A.CURR_AFFN_DEPT_CD
													                        AND NVL(C.TYP_OCCU_CD,'TT')  = NVL(A.TYP_OCCU_CD,'TT') 
							                                                AND NVL(C.DTIL_OCCU_INTTN_CD,'TT')  = NVL(A.DTIL_OCCU_INTTN_CD,'TT')
							                                                
							                                                <isNotEmpty property="deptCd" prepend="AND">
																			    C.DEPT_CD IN ( SELECT BA0400.DEPT_CD
																										FROM BASS0400 BA0400
																									WHERE BA0400.DEPT_USE_YN = 'Y'
																									START WITH BA0400.DEPT_CD 							
																										<iterate prepend="IN" property="deptCdArr" open="(" close=")" conjunction=",">
																											#deptCdArr[]#
																										</iterate>
																			                         CONNECT BY PRIOR BA0400.DEPT_CD = BA0400.HHRK_DEPT_CD
																									 ) 
																			</isNotEmpty>	
																									                                                
							                                                <!-- 
							                                               <isNotEmpty property="deptCd" prepend="AND">
																			<![CDATA[
																			 C.DEPT_CD
																			]]>
																			<iterate prepend="IN" property="deptCdArr" open="(" close=")" conjunction=",">
																			 #deptCdArr[]#
																			</iterate>
																			</isNotEmpty> 
																			 -->
														) 
										</isNotEmpty> 
									</isNotNull>
			 				
			 				</isEqual>
			 				
								)
	<isNotEqual  property="lastIndex" compareValue="-1">
 	<![CDATA[					
				) T WHERE ROWNUM <= #lastIndex#
		)WHERE RNUM >= #firstIndex#
	]]>
	</isNotEqual>	
	<isEqual   property="lastIndex" compareValue="-1">
  	<![CDATA[					
		) T  
	)
	]]>		
	</isEqual>
		
	</select>
	
	<select id="psnl0600DAO.selectPsnl0600ToA0410020List" parameterClass="psnl0600SrhVO" resultClass="egovMap">
	<![CDATA[
	SELECT * FROM (
		SELECT ROWNUM RNUM, T.*
		  FROM (	SELECT DISTINCT SYSTEMKEY
				                    , DPOB_CD
				                    , CURR_DEPT_NM
				                    , DEPT_NM
				                    , EMYMT_DIV_NM
				                    , HAN_NM
				                    , RESN_REGN_NUM
				                    , TYPE_OCCU_NM
				                    , DTIL_OCCU_INTTN_CD
				                    , DTIL_OCCU_INTTN_NM
				                    , BUSIN_NM
				                    , HDOFC_CODTN_NM
				                    , FRST_EMYMT_DT
				                    , CURR_DEPT_APPMT_DT
				                    , RETRY_DT
				                    , LOG_SVC_YR_NUM_NM
				                    , LOG_SVC_MNTH_ICM_NM
				                    , DABTY_DIV_NM
				                    , ADDR
				                    , HUS_PHN_NUM
				                    , CELL_PHNE_NUM
				                    , EMAIL_ADDR
				                    , PERN_NOTE_CTNT
				                    , SX_DIV_CD
				                    , SX_DIV_NM
					
		 				FROM  (    SELECT A.SYSTEMKEY
				                         , A.DPOB_CD
				                         , FCBASS0400CDNM (A.DPOB_CD, A.CURR_AFFN_DEPT_CD, '2') AS CURR_DEPT_NM
				                         , FCBASS0400CDNM (A.DPOB_CD, A.DEPT_CD, '2') AS DEPT_NM
				                         , FCBASS0300CDNM (A.DPOB_CD, A.EMYMT_DIV_CD) AS EMYMT_DIV_NM
				                         , A.HAN_NM
				                         , SUBSTR (A.RESN_REGN_NUM, 0, 6) || '-' || SUBSTR (A.RESN_REGN_NUM, 7)AS RESN_REGN_NUM
				                         , fcBass0320CDNM (A.DPOB_CD , A.TYP_OCCU_CD) AS TYPE_OCCU_NM
				                         , A.DTIL_OCCU_INTTN_CD
				                         , fcBassEx0350CDNM (A.DPOB_CD, A.TYP_OCCU_CD, A.DTIL_OCCU_INTTN_CD,'1')AS DTIL_OCCU_INTTN_NM
				                         , FCBASS0500CDNM (A.DPOB_CD,SUBSTR (A.EMYMT_BGNN_DT, 1, 4),A.CURR_AFFN_DEPT_CD, A.BUSIN_CD)AS BUSIN_NM
				                         , FCBASS0300CDNM (A.DPOB_CD, A.HDOFC_CODTN_CD) AS HDOFC_CODTN_NM
				                       /*  , DECODE (LENGTH (A.FRST_EMYMT_DT),8, TO_CHAR (TO_DATE (A.FRST_EMYMT_DT, 'YYYYMMDD'), 'YYYY.MM.DD'),A.FRST_EMYMT_DT)AS FRST_EMYMT_DT	*/
				                         , DECODE (E.FRST_BSE_EMYMT_DT, '', TO_CHAR (TO_DATE (A.FRST_EMYMT_DT, 'YYYYMMDD'), 'YYYY.MM.DD') , TO_CHAR (TO_DATE (E.FRST_BSE_EMYMT_DT, 'YYYYMMDD'), 'YYYY.MM.DD'))AS FRST_EMYMT_DT 
				                         , DECODE (LENGTH (A.EMYMT_BGNN_DT),8, TO_CHAR (TO_DATE (A.EMYMT_BGNN_DT, 'YYYYMMDD'),'YYYY.MM.DD'), A.EMYMT_BGNN_DT)AS CURR_DEPT_APPMT_DT
				                         , DECODE (LENGTH (A.RETRY_DT), 8, TO_CHAR (TO_DATE (A.RETRY_DT, 'YYYYMMDD'), 'YYYY.MM.DD'), A.RETRY_DT)AS RETRY_DT
				                         , FCBASS0300CDNM (A.DPOB_CD, A.LOG_SVC_YR_NUM_CD) AS LOG_SVC_YR_NUM_NM
				                         , FCBASS0300CDNM (A.DPOB_CD, A.LOG_SVC_MNTH_ICM_CD)AS LOG_SVC_MNTH_ICM_NM
				                         , FCBASS0300CDNM (A.DPOB_CD, B.DABTY_DIV_CD) AS DABTY_DIV_NM
				                         , C.HUS_ROAD_NM_FNDTN_ADDR || C.HUS_ROAD_NM_DTL_PATR_ADDR AS ADDR
				                         , C.HUS_PHN_NUM
				                         , C.CELL_PHNE_NUM
				                         , C.EMAIL_ADDR
				                         , A.PERN_NOTE_CTNT
				                         , A.SX_DIV_CD
				                         , FCBASS0300CDNM (A.DPOB_CD, A.SX_DIV_CD) AS SX_DIV_NM
					                FROM PSNL0100 A,
					                     PSNL0113 B,
					                     PSNL0111 C,
					                     PAYR0500 D,
					                     PSNL0101 E         
					               WHERE     A.DPOB_CD 		= B.DPOB_CD(+)
					                     AND A.SYSTEMKEY 	= B.SYSTEMKEY(+)
					                     
					                     AND A.DPOB_CD 		= C.DPOB_CD(+)
					                     AND A.SYSTEMKEY 	= C.SYSTEMKEY(+)
					                     
					                     AND A.DPOB_CD 		= D.DPOB_CD(+)
					                     AND A.SYSTEMKEY 	= D.SYSTEMKEY(+)
					                     
					                     AND A.DPOB_CD 		= E.DPOB_CD(+)
					                     AND A.SYSTEMKEY 	= E.SYSTEMKEY(+)
					                     AND A.EMYMT_DIV_CD = E.EMYMT_DIV_CD(+)
	]]>	 
					 				<include refid="defaultWhereSql"/>
					 				
					 				<isNotNull property="emymtDivCd">
								     	<isNotEmpty property="emymtDivCd">
								 			AND A.EMYMT_DIV_CD = #emymtDivCd#
								 	 	</isNotEmpty>
								 	</isNotNull>
								 	
									<isNotEmpty property="hdofcCodtnCd" prepend="AND">
										<![CDATA[
											A.HDOFC_CODTN_CD
										]]>
										<iterate prepend="IN" property="hdofcCodtnCdArr" open="(" close=")" conjunction=",">
											 #hdofcCodtnCdArr[]#
										</iterate>
									</isNotEmpty> 
								 	
									<isNotNull property="payrMangDeptCd">
										<isNotEmpty property="payrMangDeptCd" >
									  	AND EXISTS  (
							                         SELECT  C.DPOB_CD,
							                                 C.DTIL_OCCU_INTTN_CD,
							                                 C.TYP_OCCU_CD,
							                                 C.DEPT_CD FROM 
							                                             ( SELECT * 
                                                 FROM TABLE(PKG_DTIL_AUTH.FN_DTIL_AUTH_TB(#dpobCd#,#payrMangDeptYn#,#payrMangDeptCd#,#deptCd#,#usrId#,#deptCdAuth#,'' )) ) C
							                                            WHERE     C.DPOB_CD = A.DPOB_CD
													                        AND C.DEPT_CD = A.CURR_AFFN_DEPT_CD
													                        AND NVL(C.TYP_OCCU_CD,'TT')  = NVL(A.TYP_OCCU_CD,'TT') 
							                                                AND NVL(C.DTIL_OCCU_INTTN_CD,'TT')  = NVL(A.DTIL_OCCU_INTTN_CD,'TT')
							                                                
							                                                <isNotEmpty property="deptCd" prepend="AND">
																			    C.DEPT_CD IN ( SELECT BA0400.DEPT_CD
																										FROM BASS0400 BA0400
																									WHERE BA0400.DEPT_USE_YN = 'Y'
																									START WITH BA0400.DEPT_CD 							
																										<iterate prepend="IN" property="deptCdArr" open="(" close=")" conjunction=",">
																											#deptCdArr[]#
																										</iterate>
																			                         CONNECT BY PRIOR BA0400.DEPT_CD = BA0400.HHRK_DEPT_CD
																									 ) 
																			</isNotEmpty>
							                                                
							                                                <!-- 
							                                               <isNotEmpty property="deptCd" prepend="AND">
																			<![CDATA[
																			 C.DEPT_CD
																			]]>
																			<iterate prepend="IN" property="deptCdArr" open="(" close=")" conjunction=",">
																			 #deptCdArr[]#
																			</iterate>
																			</isNotEmpty> 
																			 -->
														) 
										</isNotEmpty> 
									</isNotNull>
						
			 				<isEqual property="srhFlag" compareValue="Y">
								 				
			 <![CDATA[		UNION ALL
			 				
			 				SELECT A.SYSTEMKEY
				                         , A.DPOB_CD
				                         , FCBASS0400CDNM (F.DPOB_CD, F.DEPT_CD, '2') AS CURR_DEPT_NM
				                         , FCBASS0400CDNM (A.DPOB_CD, A.DEPT_CD, '2') AS DEPT_NM
				                         , FCBASS0300CDNM (F.DPOB_CD, F.EMYMT_DIV_CD) AS EMYMT_DIV_NM
				                         , A.HAN_NM
				                         , SUBSTR (A.RESN_REGN_NUM, 0, 6) || '-' || SUBSTR (A.RESN_REGN_NUM, 7)AS RESN_REGN_NUM
				                         , fcBass0320CDNM (F.DPOB_CD, F.TYP_OCCU_CD) AS TYPE_OCCU_NM
				                         , F.DTIL_OCCU_INTTN_CD
				                         , fcBassEx0350CDNM (F.DPOB_CD, F.TYP_OCCU_CD, F.DTIL_OCCU_INTTN_CD,'1')AS DTIL_OCCU_INTTN_NM
				                         , FCBASS0500CDNM (F.DPOB_CD,SUBSTR (A.EMYMT_BGNN_DT, 1, 4),F.DEPT_CD, F.BUSIN_CD)AS BUSIN_NM
				                         , FCBASS0300CDNM (A.DPOB_CD, 'A0030020') AS HDOFC_CODTN_NM
				                      /*   , DECODE (LENGTH (A.FRST_EMYMT_DT),8, TO_CHAR (TO_DATE (A.FRST_EMYMT_DT, 'YYYYMMDD'), 'YYYY.MM.DD'),A.FRST_EMYMT_DT)AS FRST_EMYMT_DT	*/
				                      	 , DECODE (E.FRST_BSE_EMYMT_DT, '', TO_CHAR (TO_DATE (A.FRST_EMYMT_DT, 'YYYYMMDD'), 'YYYY.MM.DD') , TO_CHAR (TO_DATE (E.FRST_BSE_EMYMT_DT, 'YYYYMMDD'), 'YYYY.MM.DD'))AS FRST_EMYMT_DT 
				                         , DECODE (LENGTH (A.CURR_DEPT_APPMT_DT),8, TO_CHAR (TO_DATE (A.CURR_DEPT_APPMT_DT, 'YYYYMMDD'),'YYYY.MM.DD'), A.CURR_DEPT_APPMT_DT)AS CURR_DEPT_APPMT_DT
				                         , DECODE (LENGTH (A.RETRY_DT), 8, TO_CHAR (TO_DATE (A.RETRY_DT, 'YYYYMMDD'), 'YYYY.MM.DD'), A.RETRY_DT)AS RETRY_DT
				                         , FCBASS0300CDNM (A.DPOB_CD, A.LOG_SVC_YR_NUM_CD) AS LOG_SVC_YR_NUM_NM
				                         , FCBASS0300CDNM (A.DPOB_CD, A.LOG_SVC_MNTH_ICM_CD)AS LOG_SVC_MNTH_ICM_NM
				                         , FCBASS0300CDNM (A.DPOB_CD, B.DABTY_DIV_CD) AS DABTY_DIV_NM
				                         , C.HUS_ROAD_NM_FNDTN_ADDR || C.HUS_ROAD_NM_DTL_PATR_ADDR AS ADDR
				                         , C.HUS_PHN_NUM
				                         , C.CELL_PHNE_NUM
				                         , C.EMAIL_ADDR
				                         , A.PERN_NOTE_CTNT
				                         , A.SX_DIV_CD
				                         , FCBASS0300CDNM (A.DPOB_CD, A.SX_DIV_CD) AS SX_DIV_NM
					                FROM PSNL0100 A,
					                     PSNL0113 B,
					                     PSNL0111 C,
					                     PAYR0500 D,
					                     PSNL0110 F,
					                     PSNL0101 E         
					               WHERE     A.DPOB_CD 		= B.DPOB_CD(+)
					                     AND A.SYSTEMKEY 	= B.SYSTEMKEY(+)
					                     
					                     AND A.DPOB_CD 		= C.DPOB_CD(+)
					                     AND A.SYSTEMKEY 	= C.SYSTEMKEY(+)
					                     
					                     AND A.DPOB_CD 		= D.DPOB_CD(+)
					                     AND A.SYSTEMKEY 	= D.SYSTEMKEY(+)
					                     
					                     AND A.DPOB_CD 		= F.DPOB_CD(+)
                     					 AND A.SYSTEMKEY 	= F.SYSTEMKEY(+) 
                     					 
                     					 AND A.DPOB_CD 		= E.DPOB_CD(+)
					                     AND A.SYSTEMKEY 	= E.SYSTEMKEY(+)
					                     AND F.EMYMT_DIV_CD = E.EMYMT_DIV_CD
					                     
                     					 AND F.EMYMT_BGNN_DT = ( SELECT MAX(EMYMT_BGNN_DT)
				                                                  FROM PSNL0110
				                                                 WHERE DPOB_CD = F.DPOB_CD
				                                 					AND SYSTEMKEY = F.SYSTEMKEY
				                                           			AND EMYMT_DIV_CD = F.EMYMT_DIV_CD
				                                      				AND EMYMT_TYP_CD NOT IN ('A0420990')
                           										)	
                     					 
                     					  
             ]]>	        			
										<include refid="defaultWhereSql"/> 
										<isEqual property="emymtDivCd" compareValue="A0020010">
										 
										 AND A.EMYMT_DIV_CD='A0020020'
						 				 AND F.EMYMT_DIV_CD='A0020010'
						 				 
										</isEqual> 
										
										<isEqual property="emymtDivCd" compareValue="A0020020">
										 
										 AND A.EMYMT_DIV_CD='A0020010'
						 				 AND F.EMYMT_DIV_CD='A0020020'
						 				 
										</isEqual> 
                     					 
					 
									<isNotNull property="payrMangDeptCd">
										<isNotEmpty property="payrMangDeptCd" >
									  	AND EXISTS  (
							                         SELECT  C.DPOB_CD,
							                                 C.DTIL_OCCU_INTTN_CD,
							                                 C.TYP_OCCU_CD,
							                                 C.DEPT_CD FROM 
							                                             ( SELECT * 
                                                 FROM TABLE(PKG_DTIL_AUTH.FN_DTIL_AUTH_TB(#dpobCd#,#payrMangDeptYn#,#payrMangDeptCd#,#deptCd#,#usrId#,#deptCdAuth#,'' )) ) C
							                                            WHERE     C.DPOB_CD = A.DPOB_CD
													                        AND C.DEPT_CD = A.CURR_AFFN_DEPT_CD
													                        AND NVL(C.TYP_OCCU_CD,'TT')  = NVL(A.TYP_OCCU_CD,'TT') 
							                                                AND NVL(C.DTIL_OCCU_INTTN_CD,'TT')  = NVL(A.DTIL_OCCU_INTTN_CD,'TT')
							                                                
							                                                <isNotEmpty property="deptCd" prepend="AND">
																			    C.DEPT_CD IN ( SELECT BA0400.DEPT_CD
																										FROM BASS0400 BA0400
																									WHERE BA0400.DEPT_USE_YN = 'Y'
																									START WITH BA0400.DEPT_CD 							
																										<iterate prepend="IN" property="deptCdArr" open="(" close=")" conjunction=",">
																											#deptCdArr[]#
																										</iterate>
																			                         CONNECT BY PRIOR BA0400.DEPT_CD = BA0400.HHRK_DEPT_CD
																									 ) 
																			</isNotEmpty>	
																									                                                
							                                                <!-- 
							                                               <isNotEmpty property="deptCd" prepend="AND">
																			<![CDATA[
																			 C.DEPT_CD
																			]]>
																			<iterate prepend="IN" property="deptCdArr" open="(" close=")" conjunction=",">
																			 #deptCdArr[]#
																			</iterate>
																			</isNotEmpty> 
																			 -->
														) 
										</isNotEmpty> 
									</isNotNull>
			 				
			 				</isEqual>
			 				
								)
	<isNotEqual  property="lastIndex" compareValue="-1">
 	<![CDATA[					
				) T WHERE ROWNUM <= #lastIndex#
		)WHERE RNUM >= #firstIndex#
	]]>
	</isNotEqual>	
	<isEqual   property="lastIndex" compareValue="-1">
  	<![CDATA[					
		) T  
	)
	]]>		
	</isEqual>
		
	</select>
	
	<!-- 기본
	<select id="psnl0600DAO.selectPsnl0600List" parameterClass="psnl0600SrhVO" resultClass="egovMap">
	    <![CDATA[
		SELECT * FROM (
			SELECT T.*, ROWNUM RNUM 
		FROM (
			
	    SELECT FCBASS0400CDNM (A.DPOB_CD, A.CURR_AFFN_DEPT_CD, '2') AS CURR_DEPT_NM
		       , FCBASS0400CDNM (A.DPOB_CD, A.DEPT_CD, '2') AS DEPT_NM
		       , FCBASS0300CDNM(A.DPOB_CD, A.EMYMT_DIV_CD) as EMYMT_DIV_NM
		       , A.HAN_NM
		       , SUBSTR(A.RESN_REGN_NUM,0,6)||'-'||SUBSTR(A.RESN_REGN_NUM,7) AS RESN_REGN_NUM
		       , fcBass0320CDNM(A.DPOB_CD, A.TYP_OCCU_CD) AS  TYPE_OCCU_NM 
		       , A.DTIL_OCCU_INTTN_CD 
		       , fcBassEx0350CDNM(A.DPOB_CD,A.TYP_OCCU_CD,A.DTIL_OCCU_INTTN_CD,'1' ) AS DTIL_OCCU_INTTN_NM
		       , FCBASS0500CDNM (A.DPOB_CD, SUBSTR (A.EMYMT_BGNN_DT, 1, 4), A.CURR_AFFN_DEPT_CD, A.BUSIN_CD) AS BUSIN_NM
		       , FCBASS0300CDNM(A.DPOB_CD, A.HDOFC_CODTN_CD) as HDOFC_CODTN_NM
		       , DECODE(LENGTH(A.FRST_EMYMT_DT), 8, TO_CHAR(TO_DATE(A.FRST_EMYMT_DT,'YYYYMMDD'),'YYYY.MM.DD'),A.FRST_EMYMT_DT) AS FRST_EMYMT_DT
		       , DECODE(LENGTH(A.CURR_DEPT_APPMT_DT), 8, TO_CHAR(TO_DATE(A.CURR_DEPT_APPMT_DT,'YYYYMMDD'),'YYYY.MM.DD'),A.CURR_DEPT_APPMT_DT) AS CURR_DEPT_APPMT_DT
		       , DECODE(LENGTH(A.RETRY_DT), 8, TO_CHAR(TO_DATE(A.RETRY_DT,'YYYYMMDD'),'YYYY.MM.DD'),A.RETRY_DT) AS RETRY_DT
		       , FCBASS0300CDNM(A.DPOB_CD,A.LOG_SVC_YR_NUM_CD) AS LOG_SVC_YR_NUM_NM
		       , FCBASS0300CDNM(A.DPOB_CD,A.LOG_SVC_MNTH_ICM_CD ) AS LOG_SVC_MNTH_ICM_NM
		       , FCBASS0300CDNM(A.DPOB_CD,B.DABTY_DIV_CD) AS DABTY_DIV_NM 
		       , C.HUS_ROAD_NM_FNDTN_ADDR || C.HUS_ROAD_NM_DTL_PATR_ADDR AS ADDR
		       , C.HUS_PHN_NUM
		       , C.CELL_PHNE_NUM
		       , C.EMAIL_ADDR
		       , A.PERN_NOTE_CTNT
		       , A.SYSTEMKEY 
		       , A.SX_DIV_CD
		       , FCBASS0300CDNM(A.DPOB_CD,A.SX_DIV_CD) AS SX_DIV_NM   
		 FROM PSNL0100 A, PSNL0113 B, PSNL0111 C, PAYR0500 D
		 WHERE A.DPOB_CD = B.DPOB_CD(+)
		      AND A.SYSTEMKEY = B.SYSTEMKEY(+)
		      AND A.DPOB_CD = C.DPOB_CD(+)
		      AND A.SYSTEMKEY = C.SYSTEMKEY(+)
		      AND A.DPOB_CD = D.DPOB_CD(+)
		      AND A.SYSTEMKEY = D.SYSTEMKEY(+)
		 ]]>
		 <include refid="defaultWhereSql"/>
		<isNotNull property="payrMangDeptCd">
			<isNotEmpty property="payrMangDeptCd" >
		  AND EXISTS  (
                         SELECT  C.DPOB_CD,
                                 C.DTIL_OCCU_INTTN_CD,
                                 C.TYP_OCCU_CD,
                                 C.DEPT_CD FROM 
                                             ( SELECT * 
                                                 FROM TABLE(PKG_DTIL_AUTH.FN_DTIL_AUTH_TB(#dpobCd#,#payrMangDeptYn#,#payrMangDeptCd#,#deptCd#,#usrId#,#deptCdAuth#,'' )) ) C
                                            WHERE     C.DPOB_CD = A.DPOB_CD
						                        AND C.DEPT_CD = A.CURR_AFFN_DEPT_CD
						                        AND NVL(C.TYP_OCCU_CD,'TT')  = NVL(A.TYP_OCCU_CD,'TT') 
                                                AND NVL(C.DTIL_OCCU_INTTN_CD,'TT')  = NVL(A.DTIL_OCCU_INTTN_CD,'TT')
                                               <isNotEmpty property="deptCd" prepend="AND">
												<![CDATA[
												 C.DEPT_CD
												]]>
												<iterate prepend="IN" property="deptCdArr" open="(" close=")" conjunction=",">
												 #deptCdArr[]#
												</iterate>
												</isNotEmpty> 
		) 
		</isNotEmpty> 
	</isNotNull>
		ORDER BY  A.DPOB_CD ASC , A.RESN_REGN_NUM ASC
		
	<isNotEqual  property="lastIndex" compareValue="-1">
 	<![CDATA[					
				) T WHERE ROWNUM <= #lastIndex#
		)WHERE RNUM >= #firstIndex#
	]]>
	</isNotEqual>	
	<isEqual   property="lastIndex" compareValue="-1">
  	<![CDATA[					
		) T  
	)
	]]>		
	</isEqual>
		
	</select>
	 -->
	 
	 
	 <select id="psnl0600DAO.selectPsnl0600ListTotCnt_S" parameterClass="psnl0600SrhVO" resultClass="int">
		<![CDATA[
	    SELECT COUNT(T.SYSTEMKEY)
		  FROM (	SELECT DISTINCT SYSTEMKEY
				                    , DPOB_CD
				                    , CURR_DEPT_NM
				                    , DEPT_NM
				                    , EMYMT_DIV_NM
				                    , HAN_NM
				                    , RESN_REGN_NUM
				                    , TYPE_OCCU_NM
				                    , DTIL_OCCU_INTTN_CD
				                    , DTIL_OCCU_INTTN_NM
				                    , BUSIN_NM
				                    , HDOFC_CODTN_NM
				                    , FRST_EMYMT_DT
				                    , CURR_DEPT_APPMT_DT
				                    , RETRY_DT
				                    , LOG_SVC_YR_NUM_NM
				                    , LOG_SVC_MNTH_ICM_NM
				                    , DABTY_DIV_NM
				                    , ADDR
				                    , HUS_PHN_NUM
				                    , CELL_PHNE_NUM
				                    , EMAIL_ADDR
				                    , PERN_NOTE_CTNT
				                    , SX_DIV_CD
				                    , SX_DIV_NM
					
		 				FROM  (    SELECT A.SYSTEMKEY
				                         , A.DPOB_CD
				                         , FCBASS0400CDNM (A.DPOB_CD, A.CURR_AFFN_DEPT_CD, '2') AS CURR_DEPT_NM
				                         , FCBASS0400CDNM (A.DPOB_CD, A.DEPT_CD, '2') AS DEPT_NM
				                         , FCBASS0300CDNM (A.DPOB_CD, A.EMYMT_DIV_CD) AS EMYMT_DIV_NM
				                         , A.HAN_NM
				                         , SUBSTR (A.RESN_REGN_NUM, 0, 6) || '-' || SUBSTR (A.RESN_REGN_NUM, 7)AS RESN_REGN_NUM
				                         , fcBass0320CDNM (A.DPOB_CD, A.TYP_OCCU_CD) AS TYPE_OCCU_NM
				                         , A.DTIL_OCCU_INTTN_CD
				                         , fcBassEx0350CDNM (A.DPOB_CD, A.TYP_OCCU_CD, A.DTIL_OCCU_INTTN_CD,'1')AS DTIL_OCCU_INTTN_NM
				                         , FCBASS0500CDNM (A.DPOB_CD,SUBSTR (A.EMYMT_BGNN_DT, 1, 4),A.CURR_AFFN_DEPT_CD, A.BUSIN_CD)AS BUSIN_NM
				                         , FCBASS0300CDNM (A.DPOB_CD, A.HDOFC_CODTN_CD) AS HDOFC_CODTN_NM
				                      /*   , DECODE (LENGTH (A.FRST_EMYMT_DT),8, TO_CHAR (TO_DATE (A.FRST_EMYMT_DT, 'YYYYMMDD'), 'YYYY.MM.DD'),A.FRST_EMYMT_DT)AS FRST_EMYMT_DT	*/
				                         
				                         , DECODE (E.FRST_BSE_EMYMT_DT, '', A.FRST_EMYMT_DT , TO_CHAR (TO_DATE (E.FRST_BSE_EMYMT_DT, 'YYYYMMDD'), 'YYYY.MM.DD') )AS FRST_EMYMT_DT
				                         
				                         , DECODE (LENGTH (A.CURR_DEPT_APPMT_DT),8, TO_CHAR (TO_DATE (A.CURR_DEPT_APPMT_DT, 'YYYYMMDD'),'YYYY.MM.DD'), A.CURR_DEPT_APPMT_DT)AS CURR_DEPT_APPMT_DT
				                         , DECODE (LENGTH (A.RETRY_DT), 8, TO_CHAR (TO_DATE (A.RETRY_DT, 'YYYYMMDD'), 'YYYY.MM.DD'), A.RETRY_DT)AS RETRY_DT
				                         , FCBASS0300CDNM (A.DPOB_CD, A.LOG_SVC_YR_NUM_CD) AS LOG_SVC_YR_NUM_NM
				                         , FCBASS0300CDNM (A.DPOB_CD, A.LOG_SVC_MNTH_ICM_CD)AS LOG_SVC_MNTH_ICM_NM
				                         , FCBASS0300CDNM (A.DPOB_CD, B.DABTY_DIV_CD) AS DABTY_DIV_NM
				                         , C.HUS_ROAD_NM_FNDTN_ADDR || C.HUS_ROAD_NM_DTL_PATR_ADDR AS ADDR
				                         , C.HUS_PHN_NUM
				                         , C.CELL_PHNE_NUM
				                         , C.EMAIL_ADDR
				                         , A.PERN_NOTE_CTNT
				                         , A.SX_DIV_CD
				                         , FCBASS0300CDNM (A.DPOB_CD, A.SX_DIV_CD) AS SX_DIV_NM
					                FROM PSNL0100 A,
					                     PSNL0113 B,
					                     PSNL0111 C,
					                     PAYR0500 D,
					                     PSNL0101 E         
					               WHERE     A.DPOB_CD 		= B.DPOB_CD(+)
					                     AND A.SYSTEMKEY 	= B.SYSTEMKEY(+)
					                     AND A.DPOB_CD 		= C.DPOB_CD(+)
					                     AND A.SYSTEMKEY 	= C.SYSTEMKEY(+)
					                     AND A.DPOB_CD 		= D.DPOB_CD(+)
					                     AND A.SYSTEMKEY 	= D.SYSTEMKEY(+)
					                     AND A.DPOB_CD 		= E.DPOB_CD(+)
					                     AND A.SYSTEMKEY 	= E.SYSTEMKEY(+)
					                     AND A.EMYMT_DIV_CD = E.EMYMT_DIV_CD(+)
	]]>	 
					 				<include refid="defaultWhereSql"/>
							 				
							 		<isNotNull property="emymtDivCd">
								     	<isNotEmpty property="emymtDivCd">
								 			AND A.EMYMT_DIV_CD = #emymtDivCd#
								 	 	</isNotEmpty>
								 	</isNotNull>
								 	
								 	<isNotEmpty property="hdofcCodtnCd" prepend="AND">
										<![CDATA[
											A.HDOFC_CODTN_CD
										]]>
										<iterate prepend="IN" property="hdofcCodtnCdArr" open="(" close=")" conjunction=",">
											 #hdofcCodtnCdArr[]#
										</iterate>
									</isNotEmpty> 
		 
									<isNotNull property="payrMangDeptCd">
										<isNotEmpty property="payrMangDeptCd" >
									  	AND EXISTS  (
							                         SELECT  C.DPOB_CD,
							                                 C.DTIL_OCCU_INTTN_CD,
							                                 C.TYP_OCCU_CD,
							                                 C.DEPT_CD FROM 
							                                             (  SELECT * 
                                                 FROM TABLE(PKG_DTIL_AUTH.FN_DTIL_AUTH_TB(#dpobCd#,#payrMangDeptYn#,#payrMangDeptCd#,#deptCd#,#usrId#,#deptCdAuth#,'' )) ) C
							                                            WHERE     C.DPOB_CD = A.DPOB_CD
													                        AND C.DEPT_CD = A.CURR_AFFN_DEPT_CD
													                        AND NVL(C.TYP_OCCU_CD,'TT')  = NVL(A.TYP_OCCU_CD,'TT') 
							                                                AND NVL(C.DTIL_OCCU_INTTN_CD,'TT')  = NVL(A.DTIL_OCCU_INTTN_CD,'TT')
							                                                
							                                                
																			<isNotEmpty property="deptCd" prepend="AND">
																			    C.DEPT_CD IN ( SELECT BA0400.DEPT_CD
																										FROM BASS0400 BA0400
																									WHERE BA0400.DEPT_USE_YN = 'Y'
																									START WITH BA0400.DEPT_CD 							
																										<iterate prepend="IN" property="deptCdArr" open="(" close=")" conjunction=",">
																											#deptCdArr[]#
																										</iterate>
																			                         CONNECT BY PRIOR BA0400.DEPT_CD = BA0400.HHRK_DEPT_CD
																									 ) 
																			</isNotEmpty>
							                                                
							                                                <!-- 
							                                               <isNotEmpty property="deptCd" prepend="AND">
																			<![CDATA[
																			 C.DEPT_CD
																			]]>
																			<iterate prepend="IN" property="deptCdArr" open="(" close=")" conjunction=",">
																			 #deptCdArr[]#
																			</iterate>
																			</isNotEmpty> 
																			 -->
														) 
										</isNotEmpty> 
									</isNotNull>
						
			 				<isEqual property="srhFlag" compareValue="Y">
								 				
			 <![CDATA[		UNION ALL
			 				
			 				SELECT A.SYSTEMKEY
				                         , A.DPOB_CD
				                         , FCBASS0400CDNM (F.DPOB_CD, F.DEPT_CD, '2') AS CURR_DEPT_NM
				                         , FCBASS0400CDNM (A.DPOB_CD, A.DEPT_CD, '2') AS DEPT_NM
				                         , FCBASS0300CDNM (F.DPOB_CD, F.EMYMT_DIV_CD) AS EMYMT_DIV_NM
				                         , A.HAN_NM
				                         , SUBSTR (A.RESN_REGN_NUM, 0, 6) || '-' || SUBSTR (A.RESN_REGN_NUM, 7)AS RESN_REGN_NUM
				                         , fcBass0320CDNM (F.DPOB_CD, F.TYP_OCCU_CD) AS TYPE_OCCU_NM
				                         , F.DTIL_OCCU_INTTN_CD
				                         , fcBassEx0350CDNM (F.DPOB_CD, F.TYP_OCCU_CD, F.DTIL_OCCU_INTTN_CD,'1')AS DTIL_OCCU_INTTN_NM
				                         , FCBASS0500CDNM (F.DPOB_CD,SUBSTR (A.EMYMT_BGNN_DT, 1, 4),F.DEPT_CD, F.BUSIN_CD)AS BUSIN_NM
				                         , FCBASS0300CDNM (A.DPOB_CD, 'A0030020') AS HDOFC_CODTN_NM
				                        /* , DECODE (LENGTH (A.FRST_EMYMT_DT),8, TO_CHAR (TO_DATE (A.FRST_EMYMT_DT, 'YYYYMMDD'), 'YYYY.MM.DD'),A.FRST_EMYMT_DT)AS FRST_EMYMT_DT */
				                       	 , DECODE (E.FRST_BSE_EMYMT_DT, '', A.FRST_EMYMT_DT , TO_CHAR (TO_DATE (E.FRST_BSE_EMYMT_DT, 'YYYYMMDD'), 'YYYY.MM.DD'))AS FRST_EMYMT_DT 
				                        
				                         , DECODE (LENGTH (A.CURR_DEPT_APPMT_DT),8, TO_CHAR (TO_DATE (A.CURR_DEPT_APPMT_DT, 'YYYYMMDD'),'YYYY.MM.DD'), A.CURR_DEPT_APPMT_DT)AS CURR_DEPT_APPMT_DT
				                         , DECODE (LENGTH (A.RETRY_DT), 8, TO_CHAR (TO_DATE (A.RETRY_DT, 'YYYYMMDD'), 'YYYY.MM.DD'), A.RETRY_DT)AS RETRY_DT
				                         , FCBASS0300CDNM (A.DPOB_CD, A.LOG_SVC_YR_NUM_CD) AS LOG_SVC_YR_NUM_NM
				                         , FCBASS0300CDNM (A.DPOB_CD, A.LOG_SVC_MNTH_ICM_CD)AS LOG_SVC_MNTH_ICM_NM
				                         , FCBASS0300CDNM (A.DPOB_CD, B.DABTY_DIV_CD) AS DABTY_DIV_NM
				                         , C.HUS_ROAD_NM_FNDTN_ADDR || C.HUS_ROAD_NM_DTL_PATR_ADDR AS ADDR
				                         , C.HUS_PHN_NUM
				                         , C.CELL_PHNE_NUM
				                         , C.EMAIL_ADDR
				                         , A.PERN_NOTE_CTNT
				                         , A.SX_DIV_CD
				                         , FCBASS0300CDNM (A.DPOB_CD, A.SX_DIV_CD) AS SX_DIV_NM
					                FROM PSNL0100 A,
					                     PSNL0113 B,
					                     PSNL0111 C,
					                     PAYR0500 D,
					                     PSNL0110 F,
					                     PSNL0101 E         
					               WHERE     A.DPOB_CD 		= B.DPOB_CD(+)
					                     AND A.SYSTEMKEY 	= B.SYSTEMKEY(+)
					                     AND A.DPOB_CD 		= C.DPOB_CD(+)
					                     AND A.SYSTEMKEY 	= C.SYSTEMKEY(+)
					                     
					                     AND A.DPOB_CD 		= D.DPOB_CD(+)
					                     AND A.SYSTEMKEY 	= D.SYSTEMKEY(+)
					                     
					                     AND A.DPOB_CD	 	= F.DPOB_CD(+)
                     					 AND A.SYSTEMKEY 	= F.SYSTEMKEY(+) 
                     					 
                     					 AND A.DPOB_CD 		= E.DPOB_CD(+)
					                     AND A.SYSTEMKEY 	= E.SYSTEMKEY(+)
					                     AND F.EMYMT_DIV_CD = E.EMYMT_DIV_CD
					                     
                     					 AND F.EMYMT_BGNN_DT = ( SELECT MAX(EMYMT_BGNN_DT)
				                                                  FROM PSNL0110
				                                                 WHERE DPOB_CD = F.DPOB_CD
				                                 					AND SYSTEMKEY = F.SYSTEMKEY
				                                           			AND EMYMT_DIV_CD = F.EMYMT_DIV_CD
				                                      				AND EMYMT_TYP_CD NOT IN ('A0420990')
                           										)	
             ]]>	        				
             
										<include refid="defaultWhereSql"/>  
										
										<isEqual property="emymtDivCd" compareValue="A0020010">
										
										 AND A.EMYMT_DIV_CD='A0020020'
						 				 AND F.EMYMT_DIV_CD='A0020010'
										 
					 				   </isEqual>
					 				   
					 				   <isEqual property="emymtDivCd" compareValue="A0020020">
										
										 AND A.EMYMT_DIV_CD='A0020010'
						 				 AND F.EMYMT_DIV_CD='A0020020'
										 
					 				   </isEqual>
					 				   
									<isNotNull property="payrMangDeptCd">
										<isNotEmpty property="payrMangDeptCd" >
									  	AND EXISTS  (
							                         SELECT  C.DPOB_CD,
							                                 C.DTIL_OCCU_INTTN_CD,
							                                 C.TYP_OCCU_CD,
							                                 C.DEPT_CD FROM 
							                                             ( SELECT * 
                                                 FROM TABLE(PKG_DTIL_AUTH.FN_DTIL_AUTH_TB(#dpobCd#,#payrMangDeptYn#,#payrMangDeptCd#,#deptCd#,#usrId#,#deptCdAuth#,'' ))) C
							                                            WHERE     C.DPOB_CD = A.DPOB_CD
													                        AND C.DEPT_CD = A.CURR_AFFN_DEPT_CD
													                        AND NVL(C.TYP_OCCU_CD,'TT')  = NVL(A.TYP_OCCU_CD,'TT') 
							                                                AND NVL(C.DTIL_OCCU_INTTN_CD,'TT')  = NVL(A.DTIL_OCCU_INTTN_CD,'TT')
							                                                
																			<isNotEmpty property="deptCd" prepend="AND">
																			    C.DEPT_CD IN ( SELECT BA0400.DEPT_CD
																										FROM BASS0400 BA0400
																									WHERE BA0400.DEPT_USE_YN = 'Y'
																									START WITH BA0400.DEPT_CD 							
																										<iterate prepend="IN" property="deptCdArr" open="(" close=")" conjunction=",">
																											#deptCdArr[]#
																										</iterate>
																			                         CONNECT BY PRIOR BA0400.DEPT_CD = BA0400.HHRK_DEPT_CD
																									 ) 
																			</isNotEmpty>
							                                                
							                                                <!-- 
							                                               <isNotEmpty property="deptCd" prepend="AND">
																			<![CDATA[
																			 C.DEPT_CD
																			]]>
																			<iterate prepend="IN" property="deptCdArr" open="(" close=")" conjunction=",">
																			 #deptCdArr[]#
																			</iterate>
																			</isNotEmpty> 
																			-->
														) 
										</isNotEmpty> 
									</isNotNull>
			 				
			 				</isEqual>
			 				
			 				
						
								)		  
		  
		   	   )T 
	</select>
	 
	 
	<!--  기본 카운트 테스트  위에
	<select id="psnl0600DAO.selectPsnl0600ListTotCnt_S" parameterClass="psnl0600SrhVO" resultClass="int">
	    <![CDATA[
	    SELECT COUNT(*)
		 FROM PSNL0100 A, PSNL0113 B, PSNL0111 C, PAYR0500 D
		 WHERE A.DPOB_CD = B.DPOB_CD(+)
		      AND A.SYSTEMKEY = B.SYSTEMKEY(+)
		      AND A.DPOB_CD = C.DPOB_CD(+)
		      AND A.SYSTEMKEY = C.SYSTEMKEY(+)
		      AND A.DPOB_CD = D.DPOB_CD(+)
		      AND A.SYSTEMKEY = D.SYSTEMKEY(+)
		 ]]>
		 <include refid="defaultWhereSql"/>
		<isNotNull property="payrMangDeptCd">
			<isNotEmpty property="payrMangDeptCd" >
		  AND EXISTS  (
                         SELECT  C.DPOB_CD,
                                 C.DTIL_OCCU_INTTN_CD,
                                 C.TYP_OCCU_CD,
                                 C.DEPT_CD FROM 
                                             ( SELECT * 
                                                 FROM TABLE(PKG_DTIL_AUTH.FN_DTIL_AUTH_TB(#dpobCd#,#payrMangDeptYn#,#payrMangDeptCd#,#deptCd#,#usrId#,#deptCdAuth#,'' )) ) C
                                            WHERE     C.DPOB_CD = A.DPOB_CD
						                        AND C.DEPT_CD = A.CURR_AFFN_DEPT_CD
						                        AND NVL(C.TYP_OCCU_CD,'TT')  = NVL(A.TYP_OCCU_CD,'TT') 
                                                AND NVL(C.DTIL_OCCU_INTTN_CD,'TT')  = NVL(A.DTIL_OCCU_INTTN_CD,'TT')
                                               <isNotEmpty property="deptCd" prepend="AND">
												<![CDATA[
												 C.DEPT_CD
												]]>
												<iterate prepend="IN" property="deptCdArr" open="(" close=")" conjunction=",">
												 #deptCdArr[]#
												</iterate>
												</isNotEmpty> 
		) 
		</isNotEmpty> 
	</isNotNull>
		ORDER BY  A.DPOB_CD ASC , A.RESN_REGN_NUM ASC
	</select>
	-->




	<!-- 병역 -->
	<!--  ,FCBASS0350CDNM(A.DPOB_CD, A.TYP_OCCU_CD,A.DTIL_OCCU_CLS_DIV_CD, '1' ) as DTIL_OCCU_CLS_DIV_NM -->
	<!-- <select id="psnl0600DAO.selectPsnl0112" parameterClass="hashMap" resultClass="egovMap"> -->
	<select id="psnl0600DAO.selectPsnl0112" parameterClass="psnl0600SrhVO" resultClass="egovMap">
	    <![CDATA[
	    
	    SELECT * FROM (
			SELECT T.*, ROWNUM RNUM FROM (
			
	    SELECT FCBASS0400CDNM (A.DPOB_CD, A.CURR_AFFN_DEPT_CD, '2') AS CURR_DEPT_NM
		       , FCBASS0400CDNM (A.DPOB_CD, A.DEPT_CD, '2') AS DEPT_NM
		       , FCBASS0300CDNM(A.DPOB_CD, A.EMYMT_DIV_CD) as EMYMT_DIV_NM
		       , A.HAN_NM
		       , SUBSTR(A.RESN_REGN_NUM,0,6)||'-'||SUBSTR(A.RESN_REGN_NUM,7) AS RESN_REGN_NUM
		       , fcBass0320CDNM(A.DPOB_CD, A.TYP_OCCU_CD) AS  TYPE_OCCU_NM 
		       , A.DTIL_OCCU_INTTN_CD 
		       , fcBassEx0350CDNM(A.DPOB_CD,A.TYP_OCCU_CD,A.DTIL_OCCU_INTTN_CD,'1' ) AS DTIL_OCCU_INTTN_NM
		       , FCBASS0500CDNM (A.DPOB_CD, SUBSTR (A.EMYMT_BGNN_DT, 1, 4), A.CURR_AFFN_DEPT_CD, A.BUSIN_CD) AS BUSIN_NM
		       , FCBASS0300CDNM(A.DPOB_CD, A.HDOFC_CODTN_CD) as HDOFC_CODTN_NM
		       , FCBASS0300CDNM(A.DPOB_CD, B.DSAGE_DIV_CD) as DSAGE_DIV_CD
			   , DECODE(B.ENRLNT_DT, '', '',  '00000000', '', DECODE (LENGTH (B.ENRLNT_DT),  8, TO_CHAR (TO_DATE (B.ENRLNT_DT, 'YYYYMMDD'), 'YYYY.MM.DD'), B.ENRLNT_DT))AS ENRLNT_DT
               , DECODE(B.DSAGE_DT, '',  '', '00000000', '', DECODE (LENGTH (B.DSAGE_DT), 8, TO_CHAR (TO_DATE (B.DSAGE_DT, 'YYYYMMDD'), 'YYYY.MM.DD') ,B.DSAGE_DT))AS DSAGE_DT
		       , FCBASS0300CDNM(A.DPOB_CD, B.SERVC_RCGTN_PRID_CD) as SERVC_RCGTN_PRID_CD
		       , FCBASS0300CDNM(A.DPOB_CD, B.SRVSS_CD) as SRVSS_CD
		       , FCBASS0300CDNM(A.DPOB_CD, B.BAGGRP_CD) as BAGGRP_CD
		       , FCBASS0300CDNM(A.DPOB_CD, B.ABOTS_CD) as ABOTS_CD
		       , FCBASS0300CDNM(A.DPOB_CD, B.CLS_CD) as CLS_CD
		       , B.MITY_SILNUM
		       , B.MOS
		       , FCBASS0300CDNM(A.DPOB_CD, B.EXMTN_REAS_CD) as EXMTN_REAS_CD
		       , A.SYSTEMKEY
		 FROM PSNL0100 A, PSNL0112 B, PAYR0500 D
		 WHERE A.DPOB_CD = B.DPOB_CD(+)
		   AND A.SYSTEMKEY = B.SYSTEMKEY(+)
		   AND A.DPOB_CD = D.DPOB_CD(+)
		   AND A.SYSTEMKEY = D.SYSTEMKEY(+)
	    ]]>
	    <include refid="defaultWhereSql"/>
	    
	    <isNotNull property="emymtDivCd">
		     <isNotEmpty property="emymtDivCd">
		 		AND A.EMYMT_DIV_CD = #emymtDivCd#
		 	 </isNotEmpty>
		 </isNotNull>
		
		<isNotEmpty property="hdofcCodtnCd" prepend="AND">
			<![CDATA[
				A.HDOFC_CODTN_CD
			]]>
			<iterate prepend="IN" property="hdofcCodtnCdArr" open="(" close=")" conjunction=",">
				 #hdofcCodtnCdArr[]#
			</iterate>
		</isNotEmpty> 	   
		 
	    <isNotNull property="payrMangDeptCd">
			<isNotEmpty property="payrMangDeptCd" >
		  AND EXISTS  (
                         SELECT  C.DPOB_CD,
                                 C.DTIL_OCCU_INTTN_CD,
                                 C.TYP_OCCU_CD,
                                 C.DEPT_CD FROM 
                                             ( SELECT * 
                                                 FROM TABLE(PKG_DTIL_AUTH.FN_DTIL_AUTH_TB(#dpobCd#,#payrMangDeptYn#,#payrMangDeptCd#,#deptCd#,#usrId#,#deptCdAuth#,'' ))) C
                                            WHERE     C.DPOB_CD = A.DPOB_CD
						                        AND C.DEPT_CD = A.CURR_AFFN_DEPT_CD
						                        AND NVL(C.TYP_OCCU_CD,'TT')  = NVL(A.TYP_OCCU_CD,'TT') 
                                                AND NVL(C.DTIL_OCCU_INTTN_CD,'TT')  = NVL(A.DTIL_OCCU_INTTN_CD,'TT')

												<isNotEmpty property="deptCd" prepend="AND">
												    C.DEPT_CD IN ( SELECT BA0400.DEPT_CD
																			FROM BASS0400 BA0400
																		WHERE BA0400.DEPT_USE_YN = 'Y'
																		START WITH BA0400.DEPT_CD 							
																			<iterate prepend="IN" property="deptCdArr" open="(" close=")" conjunction=",">
																				#deptCdArr[]#
																			</iterate>
												                         CONNECT BY PRIOR BA0400.DEPT_CD = BA0400.HHRK_DEPT_CD
																		 ) 
												</isNotEmpty>
                                                
                                                <!-- 
                                               <isNotEmpty property="deptCd" prepend="AND">
												<![CDATA[
												 C.DEPT_CD
												]]>
												<iterate prepend="IN" property="deptCdArr" open="(" close=")" conjunction=",">
												 #deptCdArr[]#
												</iterate>
												</isNotEmpty> 
												 -->
		) 
		</isNotEmpty> 
		</isNotNull>
	    
		<isNotNull property="dsageDivCd">
		     <isNotEmpty property="dsageDivCd">
		 		AND B.DSAGE_DIV_CD = #dsageDivCd# 
		 	 </isNotEmpty>
		</isNotNull>
		
	    <isNotNull property="dsageDtS">
		     <isNotEmpty property="dsageDtS">
		 		AND B.DSAGE_DT &gt;= #dsageDtS#
		 	 </isNotEmpty>
		</isNotNull>
		<isNotNull property="dsageDtE">
		     <isNotEmpty property="dsageDtE">
		 		AND B.DSAGE_DT &lt;= #dsageDtE#
		 	 </isNotEmpty>
		</isNotNull>
	    
		<isNotNull property="baggrpCd">
		     <isNotEmpty property="baggrpCd">
		 		AND B.BAGGRP_CD = #baggrpCd# 
		 	 </isNotEmpty>
		</isNotNull>
		
		<isNotNull property="abotsCd">
		     <isNotEmpty property="abotsCd">
		 		AND B.ABOTS_CD = #abotsCd# 
		 	 </isNotEmpty>
		</isNotNull>
		
		<isNotNull property="clsCd">
		     <isNotEmpty property="clsCd">
		 		AND B.CLS_CD = #clsCd# 
		 	 </isNotEmpty>
		</isNotNull>
		
		
	<isNotEqual  property="lastIndex" compareValue="-1">
 	<![CDATA[					
				) T WHERE ROWNUM <= #lastIndex#
		)WHERE RNUM >= #firstIndex#
	]]>
	</isNotEqual>	
	<isEqual   property="lastIndex" compareValue="-1">
  	<![CDATA[					
		) T  
	)
	]]>
	</isEqual>	
	</select>
	
	<!--
	<select id="psnl0600DAO.psnl0600DAO.selectPsnl0112List" parameterClass="psnl0600SrhVO" resultClass="egovMap">
	    <![CDATA[
	    SELECT ROW_NUMBER() OVER(ORDER BY (SELECT LPAD(DEPT_RANK,5,'0') FROM BASS0400 NN WHERE NN.DEPT_CD = A.CURR_AFFN_DEPT_CD)
	           , A.EMYMT_DIV_CD,A.TYP_OCCU_CD, A.PYSP_GRDE_CD,A.RESN_REGN_NUM ) AS RNUM
	           , A.CURR_AFFN_DEPT_CD 
		       , FCBASS0400CDNM (A.DPOB_CD, A.CURR_AFFN_DEPT_CD, '2') AS CURR_DEPT_NM
		       , A.DEPT_CD
		       , FCBASS0400CDNM (A.DPOB_CD, A.DEPT_CD, '2') AS DEPT_NM
		       , A.EMYMT_DIV_CD
		       , FCBASS0300CDNM(A.DPOB_CD, A.EMYMT_DIV_CD) as EMYMT_DIV_NM
		       , A.HAN_NM
		       , SUBSTR(A.RESN_REGN_NUM,0,6)||'-'||SUBSTR(A.RESN_REGN_NUM,7) AS RESN_REGN_NUM
		       , A.TYP_OCCU_CD
		       , fcBass0320CDNM(A.DPOB_CD, A.TYP_OCCU_CD) AS  TYPE_OCCU_NM 
		       , A.DTIL_OCCU_INTTN_CD 
		       , fcBassEx0350CDNM(A.DPOB_CD,A.TYP_OCCU_CD,A.DTIL_OCCU_INTTN_CD,'1' ) AS DTIL_OCCU_INTTN_NM
		       , FCBASS0500CDNM (A.DPOB_CD, SUBSTR (A.EMYMT_BGNN_DT, 1, 4), A.CURR_AFFN_DEPT_CD, A.BUSIN_CD) AS BUSIN_NM
		       , FCBASS0300CDNM(A.DPOB_CD, A.HDOFC_CODTN_CD) as HDOFC_CODTN_NM
		       , DSAGE_DIV_CD
		       , FCBASS0300CDNM(A.DPOB_CD, B.DSAGE_DIV_CD) as DSAGE_DIV_NM
			   , DECODE(B.ENRLNT_DT, '', '',  '00000000', '', DECODE (LENGTH (B.ENRLNT_DT),  8, TO_CHAR (TO_DATE (B.ENRLNT_DT, 'YYYYMMDD'), 'YYYY.MM.DD'), B.ENRLNT_DT))AS ENRLNT_DT
               , DECODE(B.DSAGE_DT, '',  '', '00000000', '', DECODE (LENGTH (B.DSAGE_DT), 8, TO_CHAR (TO_DATE (B.DSAGE_DT, 'YYYYMMDD'), 'YYYY.MM.DD') ,B.DSAGE_DT))AS DSAGE_DT
		       , B.SERVC_RCGTN_PRID_CD) as SERVC_RCGTN_PRID_CD
		       , B.SRVSS_CD
		       , B.BAGGRP_CD
		       , B.ABOTS_CD
		       , B.CLS_CD
		       , B.SERVC_RCGTN_PRID_CD) as SERVC_RCGTN_PRID_NM
		       , FCBASS0300CDNM(A.DPOB_CD, B.SRVSS_CD) as SRVSS_NM
		       , FCBASS0300CDNM(A.DPOB_CD, B.BAGGRP_CD) as BAGGRP_NM
		       , FCBASS0300CDNM(A.DPOB_CD, B.ABOTS_CD) as ABOTS_NM
		       , FCBASS0300CDNM(A.DPOB_CD, B.CLS_CD) as CLS_NM
		       , B.MITY_SILNUM
		       , B.MOS
		       , B.EXMTN_REAS_CD
		       , FCBASS0300CDNM(A.DPOB_CD, B.EXMTN_REAS_CD) as EXMTN_REAS_NM
		       , A.SYSTEMKEY
		 FROM PSNL0100 A, PSNL0112 B, PAYR0500 D
		 WHERE A.DPOB_CD = B.DPOB_CD(+)
		   AND A.SYSTEMKEY = B.SYSTEMKEY(+)
		   AND A.DPOB_CD = D.DPOB_CD(+)
		   AND A.SYSTEMKEY = D.SYSTEMKEY(+)
	    ]]>
	    <include refid="defaultWhereSql"/>
	    
		<isNotNull property="dsageDivCd">
		     <isNotEmpty property="dsageDivCd">
		 		AND B.DSAGE_DIV_CD = #dsageDivCd# 
		 	 </isNotEmpty>
		</isNotNull>
		
	    <isNotNull property="dsageDtS">
		     <isNotEmpty property="dsageDtS">
		 		AND SUBSTR(B.DSAGE_DT,1,6) &gt;= #dsageDtS#
		 	 </isNotEmpty>
		</isNotNull>
		<isNotNull property="dsageDtE">
		     <isNotEmpty property="dsageDtE">
		 		AND SUBSTR(B.DSAGE_DT,1,6) &lt;= #dsageDtE#
		 	 </isNotEmpty>
		</isNotNull>
	    
		<isNotNull property="baggrpCd">
		     <isNotEmpty property="baggrpCd">
		 		AND B.BAGGRP_CD = #baggrpCd# 
		 	 </isNotEmpty>
		</isNotNull>
		
		<isNotNull property="abotsCd">
		     <isNotEmpty property="abotsCd">
		 		AND B.ABOTS_CD = #abotsCd# 
		 	 </isNotEmpty>
		</isNotNull>
		
		<isNotNull property="clsCd">
		     <isNotEmpty property="clsCd">
		 		AND B.CLS_CD = #clsCd# 
		 	 </isNotEmpty>
		</isNotNull>
	</select>
	  -->
	<select id="psnl0600DAO.selectPsnl0112ListTotCnt_S" parameterClass="psnl0600SrhVO" resultClass="int">
	    <![CDATA[
	    SELECT COUNT(*)
		 FROM PSNL0100 A, PSNL0112 B, PAYR0500 D
		 WHERE A.DPOB_CD = B.DPOB_CD(+)
		   AND A.SYSTEMKEY = B.SYSTEMKEY(+)
		   AND A.DPOB_CD = D.DPOB_CD(+)
		   AND A.SYSTEMKEY = D.SYSTEMKEY(+)
	    ]]>
	    <include refid="defaultWhereSql"/>
	    
	    <isNotNull property="emymtDivCd">
		     <isNotEmpty property="emymtDivCd">
		 		AND A.EMYMT_DIV_CD = #emymtDivCd#
		 	 </isNotEmpty>
		 </isNotNull>
		 
		<isNotEmpty property="hdofcCodtnCd" prepend="AND">
			<![CDATA[
				A.HDOFC_CODTN_CD
			]]>
			<iterate prepend="IN" property="hdofcCodtnCdArr" open="(" close=")" conjunction=",">
				 #hdofcCodtnCdArr[]#
			</iterate>
		</isNotEmpty> 	 
		
		<isNotNull property="payrMangDeptCd">
			<isNotEmpty property="payrMangDeptCd" >
				AND EXISTS  (
	                         SELECT  C.DPOB_CD,
	                                 C.DTIL_OCCU_INTTN_CD,
	                                 C.TYP_OCCU_CD,
	                                 C.DEPT_CD FROM 
	                                             ( SELECT * 
                                                 FROM TABLE(PKG_DTIL_AUTH.FN_DTIL_AUTH_TB(#dpobCd#,#payrMangDeptYn#,#payrMangDeptCd#,#deptCd#,#usrId#,#deptCdAuth#,'' )) ) C
	                                            WHERE     C.DPOB_CD = A.DPOB_CD
							                        AND C.DEPT_CD = A.CURR_AFFN_DEPT_CD
							                        AND NVL(C.TYP_OCCU_CD,'TT')  = NVL(A.TYP_OCCU_CD,'TT') 
	                                                AND NVL(C.DTIL_OCCU_INTTN_CD,'TT')  = NVL(A.DTIL_OCCU_INTTN_CD,'TT')
	
													<isNotEmpty property="deptCd" prepend="AND">
													    C.DEPT_CD IN ( SELECT BA0400.DEPT_CD
																				FROM BASS0400 BA0400
																			WHERE BA0400.DEPT_USE_YN = 'Y'
																			START WITH BA0400.DEPT_CD 							
																				<iterate prepend="IN" property="deptCdArr" open="(" close=")" conjunction=",">
																					#deptCdArr[]#
																				</iterate>
													                         CONNECT BY PRIOR BA0400.DEPT_CD = BA0400.HHRK_DEPT_CD
																			 ) 
													</isNotEmpty>
					) 
			</isNotEmpty> 
		</isNotNull>		
	    
		<isNotNull property="dsageDivCd">
		     <isNotEmpty property="dsageDivCd">
		 		AND B.DSAGE_DIV_CD = #dsageDivCd# 
		 	 </isNotEmpty>
		</isNotNull>
		
	    <isNotNull property="dsageDtS">
		     <isNotEmpty property="dsageDtS">
		 		AND B.DSAGE_DT &gt;= #dsageDtS#
		 	 </isNotEmpty>
		</isNotNull>
		<isNotNull property="dsageDtE">
		     <isNotEmpty property="dsageDtE">
		 		AND B.DSAGE_DT &lt;= #dsageDtE#
		 	 </isNotEmpty>
		</isNotNull>
	    
		<isNotNull property="baggrpCd">
		     <isNotEmpty property="baggrpCd">
		 		AND B.BAGGRP_CD = #baggrpCd# 
		 	 </isNotEmpty>
		</isNotNull>
		
		<isNotNull property="abotsCd">
		     <isNotEmpty property="abotsCd">
		 		AND B.ABOTS_CD = #abotsCd# 
		 	 </isNotEmpty>
		</isNotNull>
		
		<isNotNull property="clsCd">
		     <isNotEmpty property="clsCd">
		 		AND B.CLS_CD = #clsCd# 
		 	 </isNotEmpty>
		</isNotNull>
	</select>
	
	
	
	
	<!-- 단체 -->
	<!-- <select id="psnl0600DAO.selectPsnl0114" parameterClass="hashMap" resultClass="egovMap"> -->
	<select id="psnl0600DAO.selectPsnl0114" parameterClass="psnl0600SrhVO" resultClass="egovMap">
	
	SELECT * FROM (
			SELECT T.*, ROWNUM RNUM FROM (
			
		SELECT  FCBASS0400CDNM (A.DPOB_CD, A.CURR_AFFN_DEPT_CD, '2') AS CURR_DEPT_NM
				, FCBASS0400CDNM (A.DPOB_CD, A.DEPT_CD, '2') AS DEPT_NM
				, FCBASS0300CDNM(A.DPOB_CD, A.EMYMT_DIV_CD) as EMYMT_DIV_NM
				, A.HAN_NM
				, SUBSTR(A.RESN_REGN_NUM,0,6)||'-'||SUBSTR(A.RESN_REGN_NUM,7) AS RESN_REGN_NUM
				, fcBass0320CDNM(A.DPOB_CD, A.TYP_OCCU_CD) AS  TYPE_OCCU_NM 
		       	, A.DTIL_OCCU_INTTN_CD 
		       	, fcBassEx0350CDNM(A.DPOB_CD,A.TYP_OCCU_CD,A.DTIL_OCCU_INTTN_CD,'1' ) AS DTIL_OCCU_INTTN_NM
				, FCBASS0500CDNM (A.DPOB_CD, SUBSTR (A.EMYMT_BGNN_DT, 1, 4), A.CURR_AFFN_DEPT_CD, A.BUSIN_CD) AS BUSIN_NM
		        , FCBASS0300CDNM(A.DPOB_CD, A.HDOFC_CODTN_CD) as HDOFC_CODTN_NM
		    	, DECODE(LENGTH(B.JN_DT), 8, TO_CHAR(TO_DATE(B.JN_DT,'YYYYMMDD'),'YYYY.MM.DD'),B.JN_DT) AS JN_DT
		     	, B.JN_OPZTN_NM
		      	, FCBASS0300CDNM(A.DPOB_CD, B.ODTY_CD) as ODTY_CD
		    	, DECODE(LENGTH(B.WIRL_DT), 8, TO_CHAR(TO_DATE(B.WIRL_DT,'YYYYMMDD'),'YYYY.MM.DD'),B.WIRL_DT) AS WIRL_DT
		       	, A.SYSTEMKEY
		FROM PSNL0100 A, PSNL0114 B, PAYR0500 D
		WHERE A.DPOB_CD = B.DPOB_CD(+)
			AND A.SYSTEMKEY = B.SYSTEMKEY(+)
			AND A.DPOB_CD = D.DPOB_CD(+)
			AND A.SYSTEMKEY = D.SYSTEMKEY(+)
			AND B.OPZTN_SEIL_NUM IS NOT NULL
        <include refid="defaultWhereSql"/>
        
        <isNotNull property="emymtDivCd">
		     <isNotEmpty property="emymtDivCd">
		 		AND A.EMYMT_DIV_CD = #emymtDivCd#
		 	 </isNotEmpty>
		 </isNotNull>
 
 		<isNotEmpty property="hdofcCodtnCd" prepend="AND">
			<![CDATA[
				A.HDOFC_CODTN_CD
			]]>
			<iterate prepend="IN" property="hdofcCodtnCdArr" open="(" close=")" conjunction=",">
				 #hdofcCodtnCdArr[]#
			</iterate>
		</isNotEmpty> 	 
        
        <isNotNull property="payrMangDeptCd">
			<isNotEmpty property="payrMangDeptCd" >
		  AND EXISTS  (
                         SELECT  C.DPOB_CD,
                                 C.DTIL_OCCU_INTTN_CD,
                                 C.TYP_OCCU_CD,
                                 C.DEPT_CD FROM 
                                             ( SELECT * 
                                                 FROM TABLE(PKG_DTIL_AUTH.FN_DTIL_AUTH_TB(#dpobCd#,#payrMangDeptYn#,#payrMangDeptCd#,#deptCd#,#usrId#,#deptCdAuth#,'' )) ) C
                                            WHERE     C.DPOB_CD = A.DPOB_CD
						                        AND C.DEPT_CD = A.CURR_AFFN_DEPT_CD
						                        AND NVL(C.TYP_OCCU_CD,'TT')  = NVL(A.TYP_OCCU_CD,'TT') 
                                                AND NVL(C.DTIL_OCCU_INTTN_CD,'TT')  = NVL(A.DTIL_OCCU_INTTN_CD,'TT')
                                                
												<isNotEmpty property="deptCd" prepend="AND">
												    C.DEPT_CD IN ( SELECT BA0400.DEPT_CD
																			FROM BASS0400 BA0400
																		WHERE BA0400.DEPT_USE_YN = 'Y'
																		START WITH BA0400.DEPT_CD 							
																			<iterate prepend="IN" property="deptCdArr" open="(" close=")" conjunction=",">
																				#deptCdArr[]#
																			</iterate>
												                         CONNECT BY PRIOR BA0400.DEPT_CD = BA0400.HHRK_DEPT_CD
																		 ) 
												</isNotEmpty>
                                                
                                                <!-- 
                                               <isNotEmpty property="deptCd" prepend="AND">
												<![CDATA[
												 C.DEPT_CD
												]]>
												<iterate prepend="IN" property="deptCdArr" open="(" close=")" conjunction=",">
												 #deptCdArr[]#
												</iterate>
												</isNotEmpty> 
												 -->
		) 
		</isNotEmpty> 
		</isNotNull>
        
         <isNotNull property="jnOpztnNm">
		     <isNotEmpty property="jnOpztnNm">
		 		AND B.JN_OPZTN_NM LIKE '%' || #jnOpztnNm# || '%' 
		 	 </isNotEmpty>
		</isNotNull>
		<isNotNull property="jnDtS">
		     <isNotEmpty property="jnDtS">
		 		AND B.JN_DT &gt;= #jnDtS#
		 	 </isNotEmpty>
		</isNotNull>
		<isNotNull property="jnDtE">
		     <isNotEmpty property="jnDtE">
		 		AND B.JN_DT &lt;= #jnDtE#
		 	 </isNotEmpty>
		</isNotNull>
		
	<isNotEqual  property="lastIndex" compareValue="-1">
 	<![CDATA[					
				) T WHERE ROWNUM <= #lastIndex#
		)WHERE RNUM >= #firstIndex#
	]]>
	</isNotEqual>	
	<isEqual   property="lastIndex" compareValue="-1">
  	<![CDATA[					
		) T  
	)
	]]>
	</isEqual>	
	
	</select>
	
	<!--  
	<select id="psnl0600DAO.selectPsnl0114List" parameterClass="psnl0600SrhVO" resultClass="egovMap">
		SELECT ROW_NUMBER() OVER(ORDER BY (SELECT LPAD(DEPT_RANK,5,'0') FROM BASS0400 NN WHERE NN.DEPT_CD = A.CURR_AFFN_DEPT_CD)
				, A.EMYMT_DIV_CD,A.TYP_OCCU_CD, A.PYSP_GRDE_CD,A.RESN_REGN_NUM ) AS RNUM 
				, FCBASS0400CDNM (A.DPOB_CD, A.CURR_AFFN_DEPT_CD, '2') AS CURR_DEPT_NM
				, FCBASS0400CDNM (A.DPOB_CD, A.DEPT_CD, '2') AS DEPT_NM
				, FCBASS0300CDNM(A.DPOB_CD, A.EMYMT_DIV_CD) as EMYMT_DIV_NM
				, A.HAN_NM
				, SUBSTR(A.RESN_REGN_NUM,0,6)||'-'||SUBSTR(A.RESN_REGN_NUM,7) AS RESN_REGN_NUM
				, fcBass0320CDNM(A.DPOB_CD, A.TYP_OCCU_CD) AS  TYPE_OCCU_NM 
		       	, A.DTIL_OCCU_INTTN_CD 
		       	, fcBassEx0350CDNM(A.DPOB_CD,A.TYP_OCCU_CD,A.DTIL_OCCU_INTTN_CD,'1' ) AS DTIL_OCCU_INTTN_NM
				, FCBASS0500CDNM (A.DPOB_CD, SUBSTR (A.EMYMT_BGNN_DT, 1, 4), A.CURR_AFFN_DEPT_CD, A.BUSIN_CD) AS BUSIN_NM
		        , FCBASS0300CDNM(A.DPOB_CD, A.HDOFC_CODTN_CD) as HDOFC_CODTN_NM
		    	, DECODE(LENGTH(B.JN_DT), 8, TO_CHAR(TO_DATE(B.JN_DT,'YYYYMMDD'),'YYYY.MM.DD'),B.JN_DT) AS JN_DT
		     	, B.JN_OPZTN_NM
		     	, B.ODTY_CD
		      	, FCBASS0300CDNM(A.DPOB_CD, B.ODTY_CD) as ODTY_NM
		    	, DECODE(LENGTH(B.WIRL_DT), 8, TO_CHAR(TO_DATE(B.WIRL_DT,'YYYYMMDD'),'YYYY.MM.DD'),B.WIRL_DT) AS WIRL_DT
		       	, A.SYSTEMKEY
		FROM PSNL0100 A, PSNL0114 B, PAYR0500 D
		WHERE A.DPOB_CD = B.DPOB_CD(+)
			AND A.SYSTEMKEY = B.SYSTEMKEY(+)
			AND A.DPOB_CD = D.DPOB_CD(+)
			AND A.SYSTEMKEY = D.SYSTEMKEY(+)
			AND B.OPZTN_SEIL_NUM IS NOT NULL
        <include refid="defaultWhereSql"/>
        
         <isNotNull property="jnOpztnNm">
		     <isNotEmpty property="jnOpztnNm">
		 		AND B.JN_OPZTN_NM LIKE '%' || #jnOpztnNm# || '%' 
		 	 </isNotEmpty>
		</isNotNull>
		<isNotNull property="jnDtS">
		     <isNotEmpty property="jnDtS">
		 		AND SUBSTR(B.JN_DT,1,6) &gt;= #jnDtS#
		 	 </isNotEmpty>
		</isNotNull>
		<isNotNull property="jnDtE">
		     <isNotEmpty property="jnDtE">
		 		AND SUBSTR(B.JN_DT,1,6) &lt;= #jnDtE#
		 	 </isNotEmpty>
		</isNotNull>
	</select>
	-->
	<select id="psnl0600DAO.selectPsnl0114ListTotCnt_S" parameterClass="psnl0600SrhVO" resultClass="int">
		SELECT COUNT(*)
		FROM PSNL0100 A, PSNL0114 B, PAYR0500 D
		WHERE A.DPOB_CD = B.DPOB_CD(+)
			AND A.SYSTEMKEY = B.SYSTEMKEY(+)
			AND A.DPOB_CD = D.DPOB_CD(+)
			AND A.SYSTEMKEY = D.SYSTEMKEY(+)
			AND B.OPZTN_SEIL_NUM IS NOT NULL
        <include refid="defaultWhereSql"/>
        
 		<isNotNull property="emymtDivCd">
		     <isNotEmpty property="emymtDivCd">
		 		AND A.EMYMT_DIV_CD = #emymtDivCd#
		 	 </isNotEmpty>
		 </isNotNull>       

		<isNotEmpty property="hdofcCodtnCd" prepend="AND">
			<![CDATA[
				A.HDOFC_CODTN_CD
			]]>
			<iterate prepend="IN" property="hdofcCodtnCdArr" open="(" close=")" conjunction=",">
				 #hdofcCodtnCdArr[]#
			</iterate>
		</isNotEmpty> 
		
		
		<isNotNull property="payrMangDeptCd">
			<isNotEmpty property="payrMangDeptCd" >
			  AND EXISTS  (
	                         SELECT  C.DPOB_CD,
	                                 C.DTIL_OCCU_INTTN_CD,
	                                 C.TYP_OCCU_CD,
	                                 C.DEPT_CD FROM 
	                                             ( SELECT * 
                                                 FROM TABLE(PKG_DTIL_AUTH.FN_DTIL_AUTH_TB(#dpobCd#,#payrMangDeptYn#,#payrMangDeptCd#,#deptCd#,#usrId#,#deptCdAuth#,'' )) ) C
	                                            WHERE     C.DPOB_CD = A.DPOB_CD
							                        AND C.DEPT_CD = A.CURR_AFFN_DEPT_CD
							                        AND NVL(C.TYP_OCCU_CD,'TT')  = NVL(A.TYP_OCCU_CD,'TT') 
	                                                AND NVL(C.DTIL_OCCU_INTTN_CD,'TT')  = NVL(A.DTIL_OCCU_INTTN_CD,'TT')
	                                                
													<isNotEmpty property="deptCd" prepend="AND">
													    C.DEPT_CD IN ( SELECT BA0400.DEPT_CD
																				FROM BASS0400 BA0400
																			WHERE BA0400.DEPT_USE_YN = 'Y'
																			START WITH BA0400.DEPT_CD 							
																				<iterate prepend="IN" property="deptCdArr" open="(" close=")" conjunction=",">
																					#deptCdArr[]#
																				</iterate>
													                         CONNECT BY PRIOR BA0400.DEPT_CD = BA0400.HHRK_DEPT_CD
																			 ) 
													</isNotEmpty>
							) 
			</isNotEmpty> 
		</isNotNull>		
			 
		 
         <isNotNull property="jnOpztnNm">
		     <isNotEmpty property="jnOpztnNm">
		 		AND B.JN_OPZTN_NM LIKE '%' || #jnOpztnNm# || '%' 
		 	 </isNotEmpty>
		</isNotNull>
		<isNotNull property="jnDtS">
		     <isNotEmpty property="jnDtS">
		 		AND B.JN_DT &gt;= #jnDtS#
		 	 </isNotEmpty>
		</isNotNull>
		<isNotNull property="jnDtE">
		     <isNotEmpty property="jnDtE">
		 		AND B.JN_DT &lt;= #jnDtE#
		 	 </isNotEmpty>
		</isNotNull>
	</select>
	
	
	
	<!-- 학력 -->
	<!-- <select id="psnl0600DAO.selectPsnl0116" parameterClass="hashMap" resultClass="egovMap"> -->
	<select id="psnl0600DAO.selectPsnl0116" parameterClass="psnl0600SrhVO" resultClass="egovMap">
	
	SELECT * FROM (
			SELECT T.*, ROWNUM RNUM FROM (
			
		SELECT  FCBASS0400CDNM (A.DPOB_CD, A.CURR_AFFN_DEPT_CD, '2') AS CURR_DEPT_NM
		       	, FCBASS0400CDNM (A.DPOB_CD, A.DEPT_CD, '2') AS DEPT_NM
		       	, FCBASS0300CDNM(A.DPOB_CD, A.EMYMT_DIV_CD) as EMYMT_DIV_NM
		       	, A.HAN_NM
		       	, SUBSTR(A.RESN_REGN_NUM,0,6)||'-'||SUBSTR(A.RESN_REGN_NUM,7) AS RESN_REGN_NUM
		        , fcBass0320CDNM(A.DPOB_CD, A.TYP_OCCU_CD) AS  TYPE_OCCU_NM 
		       	, A.DTIL_OCCU_INTTN_CD 
		       	, fcBassEx0350CDNM(A.DPOB_CD,A.TYP_OCCU_CD,A.DTIL_OCCU_INTTN_CD,'1' ) AS DTIL_OCCU_INTTN_NM
		       	, FCBASS0500CDNM (A.DPOB_CD, SUBSTR (A.EMYMT_BGNN_DT, 1, 4), A.CURR_AFFN_DEPT_CD, A.BUSIN_CD) AS BUSIN_NM
               	, FCBASS0300CDNM(A.DPOB_CD, A.HDOFC_CODTN_CD) as HDOFC_CODTN_NM
               	, DECODE(LENGTH(B.ETNC_ITSHL_DT), 8, TO_CHAR(TO_DATE(B.ETNC_ITSHL_DT,'YYYYMMDD'),'YYYY.MM.DD'),B.ETNC_ITSHL_DT) AS ETNC_ITSHL_DT  
               	, DECODE(LENGTH(B.GRDTN_DT), 8, TO_CHAR(TO_DATE(B.GRDTN_DT,'YYYYMMDD'),'YYYY.MM.DD'),B.GRDTN_DT) AS GRDTN_DT 
               	, FCBASS0300CDNM(A.DPOB_CD, B.ACAD_ABTY_DIV_CD) as ACAD_ABTY_DIV_CD
               	, FCBASS0300CDNM(A.DPOB_CD, B.SCHL_CD) as SCHL_CD 
               	, FCBASS0300CDNM(A.DPOB_CD, B.DEPR_MAJR_CD) as DEPR_MAJR_CD
               	, FCBASS0300CDNM(A.DPOB_CD, B.DEGR_DIV_CD) as DEGR_DIV_CD 
               	, FCBASS0300CDNM(A.DPOB_CD, B.LESN_YR_NUM_CD) as LESN_YR_NUM_CD
               	, B.ACAD_ABTY_NOTE_CTNT
               	, A.SYSTEMKEY 
		FROM PSNL0100 A, PSNL0116 B, PAYR0500 D
     	WHERE A.DPOB_CD = B.DPOB_CD(+)
			AND A.SYSTEMKEY = B.SYSTEMKEY(+)
			AND A.DPOB_CD = D.DPOB_CD(+)
		    AND A.SYSTEMKEY = D.SYSTEMKEY(+)
         	AND B.ACAD_ABTY_SEIL_NUM IS NOT NULL
         
         <include refid="defaultWhereSql"/>

		 <isNotNull property="emymtDivCd">
		     <isNotEmpty property="emymtDivCd">
		 		AND A.EMYMT_DIV_CD = #emymtDivCd#
		 	 </isNotEmpty>
		 </isNotNull>

		<isNotEmpty property="hdofcCodtnCd" prepend="AND">
			<![CDATA[
				A.HDOFC_CODTN_CD
			]]>
			<iterate prepend="IN" property="hdofcCodtnCdArr" open="(" close=")" conjunction=",">
				 #hdofcCodtnCdArr[]#
			</iterate>
		</isNotEmpty> 	 
		          
         <isNotNull property="payrMangDeptCd">
			<isNotEmpty property="payrMangDeptCd" >
		  AND EXISTS  (
                         SELECT  C.DPOB_CD,
                                 C.DTIL_OCCU_INTTN_CD,
                                 C.TYP_OCCU_CD,
                                 C.DEPT_CD FROM 
                                             ( SELECT * 
                                                 FROM TABLE(PKG_DTIL_AUTH.FN_DTIL_AUTH_TB(#dpobCd#,#payrMangDeptYn#,#payrMangDeptCd#,#deptCd#,#usrId#,#deptCdAuth#,'' )) ) C
                                            WHERE     C.DPOB_CD = A.DPOB_CD
						                        AND C.DEPT_CD = A.CURR_AFFN_DEPT_CD
						                        AND NVL(C.TYP_OCCU_CD,'TT')  = NVL(A.TYP_OCCU_CD,'TT') 
                                                AND NVL(C.DTIL_OCCU_INTTN_CD,'TT')  = NVL(A.DTIL_OCCU_INTTN_CD,'TT')
   
												<isNotEmpty property="deptCd" prepend="AND">
												    C.DEPT_CD IN ( SELECT BA0400.DEPT_CD
																			FROM BASS0400 BA0400
																		WHERE BA0400.DEPT_USE_YN = 'Y'
																		START WITH BA0400.DEPT_CD 							
																			<iterate prepend="IN" property="deptCdArr" open="(" close=")" conjunction=",">
																				#deptCdArr[]#
																			</iterate>
												                         CONNECT BY PRIOR BA0400.DEPT_CD = BA0400.HHRK_DEPT_CD
																		 ) 
												</isNotEmpty>   
                                                
                                                <!-- 
                                               <isNotEmpty property="deptCd" prepend="AND">
												<![CDATA[
												 C.DEPT_CD
												]]>
												<iterate prepend="IN" property="deptCdArr" open="(" close=")" conjunction=",">
												 #deptCdArr[]#
												</iterate>
												</isNotEmpty> 
												 -->
		) 
		</isNotEmpty> 
		</isNotNull>
         
         <isNotNull property="acadAbtyDivCd">
		     <isNotEmpty property="acadAbtyDivCd">
		 		AND B.ACAD_ABTY_DIV_CD = #acadAbtyDivCd# 
		 	 </isNotEmpty>
		</isNotNull>
		<isNotNull property="degrDivCd">
		     <isNotEmpty property="degrDivCd">
		 		AND B.DEGR_DIV_CD = #degrDivCd# 
		 	 </isNotEmpty>
		</isNotNull>
		<isNotNull property="deprMajrCd">
		     <isNotEmpty property="deprMajrCd">
		 		AND B.DEPR_MAJR_CD = #deprMajrCd# 
		 	 </isNotEmpty>
		</isNotNull>
		<isNotNull property="schlCd">
		     <isNotEmpty property="schlCd">
		 		AND B.SCHL_CD = #schlCd#  
		 	 </isNotEmpty>
		</isNotNull>
		
		
	<isNotEqual  property="lastIndex" compareValue="-1">
 	<![CDATA[					
				) T WHERE ROWNUM <= #lastIndex#
		)WHERE RNUM >= #firstIndex#
	]]>
	</isNotEqual>	
	<isEqual   property="lastIndex" compareValue="-1">
  	<![CDATA[					
		) T  
	)
	]]>
	</isEqual>			
         
         <!-- 
         <isNotNull property="searchAcadAbtyDivCd">
		     <isNotEmpty property="searchAcadAbtyDivCd">
		 		AND B.ACAD_ABTY_DIV_CD = #searchAcadAbtyDivCd# 
		 	 </isNotEmpty>
		</isNotNull>
		<isNotNull property="searchDegrDivCd">
		     <isNotEmpty property="searchDegrDivCd">
		 		AND B.DEGR_DIV_CD = #searchDegrDivCd# 
		 	 </isNotEmpty>
		</isNotNull>
		<isNotNull property="searchDeprMajrCd">
		     <isNotEmpty property="searchDeprMajrCd">
		 		AND B.DEPR_MAJR_CD = #searchDeprMajrCd# 
		 	 </isNotEmpty>
		</isNotNull>
		<isNotNull property="searchSchlCd">
		     <isNotEmpty property="searchSchlCd">
		 		AND B.SCHL_CD = #searchSchlCd#  
		 	 </isNotEmpty>
		</isNotNull>
		 -->
	</select>
	
	<select id="psnl0600DAO.selectPsnl0116ListTotCnt_S" parameterClass="psnl0600SrhVO" resultClass="int">
	    <![CDATA[
	    SELECT COUNT(*)
		FROM PSNL0100 A, PSNL0116 B, PAYR0500 D
     	WHERE A.DPOB_CD = B.DPOB_CD(+)
			AND A.SYSTEMKEY = B.SYSTEMKEY(+)
			AND A.DPOB_CD = D.DPOB_CD(+)
		    AND A.SYSTEMKEY = D.SYSTEMKEY(+)
         	AND B.ACAD_ABTY_SEIL_NUM IS NOT NULL
          ]]>	
          
         <include refid="defaultWhereSql"/>

		 <isNotNull property="emymtDivCd">
		     <isNotEmpty property="emymtDivCd">
		 		AND A.EMYMT_DIV_CD = #emymtDivCd#
		 	 </isNotEmpty>
		 </isNotNull>

		<isNotEmpty property="hdofcCodtnCd" prepend="AND">
			<![CDATA[
				A.HDOFC_CODTN_CD
			]]>
			<iterate prepend="IN" property="hdofcCodtnCdArr" open="(" close=")" conjunction=",">
				 #hdofcCodtnCdArr[]#
			</iterate>
		</isNotEmpty> 
		
         <isNotNull property="payrMangDeptCd">
			<isNotEmpty property="payrMangDeptCd" >
		  AND EXISTS  (
                         SELECT  C.DPOB_CD,
                                 C.DTIL_OCCU_INTTN_CD,
                                 C.TYP_OCCU_CD,
                                 C.DEPT_CD FROM 
                                             ( SELECT * 
                                                 FROM TABLE(PKG_DTIL_AUTH.FN_DTIL_AUTH_TB(#dpobCd#,#payrMangDeptYn#,#payrMangDeptCd#,#deptCd#,#usrId#,#deptCdAuth#,'' ))) C
                                            WHERE     C.DPOB_CD = A.DPOB_CD
						                        AND C.DEPT_CD = A.CURR_AFFN_DEPT_CD
						                        AND NVL(C.TYP_OCCU_CD,'TT')  = NVL(A.TYP_OCCU_CD,'TT') 
                                                AND NVL(C.DTIL_OCCU_INTTN_CD,'TT')  = NVL(A.DTIL_OCCU_INTTN_CD,'TT')
   
												<isNotEmpty property="deptCd" prepend="AND">
												    C.DEPT_CD IN ( SELECT BA0400.DEPT_CD
																			FROM BASS0400 BA0400
																		WHERE BA0400.DEPT_USE_YN = 'Y'
																		START WITH BA0400.DEPT_CD 							
																			<iterate prepend="IN" property="deptCdArr" open="(" close=")" conjunction=",">
																				#deptCdArr[]#
																			</iterate>
												                         CONNECT BY PRIOR BA0400.DEPT_CD = BA0400.HHRK_DEPT_CD
																		 ) 
												</isNotEmpty>   
					) 
			</isNotEmpty> 
		 </isNotNull>		
         
         <isNotNull property="acadAbtyDivCd">
		     <isNotEmpty property="acadAbtyDivCd">
		 		AND B.ACAD_ABTY_DIV_CD = #acadAbtyDivCd# 
		 	 </isNotEmpty>
		</isNotNull>
		<isNotNull property="degrDivCd">
		     <isNotEmpty property="degrDivCd">
		 		AND B.DEGR_DIV_CD = #degrDivCd# 
		 	 </isNotEmpty>
		</isNotNull>
		<isNotNull property="deprMajrCd">
		     <isNotEmpty property="deprMajrCd">
		 		AND B.DEPR_MAJR_CD = #deprMajrCd# 
		 	 </isNotEmpty>
		</isNotNull>
		<isNotNull property="schlCd">
		     <isNotEmpty property="schlCd">
		 		AND B.SCHL_CD = #schlCd#  
		 	 </isNotEmpty>
		</isNotNull>
	</select>
	
	
	<!-- 경력 -->
	<!-- <select id="psnl0600DAO.selectPsnl0119" parameterClass="hashMap" resultClass="egovMap"> -->
	<select id="psnl0600DAO.selectPsnl0119" parameterClass="psnl0600SrhVO" resultClass="egovMap">
	
		SELECT * FROM (
			SELECT T.*, ROWNUM RNUM FROM (	
	
		SELECT  FCBASS0400CDNM (A.DPOB_CD, A.CURR_AFFN_DEPT_CD, '2') AS CURR_DEPT_NM
				, FCBASS0400CDNM (A.DPOB_CD, A.DEPT_CD, '2') AS DEPT_NM
				, FCBASS0300CDNM(A.DPOB_CD, A.EMYMT_DIV_CD) as EMYMT_DIV_NM
				, A.HAN_NM
				, SUBSTR(A.RESN_REGN_NUM,0,6)||'-'||SUBSTR(A.RESN_REGN_NUM,7) AS RESN_REGN_NUM
				, fcBass0320CDNM(A.DPOB_CD, A.TYP_OCCU_CD) AS  TYPE_OCCU_NM 
		       	, A.DTIL_OCCU_INTTN_CD 
		       	, fcBassEx0350CDNM(A.DPOB_CD,A.TYP_OCCU_CD,A.DTIL_OCCU_INTTN_CD,'1' ) AS DTIL_OCCU_INTTN_NM
				, FCBASS0500CDNM (A.DPOB_CD, SUBSTR (A.EMYMT_BGNN_DT, 1, 4), A.CURR_AFFN_DEPT_CD, A.BUSIN_CD) AS BUSIN_NM
		     	, FCBASS0300CDNM(A.DPOB_CD, A.HDOFC_CODTN_CD) as HDOFC_CODTN_NM
		        , DECODE(LENGTH(B.CARR_BGNN_DT), 8, TO_CHAR(TO_DATE(B.CARR_BGNN_DT,'YYYYMMDD'),'YYYY.MM.DD'),B.CARR_BGNN_DT) AS CARR_BGNN_DT
		        , DECODE(LENGTH(B.CARR_END_DT), 8, TO_CHAR(TO_DATE(B.CARR_END_DT,'YYYYMMDD'),'YYYY.MM.DD'),B.CARR_END_DT) AS CARR_END_DT
		        , B.PAE_WORK_NM
		        , B.ODTY_NM
		        , B.REPBTY_BUSIN_NM
		        , B.CARR_NOTE_CTNT
		        , A.SYSTEMKEY
		FROM PSNL0100 A, PSNL0119 B, PAYR0500 D
		WHERE A.DPOB_CD = B.DPOB_CD(+)
			AND A.SYSTEMKEY = B.SYSTEMKEY(+)
			AND A.DPOB_CD = D.DPOB_CD(+)
		    AND A.SYSTEMKEY = D.SYSTEMKEY(+)
			AND B.CARR_RSPT_SEIL_NUM IS NOT NULL
		         
			<include refid="defaultWhereSql"/>

		 <isNotNull property="emymtDivCd">
		     <isNotEmpty property="emymtDivCd">
		 		AND A.EMYMT_DIV_CD = #emymtDivCd#
		 	 </isNotEmpty>
		 </isNotNull>
			
		<isNotEmpty property="hdofcCodtnCd" prepend="AND">
			<![CDATA[
				A.HDOFC_CODTN_CD
			]]>
			<iterate prepend="IN" property="hdofcCodtnCdArr" open="(" close=")" conjunction=",">
				 #hdofcCodtnCdArr[]#
			</iterate>
		</isNotEmpty> 	 

		<isNotNull property="payrMangDeptCd">
			<isNotEmpty property="payrMangDeptCd" >
		  AND EXISTS  (
                         SELECT  C.DPOB_CD,
                                 C.DTIL_OCCU_INTTN_CD,
                                 C.TYP_OCCU_CD,
                                 C.DEPT_CD FROM 
                                             ( SELECT * 
                                                 FROM TABLE(PKG_DTIL_AUTH.FN_DTIL_AUTH_TB(#dpobCd#,#payrMangDeptYn#,#payrMangDeptCd#,#deptCd#,#usrId#,#deptCdAuth#,'' ))) C
                                            WHERE     C.DPOB_CD = A.DPOB_CD
						                        AND C.DEPT_CD = A.CURR_AFFN_DEPT_CD
						                        AND NVL(C.TYP_OCCU_CD,'TT')  = NVL(A.TYP_OCCU_CD,'TT') 
                                                AND NVL(C.DTIL_OCCU_INTTN_CD,'TT')  = NVL(A.DTIL_OCCU_INTTN_CD,'TT')
                                                
                                                <isNotEmpty property="deptCd" prepend="AND">
												    C.DEPT_CD IN ( SELECT BA0400.DEPT_CD
																			FROM BASS0400 BA0400
																		WHERE BA0400.DEPT_USE_YN = 'Y'
																		START WITH BA0400.DEPT_CD 							
																			<iterate prepend="IN" property="deptCdArr" open="(" close=")" conjunction=",">
																				#deptCdArr[]#
																			</iterate>
												                         CONNECT BY PRIOR BA0400.DEPT_CD = BA0400.HHRK_DEPT_CD
																		 ) 
												</isNotEmpty>
                                                
                                                <!-- 
                                               <isNotEmpty property="deptCd" prepend="AND">
												<![CDATA[
												 C.DEPT_CD
												]]>
												<iterate prepend="IN" property="deptCdArr" open="(" close=")" conjunction=",">
												 #deptCdArr[]#
												</iterate>
												</isNotEmpty> 
												 -->
		) 
		</isNotEmpty> 
		</isNotNull>
		    
			<isNotNull property="paeWorkNm">
				<isNotEmpty property="paeWorkNm">
					AND B.PAE_WORK_NM LIKE '%' || #paeWorkNm# || '%' 
				</isNotEmpty>
			</isNotNull>
			<isNotNull property="carrBgnnDtS">
				<isNotEmpty property="carrBgnnDtS">
					AND B.CARR_BGNN_DT &gt;= #carrBgnnDtS#
				 </isNotEmpty>
			</isNotNull>
			<isNotNull property="carrBgnnDtE">
				<isNotEmpty property="carrBgnnDtE">
					AND B.CARR_BGNN_DT &lt;= #carrBgnnDtE#
				</isNotEmpty>
			</isNotNull>
			
		<isNotEqual  property="lastIndex" compareValue="-1">
 	<![CDATA[					
				) T WHERE ROWNUM <= #lastIndex#
		)WHERE RNUM >= #firstIndex#
	]]>
	</isNotEqual>	
	<isEqual   property="lastIndex" compareValue="-1">
  	<![CDATA[					
		) T  
	)
	]]>
	</isEqual>				
			
			<!-- 
		         <isNotNull property="searchPaeWorkNm">
				     <isNotEmpty property="searchPaeWorkNm">
				 		AND B.PAE_WORK_NM LIKE '%' || #searchPaeWorkNm# || '%' 
				 	 </isNotEmpty>
				</isNotNull>
				<isNotNull property="searchCarrBgnnDtS">
				     <isNotEmpty property="searchCarrBgnnDtS">
				 		AND SUBSTR(B.CARR_BGNN_DT,1,6) &gt;= #searchCarrBgnnDtS#
				 	 </isNotEmpty>
				</isNotNull>
				<isNotNull property="searchCarrBgnnDtE">
				     <isNotEmpty property="searchCarrBgnnDtE">
				 		AND SUBSTR(B.CARR_BGNN_DT,1,6) &lt;= #searchCarrBgnnDtE#
				 	 </isNotEmpty>
				</isNotNull>
				 -->
		         
	</select>
	
		
	<select id="psnl0600DAO.selectPsnl0119ListTotCnt_S" parameterClass="psnl0600SrhVO" resultClass="int">
	    <![CDATA[
	    SELECT COUNT(*)
		FROM PSNL0100 A, PSNL0119 B, PAYR0500 D
		WHERE A.DPOB_CD = B.DPOB_CD(+)
			AND A.SYSTEMKEY = B.SYSTEMKEY(+)
			AND A.DPOB_CD = D.DPOB_CD(+)
		    AND A.SYSTEMKEY = D.SYSTEMKEY(+)
			AND B.CARR_RSPT_SEIL_NUM IS NOT NULL
		  ]]>	         
			<include refid="defaultWhereSql"/>

		 <isNotNull property="emymtDivCd">
		     <isNotEmpty property="emymtDivCd">
		 		AND A.EMYMT_DIV_CD = #emymtDivCd#
		 	 </isNotEmpty>
		 </isNotNull>

		<isNotEmpty property="hdofcCodtnCd" prepend="AND">
			<![CDATA[
				A.HDOFC_CODTN_CD
			]]>
			<iterate prepend="IN" property="hdofcCodtnCdArr" open="(" close=")" conjunction=",">
				 #hdofcCodtnCdArr[]#
			</iterate>
		</isNotEmpty> 	

		<isNotNull property="payrMangDeptCd">
			<isNotEmpty property="payrMangDeptCd" >
			  AND EXISTS  (
	                         SELECT  C.DPOB_CD,
	                                 C.DTIL_OCCU_INTTN_CD,
	                                 C.TYP_OCCU_CD,
	                                 C.DEPT_CD FROM 
	                                             ( SELECT * 
                                                 FROM TABLE(PKG_DTIL_AUTH.FN_DTIL_AUTH_TB(#dpobCd#,#payrMangDeptYn#,#payrMangDeptCd#,#deptCd#,#usrId#,#deptCdAuth#,'' )) ) C
	                                            WHERE     C.DPOB_CD = A.DPOB_CD
							                        AND C.DEPT_CD = A.CURR_AFFN_DEPT_CD
							                        AND NVL(C.TYP_OCCU_CD,'TT')  = NVL(A.TYP_OCCU_CD,'TT') 
	                                                AND NVL(C.DTIL_OCCU_INTTN_CD,'TT')  = NVL(A.DTIL_OCCU_INTTN_CD,'TT')
	                                                
													<isNotEmpty property="deptCd" prepend="AND">
													    C.DEPT_CD IN ( SELECT BA0400.DEPT_CD
																				FROM BASS0400 BA0400
																			WHERE BA0400.DEPT_USE_YN = 'Y'
																			START WITH BA0400.DEPT_CD 							
																				<iterate prepend="IN" property="deptCdArr" open="(" close=")" conjunction=",">
																					#deptCdArr[]#
																				</iterate>
													                         CONNECT BY PRIOR BA0400.DEPT_CD = BA0400.HHRK_DEPT_CD
																			 ) 
													</isNotEmpty>
								) 
				</isNotEmpty> 
			</isNotNull>
		    
			<isNotNull property="paeWorkNm">
				<isNotEmpty property="paeWorkNm">
					AND B.PAE_WORK_NM LIKE '%' || #paeWorkNm# || '%' 
				</isNotEmpty>
			</isNotNull>
			<isNotNull property="carrBgnnDtS">
				<isNotEmpty property="carrBgnnDtS">
					AND B.CARR_BGNN_DT &gt;= #carrBgnnDtS#
				 </isNotEmpty>
			</isNotNull>
			<isNotNull property="carrBgnnDtE">
				<isNotEmpty property="carrBgnnDtE">
					AND B.CARR_BGNN_DT &lt;= #carrBgnnDtE#
				</isNotEmpty>
			</isNotNull>
	</select>
	
	
	<!-- 자격 -->
	<!-- <select id="psnl0600DAO.selectPsnl0118" parameterClass="hashMap" resultClass="egovMap"> -->
	<select id="psnl0600DAO.selectPsnl0118" parameterClass="psnl0600SrhVO" resultClass="egovMap">
	
		SELECT * FROM (
			SELECT T.*, ROWNUM RNUM FROM (	
	
		SELECT  FCBASS0400CDNM (A.DPOB_CD, A.CURR_AFFN_DEPT_CD, '2') AS CURR_DEPT_NM
		       	, FCBASS0400CDNM (A.DPOB_CD, A.DEPT_CD, '2') AS DEPT_NM
		       	, FCBASS0300CDNM(A.DPOB_CD, A.EMYMT_DIV_CD) as EMYMT_DIV_NM
		       	, A.HAN_NM
		       	, SUBSTR(A.RESN_REGN_NUM,0,6)||'-'||SUBSTR(A.RESN_REGN_NUM,7) AS RESN_REGN_NUM
		        , fcBass0320CDNM(A.DPOB_CD, A.TYP_OCCU_CD) AS  TYPE_OCCU_NM 
		       	, A.DTIL_OCCU_INTTN_CD 
		       	, fcBassEx0350CDNM(A.DPOB_CD,A.TYP_OCCU_CD,A.DTIL_OCCU_INTTN_CD,'1' ) AS DTIL_OCCU_INTTN_NM
		       	, FCBASS0500CDNM (A.DPOB_CD, SUBSTR (A.EMYMT_BGNN_DT, 1, 4), A.CURR_AFFN_DEPT_CD, A.BUSIN_CD) AS BUSIN_NM
	        	, FCBASS0300CDNM(A.DPOB_CD, A.HDOFC_CODTN_CD) as HDOFC_CODTN_NM
	         	, DECODE(LENGTH(B.AQTN_DT), 8, TO_CHAR(TO_DATE(B.AQTN_DT,'YYYYMMDD'),'YYYY.MM.DD'),B.AQTN_DT) AS AQTN_DT
	            , FCBASS0300CDNM(A.DPOB_CD, B.QFTNT_LICNS_CD) as QFTNT_LICNS_CD
	            , B.QFTNT_LICNS_POVNC_CTNT
	            , B.EFMN_ISTUT_NM
	            , B.QFTNT_LICNS_NUM
	            , A.SYSTEMKEY
		FROM PSNL0100 A, PSNL0118 B, PAYR0500 D
		WHERE A.DPOB_CD = B.DPOB_CD(+)
			AND A.SYSTEMKEY = B.SYSTEMKEY(+)
			AND A.DPOB_CD = D.DPOB_CD(+)
			AND A.SYSTEMKEY = D.SYSTEMKEY(+)
			AND B.QFTNT_LICNS_SEIL_NUM IS NOT NULL
			
	        <include refid="defaultWhereSql"/>

		 <isNotNull property="emymtDivCd">
		     <isNotEmpty property="emymtDivCd">
		 		AND A.EMYMT_DIV_CD = #emymtDivCd#
		 	 </isNotEmpty>
		 </isNotNull>
	
	
		<isNotEmpty property="hdofcCodtnCd" prepend="AND">
			<![CDATA[
				A.HDOFC_CODTN_CD
			]]>
			<iterate prepend="IN" property="hdofcCodtnCdArr" open="(" close=")" conjunction=",">
				 #hdofcCodtnCdArr[]#
			</iterate>
		</isNotEmpty> 	 	
	        
		<isNotNull property="payrMangDeptCd">
			<isNotEmpty property="payrMangDeptCd" >
		  AND EXISTS  (
                         SELECT  C.DPOB_CD,
                                 C.DTIL_OCCU_INTTN_CD,
                                 C.TYP_OCCU_CD,
                                 C.DEPT_CD FROM 
                                             ( SELECT * 
                                                 FROM TABLE(PKG_DTIL_AUTH.FN_DTIL_AUTH_TB(#dpobCd#,#payrMangDeptYn#,#payrMangDeptCd#,#deptCd#,#usrId#,#deptCdAuth#,'' )) ) C
                                            WHERE     C.DPOB_CD = A.DPOB_CD
						                        AND C.DEPT_CD = A.CURR_AFFN_DEPT_CD
						                        AND NVL(C.TYP_OCCU_CD,'TT')  = NVL(A.TYP_OCCU_CD,'TT') 
                                                AND NVL(C.DTIL_OCCU_INTTN_CD,'TT')  = NVL(A.DTIL_OCCU_INTTN_CD,'TT')
                                                
                                                <isNotEmpty property="deptCd" prepend="AND">
												    C.DEPT_CD IN ( SELECT BA0400.DEPT_CD
																			FROM BASS0400 BA0400
																		WHERE BA0400.DEPT_USE_YN = 'Y'
																		START WITH BA0400.DEPT_CD 							
																			<iterate prepend="IN" property="deptCdArr" open="(" close=")" conjunction=",">
																				#deptCdArr[]#
																			</iterate>
												                         CONNECT BY PRIOR BA0400.DEPT_CD = BA0400.HHRK_DEPT_CD
																		 ) 
												</isNotEmpty>
                                                
                                                <!-- 
                                               <isNotEmpty property="deptCd" prepend="AND">
												<![CDATA[
												 C.DEPT_CD
												]]>
												<iterate prepend="IN" property="deptCdArr" open="(" close=")" conjunction=",">
												 #deptCdArr[]#
												</iterate>
												</isNotEmpty> 
												 -->
		) 
		</isNotEmpty> 
		</isNotNull>
	         
	        <isNotNull property="qftntLicnsPovncCtnt">
				<isNotEmpty property="qftntLicnsPovncCtnt">
					AND B.QFTNT_LICNS_POVNC_CTNT LIKE '%' || #qftntLicnsPovncCtnt# || '%' 
			 	</isNotEmpty>
			</isNotNull>
			<isNotNull property="aqtnDtS">
				<isNotEmpty property="aqtnDtS">
					AND B.AQTN_DT &gt;= #aqtnDtS#
				</isNotEmpty>
			</isNotNull>
			<isNotNull property="aqtnDtE">
			     <isNotEmpty property="aqtnDtE">
					AND B.AQTN_DT &lt;= #aqtnDtE#
			 	 </isNotEmpty>
			</isNotNull>
			
			
		<isNotEqual  property="lastIndex" compareValue="-1">
 	<![CDATA[					
				) T WHERE ROWNUM <= #lastIndex#
		)WHERE RNUM >= #firstIndex#
	]]>
	</isNotEqual>	
	<isEqual   property="lastIndex" compareValue="-1">
  	<![CDATA[					
		) T  
	)
	]]>
	</isEqual>				
			
			
	        <!-- 
	        <isNotNull property="searchQftntLicnsNum">
			     <isNotEmpty property="searchQftntLicnsNum">
			 		AND B.QFTNT_LICNS_NUM LIKE '%' || #searchQftntLicnsNum# || '%' 
			 	 </isNotEmpty>
			</isNotNull>
			<isNotNull property="searchAqtnDtS">
			     <isNotEmpty property="searchAqtnDtS">
			 		AND SUBSTR(B.AQTN_DT,1,6) &gt;= #searchAqtnDtS#
			 	 </isNotEmpty>
			</isNotNull>
			<isNotNull property="searchAqtnDtE">
			     <isNotEmpty property="searchAqtnDtE">
			 		AND SUBSTR(B.AQTN_DT,1,6) &lt;= #searchAqtnDtE#
			 	 </isNotEmpty>
			</isNotNull>
	          -->
	</select>
	
	
	<select id="psnl0600DAO.selectPsnl0118ListTotCnt_S" parameterClass="psnl0600SrhVO" resultClass="int">
	    <![CDATA[
	    SELECT COUNT(*)
		FROM PSNL0100 A, PSNL0118 B, PAYR0500 D
		WHERE A.DPOB_CD = B.DPOB_CD(+)
			AND A.SYSTEMKEY = B.SYSTEMKEY(+)
			AND A.DPOB_CD = D.DPOB_CD(+)
			AND A.SYSTEMKEY = D.SYSTEMKEY(+)
			AND B.QFTNT_LICNS_SEIL_NUM IS NOT NULL
		  ]]>	         
		<include refid="defaultWhereSql"/>

		 <isNotNull property="emymtDivCd">
		     <isNotEmpty property="emymtDivCd">
		 		AND A.EMYMT_DIV_CD = #emymtDivCd#
		 	 </isNotEmpty>
		 </isNotNull>

		<isNotEmpty property="hdofcCodtnCd" prepend="AND">
			<![CDATA[
				A.HDOFC_CODTN_CD
			]]>
			<iterate prepend="IN" property="hdofcCodtnCdArr" open="(" close=")" conjunction=",">
				 #hdofcCodtnCdArr[]#
			</iterate>
		</isNotEmpty> 	
		
		<isNotNull property="payrMangDeptCd">
			<isNotEmpty property="payrMangDeptCd" >
			  AND EXISTS  (
	                         SELECT  C.DPOB_CD,
	                                 C.DTIL_OCCU_INTTN_CD,
	                                 C.TYP_OCCU_CD,
	                                 C.DEPT_CD FROM 
	                                             ( SELECT * 
                                                 FROM TABLE(PKG_DTIL_AUTH.FN_DTIL_AUTH_TB(#dpobCd#,#payrMangDeptYn#,#payrMangDeptCd#,#deptCd#,#usrId#,#deptCdAuth#,'' )) ) C
	                                            WHERE     C.DPOB_CD = A.DPOB_CD
							                        AND C.DEPT_CD = A.CURR_AFFN_DEPT_CD
							                        AND NVL(C.TYP_OCCU_CD,'TT')  = NVL(A.TYP_OCCU_CD,'TT') 
	                                                AND NVL(C.DTIL_OCCU_INTTN_CD,'TT')  = NVL(A.DTIL_OCCU_INTTN_CD,'TT')
	                                                
													<isNotEmpty property="deptCd" prepend="AND">
													    C.DEPT_CD IN ( SELECT BA0400.DEPT_CD
																				FROM BASS0400 BA0400
																			WHERE BA0400.DEPT_USE_YN = 'Y'
																			START WITH BA0400.DEPT_CD 							
																				<iterate prepend="IN" property="deptCdArr" open="(" close=")" conjunction=",">
																					#deptCdArr[]#
																				</iterate>
													                         CONNECT BY PRIOR BA0400.DEPT_CD = BA0400.HHRK_DEPT_CD
																			 ) 
													</isNotEmpty>
							) 
			</isNotEmpty> 
		</isNotNull>		
		 
		
		<isNotNull property="qftntLicnsPovncCtnt">
			<isNotEmpty property="qftntLicnsPovncCtnt">
				AND B.QFTNT_LICNS_POVNC_CTNT LIKE '%' || #qftntLicnsPovncCtnt# || '%' 
			</isNotEmpty>
		</isNotNull>
		<isNotNull property="aqtnDtS">
			<isNotEmpty property="aqtnDtS">
				AND B.AQTN_DT &gt;= #aqtnDtS#
			</isNotEmpty>
		</isNotNull>
		<isNotNull property="aqtnDtE">
			<isNotEmpty property="aqtnDtE">
				AND B.AQTN_DT &lt;= #aqtnDtE#
			</isNotEmpty>
		</isNotNull>
	</select>
	
	
	<!-- 교육 -->
	<!-- <select id="psnl0600DAO.selectPsnl0120" parameterClass="hashMap" resultClass="egovMap"> -->
	<select id="psnl0600DAO.selectPsnl0120" parameterClass="psnl0600SrhVO" resultClass="egovMap">
	
		SELECT * FROM (
			SELECT T.*, ROWNUM RNUM FROM (	
	
	
	
		SELECT FCBASS0400CDNM (A.DPOB_CD, A.CURR_AFFN_DEPT_CD, '2') AS CURR_DEPT_NM
		       	, FCBASS0400CDNM (A.DPOB_CD, A.DEPT_CD, '2') AS DEPT_NM
		       	, FCBASS0300CDNM(A.DPOB_CD, A.EMYMT_DIV_CD) as EMYMT_DIV_NM
		       	, A.HAN_NM
		       	, SUBSTR(A.RESN_REGN_NUM,0,6)||'-'||SUBSTR(A.RESN_REGN_NUM,7) AS RESN_REGN_NUM
		       	, fcBass0320CDNM(A.DPOB_CD, A.TYP_OCCU_CD) AS  TYPE_OCCU_NM 
		       	, A.DTIL_OCCU_INTTN_CD 
		       	, fcBassEx0350CDNM(A.DPOB_CD,A.TYP_OCCU_CD,A.DTIL_OCCU_INTTN_CD,'1' ) AS DTIL_OCCU_INTTN_NM
		       	, FCBASS0500CDNM (A.DPOB_CD, SUBSTR (A.EMYMT_BGNN_DT, 1, 4), A.CURR_AFFN_DEPT_CD, A.BUSIN_CD) AS BUSIN_NM
	          	, FCBASS0300CDNM(A.DPOB_CD, A.HDOFC_CODTN_CD) as HDOFC_CODTN_NM
	         	, DECODE(LENGTH(B.EDU_BGNN_DT), 8, TO_CHAR(TO_DATE(B.EDU_BGNN_DT,'YYYYMMDD'),'YYYY.MM.DD'),B.EDU_BGNN_DT) AS EDU_BGNN_DT
	          	, DECODE(LENGTH(B.EDU_END_DT), 8, TO_CHAR(TO_DATE(B.EDU_END_DT,'YYYYMMDD'),'YYYY.MM.DD'),B.EDU_END_DT) AS EDU_END_DT
	        	, B.EDU_CMPTE_TM
	        	, B.EDU_KND_NM
	          	, B.EDU_ISTUT_NM
	         	, B.EDU_NOTE_CTNT
	          	, A.SYSTEMKEY
		FROM PSNL0100 A, PSNL0120 B, PAYR0500 D
		WHERE A.DPOB_CD = B.DPOB_CD(+)
			AND A.SYSTEMKEY = B.SYSTEMKEY(+)
			AND A.DPOB_CD = D.DPOB_CD(+)
			AND A.SYSTEMKEY = D.SYSTEMKEY(+)
	  		AND B.EDU_SEIL_NUM IS NOT NULL
	  		
         	<include refid="defaultWhereSql"/>
  
		 <isNotNull property="emymtDivCd">
		     <isNotEmpty property="emymtDivCd">
		 		AND A.EMYMT_DIV_CD = #emymtDivCd#
		 	 </isNotEmpty>
		 </isNotNull>  

		<isNotEmpty property="hdofcCodtnCd" prepend="AND">
			<![CDATA[
				A.HDOFC_CODTN_CD
			]]>
			<iterate prepend="IN" property="hdofcCodtnCdArr" open="(" close=")" conjunction=",">
				 #hdofcCodtnCdArr[]#
			</iterate>
		</isNotEmpty> 	 
         	
		<isNotNull property="payrMangDeptCd">
			<isNotEmpty property="payrMangDeptCd" >
		  AND EXISTS  (
                         SELECT  C.DPOB_CD,
                                 C.DTIL_OCCU_INTTN_CD,
                                 C.TYP_OCCU_CD,
                                 C.DEPT_CD FROM 
                                             ( SELECT * 
                                                 FROM TABLE(PKG_DTIL_AUTH.FN_DTIL_AUTH_TB(#dpobCd#,#payrMangDeptYn#,#payrMangDeptCd#,#deptCd#,#usrId#,#deptCdAuth#,'' )) ) C
                                            WHERE     C.DPOB_CD = A.DPOB_CD
						                        AND C.DEPT_CD = A.CURR_AFFN_DEPT_CD
						                        AND NVL(C.TYP_OCCU_CD,'TT')  = NVL(A.TYP_OCCU_CD,'TT') 
                                                AND NVL(C.DTIL_OCCU_INTTN_CD,'TT')  = NVL(A.DTIL_OCCU_INTTN_CD,'TT')
                                                
                                                <isNotEmpty property="deptCd" prepend="AND">
												    C.DEPT_CD IN ( SELECT BA0400.DEPT_CD
																			FROM BASS0400 BA0400
																		WHERE BA0400.DEPT_USE_YN = 'Y'
																		START WITH BA0400.DEPT_CD 							
																			<iterate prepend="IN" property="deptCdArr" open="(" close=")" conjunction=",">
																				#deptCdArr[]#
																			</iterate>
												                         CONNECT BY PRIOR BA0400.DEPT_CD = BA0400.HHRK_DEPT_CD
																		 ) 
												</isNotEmpty>
                                                
                                                <!-- 
                                               <isNotEmpty property="deptCd" prepend="AND">
												<![CDATA[
												 C.DEPT_CD
												]]>
												<iterate prepend="IN" property="deptCdArr" open="(" close=")" conjunction=",">
												 #deptCdArr[]#
												</iterate>
												</isNotEmpty> 
												 -->
		) 
		</isNotEmpty> 
		</isNotNull>
         
          	<isNotNull property="eduKndNm">
				<isNotEmpty property="eduKndNm">
					AND B.EDU_KND_NM LIKE '%' || #eduKndNm# || '%' 
		 	 	</isNotEmpty>
			</isNotNull>
			<isNotNull property="eduBgnnDtS">
		     	<isNotEmpty property="eduBgnnDtS">
		 			AND B.EDU_BGNN_DT &gt;= #eduBgnnDtS#
		 	 	</isNotEmpty>
			</isNotNull>
			<isNotNull property="eduBgnnDtE">
		     	<isNotEmpty property="eduBgnnDtE">
		 			AND B.EDU_BGNN_DT &lt;= #eduBgnnDtE#
		 	 	</isNotEmpty>
			</isNotNull>
         <!-- 
        <isNotNull property="searchEduKndNm">
		     <isNotEmpty property="searchEduKndNm">
		 		AND B.EDU_KND_NM LIKE '%' || #searchEduKndNm# || '%' 
		 	 </isNotEmpty>
		</isNotNull>
		<isNotNull property="searchEduBgnnDtS">
		     <isNotEmpty property="searchEduBgnnDtS">
		 		AND SUBSTR(B.EDU_BGNN_DT,1,6) &gt;= #searchEduBgnnDtS#
		 	 </isNotEmpty>
		</isNotNull>
		<isNotNull property="searchEduBgnnDtE">
		     <isNotEmpty property="searchEduBgnnDtE">
		 		AND SUBSTR(B.EDU_BGNN_DT,1,6) &lt;= #searchEduBgnnDtE#
		 	 </isNotEmpty>
		</isNotNull>
          -->
          
		<isNotEqual  property="lastIndex" compareValue="-1">
 	<![CDATA[					
				) T WHERE ROWNUM <= #lastIndex#
		)WHERE RNUM >= #firstIndex#
	]]>
	</isNotEqual>	
	<isEqual   property="lastIndex" compareValue="-1">
  	<![CDATA[					
		) T  
	)
	]]>
	</isEqual>	          
          
	</select>
	
	<select id="psnl0600DAO.selectPsnl0120ListTotCnt_S" parameterClass="psnl0600SrhVO" resultClass="int">
		<![CDATA[
	    SELECT COUNT(*)
		FROM PSNL0100 A, PSNL0120 B, PAYR0500 D
		WHERE A.DPOB_CD = B.DPOB_CD(+)
			AND A.SYSTEMKEY = B.SYSTEMKEY(+)
			AND A.DPOB_CD = D.DPOB_CD(+)
			AND A.SYSTEMKEY = D.SYSTEMKEY(+)
	  		AND B.EDU_SEIL_NUM IS NOT NULL
		]]> 	
			
		<include refid="defaultWhereSql"/>

		 <isNotNull property="emymtDivCd">
		     <isNotEmpty property="emymtDivCd">
		 		AND A.EMYMT_DIV_CD = #emymtDivCd#
		 	 </isNotEmpty>
		 </isNotNull>

		<isNotEmpty property="hdofcCodtnCd" prepend="AND">
			<![CDATA[
				A.HDOFC_CODTN_CD
			]]>
			<iterate prepend="IN" property="hdofcCodtnCdArr" open="(" close=")" conjunction=",">
				 #hdofcCodtnCdArr[]#
			</iterate>
		</isNotEmpty>
		
		<isNotNull property="payrMangDeptCd">
			<isNotEmpty property="payrMangDeptCd" >
			  AND EXISTS  (
	                         SELECT  C.DPOB_CD,
	                                 C.DTIL_OCCU_INTTN_CD,
	                                 C.TYP_OCCU_CD,
	                                 C.DEPT_CD FROM 
	                                             ( SELECT * 
                                                 FROM TABLE(PKG_DTIL_AUTH.FN_DTIL_AUTH_TB(#dpobCd#,#payrMangDeptYn#,#payrMangDeptCd#,#deptCd#,#usrId#,#deptCdAuth#,'' ))) C
	                                            WHERE     C.DPOB_CD = A.DPOB_CD
							                        AND C.DEPT_CD = A.CURR_AFFN_DEPT_CD
							                        AND NVL(C.TYP_OCCU_CD,'TT')  = NVL(A.TYP_OCCU_CD,'TT') 
	                                                AND NVL(C.DTIL_OCCU_INTTN_CD,'TT')  = NVL(A.DTIL_OCCU_INTTN_CD,'TT')
	                                                
													<isNotEmpty property="deptCd" prepend="AND">
													    C.DEPT_CD IN ( SELECT BA0400.DEPT_CD
																				FROM BASS0400 BA0400
																			WHERE BA0400.DEPT_USE_YN = 'Y'
																			START WITH BA0400.DEPT_CD 							
																				<iterate prepend="IN" property="deptCdArr" open="(" close=")" conjunction=",">
																					#deptCdArr[]#
																				</iterate>
													                         CONNECT BY PRIOR BA0400.DEPT_CD = BA0400.HHRK_DEPT_CD
																			 ) 
													</isNotEmpty>
							) 
			</isNotEmpty> 
		</isNotNull>		
		 	 

		<isNotNull property="eduKndNm">
			<isNotEmpty property="eduKndNm">
				AND B.EDU_KND_NM LIKE '%' || #eduKndNm# || '%' 
			</isNotEmpty>
		</isNotNull>
		<isNotNull property="eduBgnnDtS">
			<isNotEmpty property="eduBgnnDtS">
				AND B.EDU_BGNN_DT &gt;= #eduBgnnDtS#
			</isNotEmpty>
		</isNotNull>
		<isNotNull property="eduBgnnDtE">
			<isNotEmpty property="eduBgnnDtE">
				AND B.EDU_BGNN_DT &lt;= #eduBgnnDtE#
			</isNotEmpty>
		</isNotNull>
	</select>
	
	
	
	<!-- 포상 -->
	<!-- <select id="psnl0600DAO.selectPsnl0121" parameterClass="hashMap" resultClass="egovMap"> -->
	<select id="psnl0600DAO.selectPsnl0121" parameterClass="psnl0600SrhVO" resultClass="egovMap">
	
		SELECT * FROM (
			SELECT T.*, ROWNUM RNUM FROM (	
	
		SELECT FCBASS0400CDNM (A.DPOB_CD, A.CURR_AFFN_DEPT_CD, '2') AS CURR_DEPT_NM
		       	, FCBASS0400CDNM (A.DPOB_CD, A.DEPT_CD, '2') AS DEPT_NM
		       	, FCBASS0300CDNM(A.DPOB_CD, A.EMYMT_DIV_CD) as EMYMT_DIV_NM
		       	, A.HAN_NM
		       	, SUBSTR(A.RESN_REGN_NUM,0,6)||'-'||SUBSTR(A.RESN_REGN_NUM,7) AS RESN_REGN_NUM
		        , fcBass0320CDNM(A.DPOB_CD, A.TYP_OCCU_CD) AS  TYPE_OCCU_NM 
		       	, A.DTIL_OCCU_INTTN_CD 
		       	, fcBassEx0350CDNM(A.DPOB_CD,A.TYP_OCCU_CD,A.DTIL_OCCU_INTTN_CD,'1' ) AS DTIL_OCCU_INTTN_NM
		       	, FCBASS0500CDNM (A.DPOB_CD, SUBSTR (A.EMYMT_BGNN_DT, 1, 4), A.CURR_AFFN_DEPT_CD, A.BUSIN_CD) AS BUSIN_NM
	            , FCBASS0300CDNM(A.DPOB_CD, A.HDOFC_CODTN_CD) as HDOFC_CODTN_NM
	            , B.ACCLD_YR
	            , DECODE(LENGTH(B.ACCLD_PRTT_DT), 8, TO_CHAR(TO_DATE(B.ACCLD_PRTT_DT,'YYYYMMDD'),'YYYY.MM.DD'),B.ACCLD_PRTT_DT) AS ACCLD_PRTT_DT
	            , FCBASS0300CDNM(A.DPOB_CD, B.ACCLD_KND_CD) as ACCLD_KND_CD
	            , FCBASS0300CDNM(A.DPOB_CD, B.ACCLD_DIV_CD) as ACCLD_DIV_CD
	            , B.ACCLD_NM
	            , B.ACCLD_CFMNT_NUM
	            , B.EFMN_ISTUT_NM
	            , B.ACCLD_MNANT_CTNT
	            , B.ACCLD_NOTE_CTNT
	            , A.SYSTEMKEY
		FROM PSNL0100 A, PSNL0121 B, PAYR0500 D
		
		WHERE A.DPOB_CD = B.DPOB_CD(+)
			AND A.SYSTEMKEY = B.SYSTEMKEY(+)
			AND A.DPOB_CD = D.DPOB_CD(+)
			AND A.SYSTEMKEY = D.SYSTEMKEY(+)
			AND B.ACCLD_SEIL_NUM IS NOT NULL
		<include refid="defaultWhereSql"/>

		 <isNotNull property="emymtDivCd">
		     <isNotEmpty property="emymtDivCd">
		 		AND A.EMYMT_DIV_CD = #emymtDivCd#
		 	 </isNotEmpty>
		 </isNotNull>

		<isNotEmpty property="hdofcCodtnCd" prepend="AND">
			<![CDATA[
				A.HDOFC_CODTN_CD
			]]>
			<iterate prepend="IN" property="hdofcCodtnCdArr" open="(" close=")" conjunction=",">
				 #hdofcCodtnCdArr[]#
			</iterate>
		</isNotEmpty> 	 
				
		<isNotNull property="payrMangDeptCd">
			<isNotEmpty property="payrMangDeptCd" >
		  AND EXISTS  (
                         SELECT  C.DPOB_CD,
                                 C.DTIL_OCCU_INTTN_CD,
                                 C.TYP_OCCU_CD,
                                 C.DEPT_CD FROM 
                                             ( SELECT * 
                                                 FROM TABLE(PKG_DTIL_AUTH.FN_DTIL_AUTH_TB(#dpobCd#,#payrMangDeptYn#,#payrMangDeptCd#,#deptCd#,#usrId#,#deptCdAuth#,'' ))) C
                                            WHERE     C.DPOB_CD = A.DPOB_CD
						                        AND C.DEPT_CD = A.CURR_AFFN_DEPT_CD
						                        AND NVL(C.TYP_OCCU_CD,'TT')  = NVL(A.TYP_OCCU_CD,'TT') 
                                                AND NVL(C.DTIL_OCCU_INTTN_CD,'TT')  = NVL(A.DTIL_OCCU_INTTN_CD,'TT')
                                                
                                                <isNotEmpty property="deptCd" prepend="AND">
												    C.DEPT_CD IN ( SELECT BA0400.DEPT_CD
																			FROM BASS0400 BA0400
																		WHERE BA0400.DEPT_USE_YN = 'Y'
																		START WITH BA0400.DEPT_CD 							
																			<iterate prepend="IN" property="deptCdArr" open="(" close=")" conjunction=",">
																				#deptCdArr[]#
																			</iterate>
												                         CONNECT BY PRIOR BA0400.DEPT_CD = BA0400.HHRK_DEPT_CD
																		 ) 
												</isNotEmpty>
                                                
                                                <!-- 
                                               <isNotEmpty property="deptCd" prepend="AND">
												<![CDATA[
												 C.DEPT_CD
												]]>
												<iterate prepend="IN" property="deptCdArr" open="(" close=")" conjunction=",">
												 #deptCdArr[]#
												</iterate>
												</isNotEmpty> 
												 -->
		) 
		</isNotEmpty> 
		</isNotNull>
		
		<isNotEqual  property="lastIndex" compareValue="-1">
 	<![CDATA[					
				) T WHERE ROWNUM <= #lastIndex#
		)WHERE RNUM >= #firstIndex#
	]]>
	</isNotEqual>	
	<isEqual   property="lastIndex" compareValue="-1">
  	<![CDATA[					
		) T  
	)
	]]>
	</isEqual>			
		
    </select>
    
	<select id="psnl0600DAO.selectPsnl0121ListTotCnt_S" parameterClass="psnl0600SrhVO" resultClass="int">
		<![CDATA[
	    SELECT COUNT(*)
		FROM PSNL0100 A, PSNL0121 B, PAYR0500 D
		WHERE A.DPOB_CD = B.DPOB_CD(+)
			AND A.SYSTEMKEY = B.SYSTEMKEY(+)
			AND A.DPOB_CD = D.DPOB_CD(+)
			AND A.SYSTEMKEY = D.SYSTEMKEY(+)
			AND B.ACCLD_SEIL_NUM IS NOT NULL
		]]> 		
		<include refid="defaultWhereSql"/>
		
		 <isNotNull property="emymtDivCd">
		     <isNotEmpty property="emymtDivCd">
		 		AND A.EMYMT_DIV_CD = #emymtDivCd#
		 	 </isNotEmpty>
		 </isNotNull>		
		 
		<isNotEmpty property="hdofcCodtnCd" prepend="AND">
			<![CDATA[
				A.HDOFC_CODTN_CD
			]]>
			<iterate prepend="IN" property="hdofcCodtnCdArr" open="(" close=")" conjunction=",">
				 #hdofcCodtnCdArr[]#
			</iterate>
		</isNotEmpty> 	
		
		<isNotNull property="payrMangDeptCd">
			<isNotEmpty property="payrMangDeptCd" >
			  AND EXISTS  (
	                         SELECT  C.DPOB_CD,
	                                 C.DTIL_OCCU_INTTN_CD,
	                                 C.TYP_OCCU_CD,
	                                 C.DEPT_CD FROM 
	                                             ( SELECT * 
                                                 FROM TABLE(PKG_DTIL_AUTH.FN_DTIL_AUTH_TB(#dpobCd#,#payrMangDeptYn#,#payrMangDeptCd#,#deptCd#,#usrId#,#deptCdAuth#,'' ))) C
	                                            WHERE     C.DPOB_CD = A.DPOB_CD
							                        AND C.DEPT_CD = A.CURR_AFFN_DEPT_CD
							                        AND NVL(C.TYP_OCCU_CD,'TT')  = NVL(A.TYP_OCCU_CD,'TT') 
	                                                AND NVL(C.DTIL_OCCU_INTTN_CD,'TT')  = NVL(A.DTIL_OCCU_INTTN_CD,'TT')
	                                                
													<isNotEmpty property="deptCd" prepend="AND">
													    C.DEPT_CD IN ( SELECT BA0400.DEPT_CD
																				FROM BASS0400 BA0400
																			WHERE BA0400.DEPT_USE_YN = 'Y'
																			START WITH BA0400.DEPT_CD 							
																				<iterate prepend="IN" property="deptCdArr" open="(" close=")" conjunction=",">
																					#deptCdArr[]#
																				</iterate>
													                         CONNECT BY PRIOR BA0400.DEPT_CD = BA0400.HHRK_DEPT_CD
																			 ) 
													</isNotEmpty>
							) 
			</isNotEmpty> 
		</isNotNull>		
		 
				
	</select>
    
	
	<!-- 징계 -->
	<!-- <select id="psnl0600DAO.selectPsnl0122" parameterClass="hashMap" resultClass="egovMap"> -->
	<select id="psnl0600DAO.selectPsnl0122" parameterClass="psnl0600SrhVO" resultClass="egovMap">	
		SELECT * FROM (
			SELECT T.*, ROWNUM RNUM FROM (
	
		SELECT FCBASS0400CDNM (A.DPOB_CD, A.CURR_AFFN_DEPT_CD, '2') AS CURR_DEPT_NM
		       	, FCBASS0400CDNM (A.DPOB_CD, A.DEPT_CD, '2') AS DEPT_NM
		       	, FCBASS0300CDNM(A.DPOB_CD, A.EMYMT_DIV_CD) as EMYMT_DIV_NM
		       	, A.HAN_NM
		       	, SUBSTR(A.RESN_REGN_NUM,0,6)||'-'||SUBSTR(A.RESN_REGN_NUM,7) AS RESN_REGN_NUM
		        , fcBass0320CDNM(A.DPOB_CD, A.TYP_OCCU_CD) AS  TYPE_OCCU_NM 
		       	, A.DTIL_OCCU_INTTN_CD 
		       	, fcBassEx0350CDNM(A.DPOB_CD,A.TYP_OCCU_CD,A.DTIL_OCCU_INTTN_CD,'1' ) AS DTIL_OCCU_CLS_DIV_NM
		       	, FCBASS0500CDNM (A.DPOB_CD, SUBSTR (A.EMYMT_BGNN_DT, 1, 4), A.CURR_AFFN_DEPT_CD, A.BUSIN_CD) AS BUSIN_NM
	        	, FCBASS0300CDNM(A.DPOB_CD, A.HDOFC_CODTN_CD) as HDOFC_CODTN_NM
	            , DECODE(LENGTH(B.DSNY_ACT_DSPL_DT), 8, TO_CHAR(TO_DATE(B.DSNY_ACT_DSPL_DT,'YYYYMMDD'),'YYYY.MM.DD'),B.DSNY_ACT_DSPL_DT) AS DSNY_ACT_DSPL_DT
	            , FCBASS0300CDNM(A.DPOB_CD, B.DSNY_ACT_DIV_CD) as DSNY_ACT_DIV_CD
	            , B.DSNY_ACT_NM
	            , B.DSNY_ACT_REAS_CTNT
	            , B.DSNY_ACT_ECTG_ORGN
	            , DECODE(LENGTH(B.DSNY_ACT_BGNN_DT), 8, TO_CHAR(TO_DATE(B.DSNY_ACT_BGNN_DT,'YYYYMMDD'),'YYYY.MM.DD'),B.DSNY_ACT_BGNN_DT) AS DSNY_ACT_BGNN_DT
	            , DECODE(LENGTH(B.DSNY_ACT_END_DT), 8, TO_CHAR(TO_DATE(B.DSNY_ACT_END_DT,'YYYYMMDD'),'YYYY.MM.DD'),B.DSNY_ACT_END_DT) AS DSNY_ACT_END_DT
	            , DECODE(LENGTH(B.DSNY_ACT_ANSTY_DT), 8, TO_CHAR(TO_DATE(B.DSNY_ACT_ANSTY_DT,'YYYYMMDD'),'YYYY.MM.DD'),B.DSNY_ACT_ANSTY_DT) AS DSNY_ACT_ANSTY_DT
	            , FCBASS0300CDNM(A.DPOB_CD, B.DSNY_ACT_ANSTY_DIV_CD) as DSNY_ACT_ANSTY_DIV_CD
	            , B.DSNY_ACT_CTWP_MNTH_ICM
	            , B.DSNY_ACT_NOTE_CTNT
	            , A.SYSTEMKEY
		FROM PSNL0100 A, PSNL0122 B, PAYR0500 D
		WHERE A.DPOB_CD = B.DPOB_CD(+)
			AND A.SYSTEMKEY = B.SYSTEMKEY(+)
			AND A.DPOB_CD = D.DPOB_CD(+)
			AND A.SYSTEMKEY = D.SYSTEMKEY(+)
			AND B.DSNY_ACT_SEIL_NUM IS NOT NULL
			<include refid="defaultWhereSql"/>
		
		 <isNotNull property="emymtDivCd">
		     <isNotEmpty property="emymtDivCd">
		 		AND A.EMYMT_DIV_CD = #emymtDivCd#
		 	 </isNotEmpty>
		 </isNotNull>		
		
		<isNotEmpty property="hdofcCodtnCd" prepend="AND">
			<![CDATA[
				A.HDOFC_CODTN_CD
			]]>
			<iterate prepend="IN" property="hdofcCodtnCdArr" open="(" close=")" conjunction=",">
				 #hdofcCodtnCdArr[]#
			</iterate>
		</isNotEmpty> 	 
					
			<isNotNull property="payrMangDeptCd">
			<isNotEmpty property="payrMangDeptCd" >
		  AND EXISTS  (
                         SELECT  C.DPOB_CD,
                                 C.DTIL_OCCU_INTTN_CD,
                                 C.TYP_OCCU_CD,
                                 C.DEPT_CD FROM 
                                             ( SELECT * 
                                                 FROM TABLE(PKG_DTIL_AUTH.FN_DTIL_AUTH_TB(#dpobCd#,#payrMangDeptYn#,#payrMangDeptCd#,#deptCd#,#usrId#,#deptCdAuth#,'' )) ) C
                                            WHERE     C.DPOB_CD = A.DPOB_CD
						                        AND C.DEPT_CD = A.CURR_AFFN_DEPT_CD
						                        AND NVL(C.TYP_OCCU_CD,'TT')  = NVL(A.TYP_OCCU_CD,'TT') 
                                                AND NVL(C.DTIL_OCCU_INTTN_CD,'TT')  = NVL(A.DTIL_OCCU_INTTN_CD,'TT')
                                                
                                                <isNotEmpty property="deptCd" prepend="AND">
												    C.DEPT_CD IN ( SELECT BA0400.DEPT_CD
																			FROM BASS0400 BA0400
																		WHERE BA0400.DEPT_USE_YN = 'Y'
																		START WITH BA0400.DEPT_CD 							
																			<iterate prepend="IN" property="deptCdArr" open="(" close=")" conjunction=",">
																				#deptCdArr[]#
																			</iterate>
												                         CONNECT BY PRIOR BA0400.DEPT_CD = BA0400.HHRK_DEPT_CD
																		 ) 
												</isNotEmpty>
                                                
                                                <!-- 
                                               <isNotEmpty property="deptCd" prepend="AND">
												<![CDATA[
												 C.DEPT_CD
												]]>
												<iterate prepend="IN" property="deptCdArr" open="(" close=")" conjunction=",">
												 #deptCdArr[]#
												</iterate>
												</isNotEmpty> 
												 -->
		) 
		</isNotEmpty> 
		</isNotNull>
		
			<isNotNull property="dsnyActDivCd">
		    	<isNotEmpty property="dsnyActDivCd">
		 			AND B.DSNY_ACT_DIV_CD = #dsnyActDivCd# 
		 	 	</isNotEmpty>
			</isNotNull>
			<isNotNull property="dsnyActDsplDtS">
		     	<isNotEmpty property="dsnyActDsplDtS">
		 			AND B.DSNY_ACT_DSPL_DT &gt;= #dsnyActDsplDtS#
		 	 	</isNotEmpty>
			</isNotNull>
			<isNotNull property="dsnyActDsplDtE">
		     	<isNotEmpty property="dsnyActDsplDtE">
		 			AND B.DSNY_ACT_DSPL_DT &lt;= #dsnyActDsplDtE#
		 	 	</isNotEmpty>
			</isNotNull>
		
			<!-- 
		<isNotNull property="searchDsnyActDivCd">
		     <isNotEmpty property="searchDsnyActDivCd">
		 		AND B.DSNY_ACT_DIV_CD = #searchDsnyActDivCd# 
		 	 </isNotEmpty>
		</isNotNull>
		<isNotNull property="searchDsnyActDsplDtS">
		     <isNotEmpty property="searchDsnyActDsplDtS">
		 		AND SUBSTR(B.DSNY_ACT_DSPL_DT,1,6) &gt;= #searchDsnyActDsplDtS#
		 	 </isNotEmpty>
		</isNotNull>
		<isNotNull property="searchDsnyActDsplDtE">
		     <isNotEmpty property="searchDsnyActDsplDtE">
		 		AND SUBSTR(B.DSNY_ACT_DSPL_DT,1,6) &lt;= #searchDsnyActDsplDtE#
		 	 </isNotEmpty>
		</isNotNull>
		 -->
		 
		<isNotEqual  property="lastIndex" compareValue="-1">
 	<![CDATA[					
				) T WHERE ROWNUM <= #lastIndex#
		)WHERE RNUM >= #firstIndex#
	]]>
	</isNotEqual>	
	<isEqual   property="lastIndex" compareValue="-1">
  	<![CDATA[					
		) T  
	)
	]]>
	</isEqual>			 
		 
		 
	</select>
	
	<select id="psnl0600DAO.selectPsnl0122ListTotCnt_S" parameterClass="psnl0600SrhVO" resultClass="int">
		<![CDATA[
	    SELECT COUNT(*)
		  FROM PSNL0100 A, PSNL0122 B, PAYR0500 D
		WHERE A.DPOB_CD = B.DPOB_CD(+)
			AND A.SYSTEMKEY = B.SYSTEMKEY(+)
			AND A.DPOB_CD = D.DPOB_CD(+)
			AND A.SYSTEMKEY = D.SYSTEMKEY(+)
			AND B.DSNY_ACT_SEIL_NUM IS NOT NULL
		]]> 
		<include refid="defaultWhereSql"/>

		 <isNotNull property="emymtDivCd">
		     <isNotEmpty property="emymtDivCd">
		 		AND A.EMYMT_DIV_CD = #emymtDivCd#
		 	 </isNotEmpty>
		 </isNotNull>

		<isNotEmpty property="hdofcCodtnCd" prepend="AND">
			<![CDATA[
				A.HDOFC_CODTN_CD
			]]>
			<iterate prepend="IN" property="hdofcCodtnCdArr" open="(" close=")" conjunction=",">
				 #hdofcCodtnCdArr[]#
			</iterate>
		</isNotEmpty> 	
		
		<isNotNull property="payrMangDeptCd">
			<isNotEmpty property="payrMangDeptCd" >
			  AND EXISTS  (
	                         SELECT  C.DPOB_CD,
	                                 C.DTIL_OCCU_INTTN_CD,
	                                 C.TYP_OCCU_CD,
	                                 C.DEPT_CD FROM 
	                                             ( SELECT * 
                                                 FROM TABLE(PKG_DTIL_AUTH.FN_DTIL_AUTH_TB(#dpobCd#,#payrMangDeptYn#,#payrMangDeptCd#,#deptCd#,#usrId#,#deptCdAuth#,'' ))) C
	                                            WHERE     C.DPOB_CD = A.DPOB_CD
							                        AND C.DEPT_CD = A.CURR_AFFN_DEPT_CD
							                        AND NVL(C.TYP_OCCU_CD,'TT')  = NVL(A.TYP_OCCU_CD,'TT') 
	                                                AND NVL(C.DTIL_OCCU_INTTN_CD,'TT')  = NVL(A.DTIL_OCCU_INTTN_CD,'TT')
	                                                
													<isNotEmpty property="deptCd" prepend="AND">
													    C.DEPT_CD IN ( SELECT BA0400.DEPT_CD
																				FROM BASS0400 BA0400
																			WHERE BA0400.DEPT_USE_YN = 'Y'
																			START WITH BA0400.DEPT_CD 							
																				<iterate prepend="IN" property="deptCdArr" open="(" close=")" conjunction=",">
																					#deptCdArr[]#
																				</iterate>
													                         CONNECT BY PRIOR BA0400.DEPT_CD = BA0400.HHRK_DEPT_CD
																			 ) 
													</isNotEmpty>
							) 
			</isNotEmpty> 
		</isNotNull>		
				
		<isNotNull property="dsnyActDivCd">
			<isNotEmpty property="dsnyActDivCd">
				AND B.DSNY_ACT_DIV_CD = #dsnyActDivCd# 
			</isNotEmpty>
		</isNotNull>
		<isNotNull property="dsnyActDsplDtS">
			<isNotEmpty property="dsnyActDsplDtS">
				AND B.DSNY_ACT_DSPL_DT &gt;= #dsnyActDsplDtS#
			</isNotEmpty>
		</isNotNull>
		<isNotNull property="dsnyActDsplDtE">
			<isNotEmpty property="dsnyActDsplDtE">
				AND B.DSNY_ACT_DSPL_DT &lt;= #dsnyActDsplDtE#
			</isNotEmpty>
		</isNotNull>
	</select>
	
	
	<!-- 휴직 -->
	<!-- <select id="psnl0600DAO.selectPsnl0123" parameterClass="hashMap" resultClass="egovMap"> -->
	<select id="psnl0600DAO.selectPsnl0123" parameterClass="psnl0600SrhVO" resultClass="egovMap">	
	
		SELECT * FROM (
			SELECT T.*, ROWNUM RNUM FROM (	
	
		SELECT FCBASS0400CDNM (A.DPOB_CD, A.CURR_AFFN_DEPT_CD, '2') AS CURR_DEPT_NM
		       	, FCBASS0400CDNM (A.DPOB_CD, A.DEPT_CD, '2') AS DEPT_NM
		       	, FCBASS0300CDNM(A.DPOB_CD, A.EMYMT_DIV_CD) as EMYMT_DIV_NM
		       	, A.HAN_NM
		       	, SUBSTR(A.RESN_REGN_NUM,0,6)||'-'||SUBSTR(A.RESN_REGN_NUM,7) AS RESN_REGN_NUM
			   	, fcBass0320CDNM(A.DPOB_CD, A.TYP_OCCU_CD) AS  TYPE_OCCU_NM 
		       	, A.DTIL_OCCU_INTTN_CD 
		       	, fcBassEx0350CDNM(A.DPOB_CD,A.TYP_OCCU_CD,A.DTIL_OCCU_INTTN_CD,'1' ) AS DTIL_OCCU_INTTN_NM
		       	, FCBASS0500CDNM (A.DPOB_CD, SUBSTR (A.EMYMT_BGNN_DT, 1, 4), A.CURR_AFFN_DEPT_CD, A.BUSIN_CD) AS BUSIN_NM
	           	, FCBASS0300CDNM(A.DPOB_CD, A.HDOFC_CODTN_CD) as HDOFC_CODTN_NM
	           	, FCBASS0300CDNM(A.DPOB_CD, B.LEVF_ABNC_DIV_CD) as LEVF_ABNC_DIV_CD
	           	, DECODE(LENGTH(B.LEVF_ABNC_BGNN_DT), 8, TO_CHAR(TO_DATE(B.LEVF_ABNC_BGNN_DT,'YYYYMMDD'),'YYYY.MM.DD'),B.LEVF_ABNC_BGNN_DT) AS LEVF_ABNC_BGNN_DT
	           	, DECODE(LENGTH(B.LEVF_ABNC_END_DT), 8, TO_CHAR(TO_DATE(B.LEVF_ABNC_END_DT,'YYYYMMDD'),'YYYY.MM.DD'),B.LEVF_ABNC_END_DT) AS LEVF_ABNC_END_DT
	           	, DECODE(LENGTH(B.TURTY_RNTMNT_DT), 8, TO_CHAR(TO_DATE(B.TURTY_RNTMNT_DT,'YYYYMMDD'),'YYYY.MM.DD'),B.TURTY_RNTMNT_DT) AS TURTY_RNTMNT_DT
	           	, B.LEVF_ABNC_NOTE_CTNT
	           	, A.SYSTEMKEY
		FROM PSNL0100 A, PSNL0123 B, PAYR0500 D
		
		WHERE A.DPOB_CD = B.DPOB_CD(+)
			AND A.SYSTEMKEY = B.SYSTEMKEY(+)
			AND A.DPOB_CD = D.DPOB_CD(+)
			AND A.SYSTEMKEY = D.SYSTEMKEY(+)
	  		AND B.LEVF_ABNC_SEIL_NUM IS NOT NULL
	     	<include refid="defaultWhereSql"/>


		 <isNotNull property="emymtDivCd">
		     <isNotEmpty property="emymtDivCd">
		 		AND A.EMYMT_DIV_CD = #emymtDivCd#
		 	 </isNotEmpty>
		 </isNotNull>

		<isNotEmpty property="hdofcCodtnCd" prepend="AND">
			<![CDATA[
				A.HDOFC_CODTN_CD
			]]>
			<iterate prepend="IN" property="hdofcCodtnCdArr" open="(" close=")" conjunction=",">
				 #hdofcCodtnCdArr[]#
			</iterate>
		</isNotEmpty> 	 
			     	
	     	<isNotNull property="payrMangDeptCd">
			<isNotEmpty property="payrMangDeptCd" >
		  AND EXISTS  (
                         SELECT  C.DPOB_CD,
                                 C.DTIL_OCCU_INTTN_CD,
                                 C.TYP_OCCU_CD,
                                 C.DEPT_CD FROM 
                                             ( SELECT * 
                                                 FROM TABLE(PKG_DTIL_AUTH.FN_DTIL_AUTH_TB(#dpobCd#,#payrMangDeptYn#,#payrMangDeptCd#,#deptCd#,#usrId#,#deptCdAuth#,'' )) ) C
                                            WHERE     C.DPOB_CD = A.DPOB_CD
						                        AND C.DEPT_CD = A.CURR_AFFN_DEPT_CD
						                        AND NVL(C.TYP_OCCU_CD,'TT')  = NVL(A.TYP_OCCU_CD,'TT') 
                                                AND NVL(C.DTIL_OCCU_INTTN_CD,'TT')  = NVL(A.DTIL_OCCU_INTTN_CD,'TT')
                                               
												<isNotEmpty property="deptCd" prepend="AND">
												    C.DEPT_CD IN ( SELECT BA0400.DEPT_CD
																			FROM BASS0400 BA0400
																		WHERE BA0400.DEPT_USE_YN = 'Y'
																		START WITH BA0400.DEPT_CD 							
																			<iterate prepend="IN" property="deptCdArr" open="(" close=")" conjunction=",">
																				#deptCdArr[]#
																			</iterate>
												                         CONNECT BY PRIOR BA0400.DEPT_CD = BA0400.HHRK_DEPT_CD
																		 ) 
												</isNotEmpty>                                               
                                                
                                                <!-- 
                                               <isNotEmpty property="deptCd" prepend="AND">
												<![CDATA[
												 C.DEPT_CD
												]]>
												<iterate prepend="IN" property="deptCdArr" open="(" close=")" conjunction=",">
												 #deptCdArr[]#
												</iterate>
												</isNotEmpty> 
												 -->
		) 
		</isNotEmpty> 
		</isNotNull>
	     
	     	<isNotNull property="levfAbncDivCd">
				<isNotEmpty property="levfAbncDivCd">
		 			AND B.LEVF_ABNC_DIV_CD = #levfAbncDivCd# 
		 	 	</isNotEmpty>
			</isNotNull>
			<isNotNull property="levfAbncBgnnDtS">
		     	<isNotEmpty property="levfAbncBgnnDtS">
		 			AND B.LEVF_ABNC_BGNN_DT &gt;= #levfAbncBgnnDtS#
		 	 	</isNotEmpty>
			</isNotNull>
			<isNotNull property="levfAbncBgnnDtE">
		     	<isNotEmpty property="levfAbncBgnnDtE">
		 			AND B.LEVF_ABNC_BGNN_DT &lt;= #levfAbncBgnnDtE#
		 	 	</isNotEmpty>
			</isNotNull>
		
	     	<!-- 
	    <isNotNull property="searchLevfAbncDivCd">
		     <isNotEmpty property="searchLevfAbncDivCd">
		 		AND B.LEVF_ABNC_DIV_CD = #searchLevfAbncDivCd# 
		 	 </isNotEmpty>
		</isNotNull>
		<isNotNull property="searchLevfAbncBgnnDtS">
		     <isNotEmpty property="searchLevfAbncBgnnDtS">
		 		AND SUBSTR(B.LEVF_ABNC_BGNN_DT,1,6) &gt;= #searchLevfAbncBgnnDtS#
		 	 </isNotEmpty>
		</isNotNull>
		<isNotNull property="searchLevfAbncBgnnDtE">
		     <isNotEmpty property="searchLevfAbncBgnnDtE">
		 		AND SUBSTR(B.LEVF_ABNC_BGNN_DT,1,6) &lt;= #searchLevfAbncBgnnDtE#
		 	 </isNotEmpty>
		</isNotNull>
		 -->
		<isNotEqual  property="lastIndex" compareValue="-1">
 	<![CDATA[					
				) T WHERE ROWNUM <= #lastIndex#
		)WHERE RNUM >= #firstIndex#
	]]>
	</isNotEqual>	
	<isEqual   property="lastIndex" compareValue="-1">
  	<![CDATA[					
		) T  
	)
	]]>
	</isEqual>	

	     
	</select>
	
	<select id="psnl0600DAO.selectPsnl0123ListTotCnt_S" parameterClass="psnl0600SrhVO" resultClass="int">
		<![CDATA[
	    SELECT COUNT(*)
		FROM PSNL0100 A, PSNL0123 B, PAYR0500 D
		WHERE A.DPOB_CD = B.DPOB_CD(+)
			AND A.SYSTEMKEY = B.SYSTEMKEY(+)
			AND A.DPOB_CD = D.DPOB_CD(+)
			AND A.SYSTEMKEY = D.SYSTEMKEY(+)
	  		AND B.LEVF_ABNC_SEIL_NUM IS NOT NULL
	 	]]>  	
	 		
		<include refid="defaultWhereSql"/>
	     
		 <isNotNull property="emymtDivCd">
		     <isNotEmpty property="emymtDivCd">
		 		AND A.EMYMT_DIV_CD = #emymtDivCd#
		 	 </isNotEmpty>
		 </isNotNull>

		<isNotEmpty property="hdofcCodtnCd" prepend="AND">
			<![CDATA[
				A.HDOFC_CODTN_CD
			]]>
			<iterate prepend="IN" property="hdofcCodtnCdArr" open="(" close=")" conjunction=",">
				 #hdofcCodtnCdArr[]#
			</iterate>
		</isNotEmpty> 	
		
         <isNotNull property="payrMangDeptCd">
			<isNotEmpty property="payrMangDeptCd" >
		  AND EXISTS  (
                         SELECT  C.DPOB_CD,
                                 C.DTIL_OCCU_INTTN_CD,
                                 C.TYP_OCCU_CD,
                                 C.DEPT_CD FROM 
                                             ( SELECT * 
                                                 FROM TABLE(PKG_DTIL_AUTH.FN_DTIL_AUTH_TB(#dpobCd#,#payrMangDeptYn#,#payrMangDeptCd#,#deptCd#,#usrId#,#deptCdAuth#,'' )) ) C
                                            WHERE     C.DPOB_CD = A.DPOB_CD
						                        AND C.DEPT_CD = A.CURR_AFFN_DEPT_CD
						                        AND NVL(C.TYP_OCCU_CD,'TT')  = NVL(A.TYP_OCCU_CD,'TT') 
                                                AND NVL(C.DTIL_OCCU_INTTN_CD,'TT')  = NVL(A.DTIL_OCCU_INTTN_CD,'TT')
   
												<isNotEmpty property="deptCd" prepend="AND">
												    C.DEPT_CD IN ( SELECT BA0400.DEPT_CD
																			FROM BASS0400 BA0400
																		WHERE BA0400.DEPT_USE_YN = 'Y'
																		START WITH BA0400.DEPT_CD 							
																			<iterate prepend="IN" property="deptCdArr" open="(" close=")" conjunction=",">
																				#deptCdArr[]#
																			</iterate>
												                         CONNECT BY PRIOR BA0400.DEPT_CD = BA0400.HHRK_DEPT_CD
																		 ) 
												</isNotEmpty>   
                                                
				) 
			</isNotEmpty> 
		</isNotNull>		

		<isNotNull property="levfAbncDivCd">
			<isNotEmpty property="levfAbncDivCd">
				AND B.LEVF_ABNC_DIV_CD = #levfAbncDivCd# 
			</isNotEmpty>
		</isNotNull>
		<isNotNull property="levfAbncBgnnDtS">
			<isNotEmpty property="levfAbncBgnnDtS">
				AND B.LEVF_ABNC_BGNN_DT &gt;= #levfAbncBgnnDtS#
			</isNotEmpty>
		</isNotNull>
		<isNotNull property="levfAbncBgnnDtE">
			<isNotEmpty property="levfAbncBgnnDtE">
				AND B.LEVF_ABNC_BGNN_DT &lt;= #levfAbncBgnnDtE#
			</isNotEmpty>
		</isNotNull>
	</select>
	
	
	
	<!-- ################################################################################### -->
	<!-- ################################## 엑셀 다운로드 ###################################### -->
	<!-- ################################################################################### -->
	
	
	<!-- 인사통합출력 -->
	<select id="psnl0600DAO.selPsnl0600ListXls" parameterClass="psnl0600SrhVO" resultClass="egovMap" remapResults="true">
	<![CDATA[
		   SELECT 0 AS RNUM
			               , ('소속부서') AS CURR_DEPT_NM
			               , ('관리부서') AS DEPT_NM
			               , ('고용구분') AS EMYMT_DIV_NM
			               , ('성명') AS HAN_NM
			               , ('주민등록번호') AS RESN_REGN_NUM
			               , ('직종명') AS TYPE_OCCU_NM 
			              /*  , ('') AS DTIL_OCCU_INTTN_CD */
			               , ('직종세명') AS DTIL_OCCU_INTTN_NM
			               , ('사업명') AS BUSIN_NM
			               , ('재직상태') AS HDOFC_CODTN_NM
			               , ('최초고용일자') AS FRST_EMYMT_DT
			               , ('현부서발령일자') AS CURR_DEPT_APPMT_DT
			               , ('퇴직일자') AS RETRY_DT
			               , ('근속년수') AS LOG_SVC_YR_NUM_NM
			               , ('근속월수') AS LOG_SVC_MNTH_ICM_NM
			               , ('장애구분명') AS DABTY_DIV_NM 
			               , ('주소') AS ADDR
			               , ('집전화번호') AS HUS_PHN_NUM
			               , ('핸드폰번호') AS CELL_PHNE_NUM
			               , ('이메일주소') AS EMAIL_ADDR
			               , ('비고') AS PERN_NOTE_CTNT
			               /* , ('') AS SYSTEMKEY */
			               , ('성별') AS SX_DIV_NM  
			
			]]>  
			
			<isEqual property="psnl0112Chk" compareValue="Y">  
			<![CDATA[	/*  병역   */  
			               , ('제대구분') AS DSAGE_DIV_CD  
			               , ('입대일자') AS ENRLNT_DT
			               , ('제대일자') AS DSAGE_DT
			               , ('복무인정기간') AS SERVC_RCGTN_PRID_CD
			               , ('역종') AS SRVSS_CD
			               , ('군별') AS BAGGRP_CD
			               , ('병과') AS ABOTS_CD
			               , ('계급') AS CLS_CD
			               , ('군번') AS MITY_SILNUM
			               , ('MOS') AS MOS
			               , ('면제사유') AS EXMTN_REAS_CD
				
				]]>       
				</isEqual>        
			         
			         
				<isEqual property="psnl0114Chk" compareValue="Y">  
				<![CDATA[	/*  단체   */  
			               , ('가입일자') AS JN_DT
			               , ('가입일자') AS JN_OPZTN_NM
			               , ('직책') AS ODTY_CD
			               , ('탈퇴일자') AS WIRL_DT
			    
				]]>       
				</isEqual>
			       
			       
				<isEqual property="psnl0116Chk" compareValue="Y">  
				<![CDATA[	/*  학력   */ 
			               , ('입학일자') AS ETNC_ITSHL_DT  
			               , ('졸업일자') AS GRDTN_DT 
			               , ('학력구분') AS ACAD_ABTY_DIV_CD
			               , ('학교') AS SCHL_CD 
			               , ('학과') AS DEPR_MAJR_CD
			               , ('학위구분') AS DEGR_DIV_CD 
			               , ('수업년수')  AS LESN_YR_NUM_CD
			               , ('학력비고') AS ACAD_ABTY_NOTE_CTNT
			               
				]]>       
				</isEqual>        
			               
			         
				<isEqual property="psnl0119Chk" compareValue="Y">  
			 	<![CDATA[	/*  경력   */ 
			                , ('경력시작일자') AS CARR_BGNN_DT
			                , ('경력종료일자') AS CARR_END_DT
			                , ('근무처명') AS PAE_WORK_NM
			                , ('직책명') AS ODTY_NM
			                , ('담당업무명') AS REPBTY_BUSIN_NM
			                , ('경력비고내용') AS CARR_NOTE_CTNT
			                
				]]>       
				</isEqual>      
			       	
			       	
				<isEqual property="psnl0118Chk" compareValue="Y">  
				<![CDATA[	/*  자격   */ 
			                , ('취득일자') AS AQTN_DT
			                , ('자격면허') AS QFTNT_LICNS_CD
			                , ('자격먼호분야내용') AS QFTNT_LICNS_POVNC_CTNT
			                , ('시행기관명') AS EFMN_ISTUT_NM
			                , ('자격면허번호') AS QFTNT_LICNS_NUM
			                
				]]>       
				</isEqual>   
			       	
			       	 
				<isEqual property="psnl0120Chk" compareValue="Y">  
				<![CDATA[	/*  교육   */ 

			                , ('교육시작일자') AS EDU_BGNN_DT
			                , ('교육종료일자') AS EDU_END_DT
			                , ('교육이수시간') AS EDU_CMPTE_TM
			                , ('교육종류명') AS EDU_KND_NM
			                , ('교육기관명') AS EDU_ISTUT_NM
			                , ('교육비고내용') AS EDU_NOTE_CTNT
			    
				]]>       
				</isEqual>
					
					
				<isEqual property="psnl0121Chk" compareValue="Y">  
				<![CDATA[	/*  포상   */ 
			                
			                , ('포상년도') AS ACCLD_YR
			                , ('포상수여일자') AS ACCLD_PRTT_DT
			                , ('포상종류') AS ACCLD_KND_CD
			                , ('포상구분') AS ACCLD_DIV_CD
			                , ('포상명') AS ACCLD_NM
			                , ('포상서훈번호') AS ACCLD_CFMNT_NUM
			                , ('시행기관명') AS EFMN_ISTUT_NM
			                , ('포상주체내용') AS ACCLD_MNANT_CTNT
			                , ('포상비고내용') AS ACCLD_NOTE_CTNT
			          
				]]>       
				</isEqual>  
					
					
				<isEqual property="psnl0122Chk" compareValue="Y">  
				<![CDATA[	/*  징계    */  
			                , ('징계명') AS DSNY_ACT_NM
			                , ('징계사유내용') AS DSNY_ACT_REAS_CTNT
			                , ('징계수행기관') AS DSNY_ACT_ECTG_ORGN
			                , ('징계시작일자') AS DSNY_ACT_BGNN_DT
			                , ('징계종료일자') AS DSNY_ACT_END_DT
			                , ('징계사면일자') AS DSNY_ACT_ANSTY_DT
			                , ('징계사면구분') AS DSNY_ACT_ANSTY_DIV_CD
			                , ('징계감봉월수') AS DSNY_ACT_CTWP_MNTH_ICM
			                , ('징계비고내용') AS DSNY_ACT_NOTE_CTNT
			                
				]]>       
				</isEqual> 
					
					
				<isEqual property="psnl0123Chk" compareValue="Y">  
			 	<![CDATA[	/*  휴직   */       
			                 , ('휴직구분') AS LEVF_ABNC_DIV_CD
			                 , ('휴직시작일자') AS LEVF_ABNC_BGNN_DT
			                 , ('휴직종료일자') AS LEVF_ABNC_END_DT
			                 , ('실제복직일자') AS TURTY_RNTMNT_DT
			                 , ('휴직비고내용') AS LEVF_ABNC_NOTE_CTNT
			                   
				]]>       
				</isEqual> 			
			FROM DUAL
			
			<![CDATA[
			UNION ALL
			SELECT ROWNUM RNUM, TA.* FROM(
				SELECT FCBASS0400CDNM(A.DPOB_CD, A.CURR_AFFN_DEPT_CD, '2') AS CURR_DEPT_NM
				               , FCBASS0400CDNM(A.DPOB_CD, A.DEPT_CD, '2') AS DEPT_NM
				               , FCBASS0300CDNM(A.DPOB_CD, A.EMYMT_DIV_CD) AS EMYMT_DIV_NM
				               , A.HAN_NM
				               , SUBSTR(A.RESN_REGN_NUM,0,6)||'-'||SUBSTR(A.RESN_REGN_NUM,7) AS RESN_REGN_NUM
				               , fcBass0320CDNM(A.DPOB_CD, A.TYP_OCCU_CD) AS TYPE_OCCU_NM 
				              /*  , A.DTIL_OCCU_INTTN_CD  */
				               , fcBassEx0350CDNM(A.DPOB_CD,A.TYP_OCCU_CD,A.DTIL_OCCU_INTTN_CD,'1' ) AS DTIL_OCCU_INTTN_NM
				               , FCBASS0500CDNM (A.DPOB_CD, SUBSTR (A.EMYMT_BGNN_DT, 1, 4), A.CURR_AFFN_DEPT_CD, A.BUSIN_CD) AS BUSIN_NM
				               , FCBASS0300CDNM(A.DPOB_CD, A.HDOFC_CODTN_CD) AS HDOFC_CODTN_NM
				             /*  , TO_CHAR ( TO_DATE(A.FRST_EMYMT_DT     ,'YYYYMMDD') ,'YYYY.MM.DD') AS FRST_EMYMT_DT	*/
				             	,  DECODE(P101.FRST_BSE_EMYMT_DT, ''
				             				, TO_CHAR ( TO_DATE(A.FRST_EMYMT_DT			,'YYYYMMDD') ,'YYYY.MM.DD')
				             				, TO_CHAR ( TO_DATE(P101.FRST_BSE_EMYMT_DT	,'YYYYMMDD') ,'YYYY.MM.DD')	)  AS FRST_EMYMT_DT
				            
				               , TO_CHAR ( TO_DATE(A.CURR_DEPT_APPMT_DT,'YYYYMMDD') ,'YYYY.MM.DD') AS CURR_DEPT_APPMT_DT
				               , TO_CHAR ( TO_DATE(A.RETRY_DT          ,'YYYYMMDD') ,'YYYY.MM.DD') AS RETRY_DT
				               , FCBASS0300CDNM(A.DPOB_CD,A.LOG_SVC_YR_NUM_CD) AS LOG_SVC_YR_NUM_NM
				               , FCBASS0300CDNM(A.DPOB_CD,A.LOG_SVC_MNTH_ICM_CD ) AS LOG_SVC_MNTH_ICM_NM
				               , FCBASS0300CDNM(A.DPOB_CD,B.DABTY_DIV_CD) AS DABTY_DIV_NM 
				               , (C.HUS_ROAD_NM_FNDTN_ADDR || C.HUS_ROAD_NM_DTL_PATR_ADDR) AS ADDR
				               , C.HUS_PHN_NUM
				               , C.CELL_PHNE_NUM
				               , C.EMAIL_ADDR
				               , A.PERN_NOTE_CTNT
				             /*   , A.SYSTEMKEY  */
				               , FCBASS0300CDNM(A.DPOB_CD,A.SX_DIV_CD) AS SX_DIV_NM   
				               
				]]>             
				
						<include refid="emymtDivSelectSql"/>
						           
						FROM PSNL0100 A, PSNL0113 B, PSNL0111 C , PSNL0101 P101
				         
							<isEqual property="psnl0112Chk" compareValue="Y">  
								, PSNL0112 D
							</isEqual>
				         	
				         	<isEqual property="psnl0114Chk" compareValue="Y">  	
				         		, PSNL0114 E
				         	</isEqual>
				         	
				         	<isEqual property="psnl0116Chk" compareValue="Y">  	
				         		, PSNL0116 F
				         	</isEqual>
				         	
				    		<isEqual property="psnl0119Chk" compareValue="Y">  	
				         		, PSNL0119 G
				         	</isEqual>	
				         	
				         	<isEqual property="psnl0118Chk" compareValue="Y">  	
				         		, PSNL0118 O
				         	</isEqual>	
				         		
				         	<isEqual property="psnl0120Chk" compareValue="Y">  	
				         		, PSNL0120 P
				         	</isEqual>
				         	
				         	<isEqual property="psnl0121Chk" compareValue="Y">  
				         		, PSNL0121 R
				         	</isEqual>	
				         	
				         	<isEqual property="psnl0122Chk" compareValue="Y">  	
				         		, PSNL0122 S
				         		
				         	</isEqual>	
				         	
				         	<isEqual property="psnl0123Chk" compareValue="Y">  	
				         		, PSNL0123 T
				         	</isEqual>	
				         		, PAYR0500 U
				         		
						WHERE A.DPOB_CD = B.DPOB_CD(+)
							AND A.SYSTEMKEY = B.SYSTEMKEY(+)
				              
				       		AND A.DPOB_CD = C.DPOB_CD(+)
				       		AND A.SYSTEMKEY = C.SYSTEMKEY(+)
				       		
				       		AND A.DPOB_CD = P101.DPOB_CD(+)
				       		AND A.SYSTEMKEY = P101.SYSTEMKEY(+)
				       		AND A.EMYMT_DIV_CD = P101.EMYMT_DIV_CD(+)
				       		
							<isNotNull property="emymtDivCd">
							   	<isNotEmpty property="emymtDivCd">
									AND A.EMYMT_DIV_CD = #emymtDivCd#
							 	</isNotEmpty>
							</isNotNull>
									 	
							<isNotEmpty property="hdofcCodtnCd" prepend="AND">
								<![CDATA[
									A.HDOFC_CODTN_CD
								]]>
								<iterate prepend="IN" property="hdofcCodtnCdArr" open="(" close=")" conjunction=",">
									 #hdofcCodtnCdArr[]#
								</iterate>
							</isNotEmpty>  
				       		
							<include refid="emymtDivWhereSql"/>
				       		 
				<isEqual property="srhFlag" compareValue="Y">  
				<![CDATA[
				UNION ALL 
				SELECT FCBASS0400CDNM(A.DPOB_CD, P0110.DEPT_CD, '2') AS CURR_DEPT_NM
				               , FCBASS0400CDNM(A.DPOB_CD, A.DEPT_CD, '2') AS DEPT_NM
				               , FCBASS0300CDNM(A.DPOB_CD, P0110.EMYMT_DIV_CD) AS EMYMT_DIV_NM
				               , A.HAN_NM
				               , SUBSTR(A.RESN_REGN_NUM,0,6)||'-'||SUBSTR(A.RESN_REGN_NUM,7) AS RESN_REGN_NUM
				               , fcBass0320CDNM(A.DPOB_CD, P0110.TYP_OCCU_CD) AS TYPE_OCCU_NM 
				              /*  , A.DTIL_OCCU_INTTN_CD  */
				               , fcBassEx0350CDNM(A.DPOB_CD ,P0110.TYP_OCCU_CD ,P0110.DTIL_OCCU_INTTN_CD,'1' ) AS DTIL_OCCU_INTTN_NM
				               , FCBASS0500CDNM (A.DPOB_CD, SUBSTR (P0110.EMYMT_BGNN_DT, 1, 4), P0110.DEPT_CD, P0110.BUSIN_CD) AS BUSIN_NM
				               , FCBASS0300CDNM(A.DPOB_CD, 'A0030020') AS HDOFC_CODTN_NM
				             /*  , TO_CHAR ( TO_DATE(A.FRST_EMYMT_DT     ,'YYYYMMDD') ,'YYYY.MM.DD') AS FRST_EMYMT_DT	*/
				             	,  DECODE(P101.FRST_BSE_EMYMT_DT, ''
				             				, TO_CHAR ( TO_DATE(A.FRST_EMYMT_DT			,'YYYYMMDD') ,'YYYY.MM.DD')
				             				, TO_CHAR ( TO_DATE(P101.FRST_BSE_EMYMT_DT	,'YYYYMMDD') ,'YYYY.MM.DD')	)  AS FRST_EMYMT_DT
				            
				               , TO_CHAR ( TO_DATE(A.CURR_DEPT_APPMT_DT,'YYYYMMDD') ,'YYYY.MM.DD') AS CURR_DEPT_APPMT_DT
				               , TO_CHAR ( TO_DATE(A.RETRY_DT          ,'YYYYMMDD') ,'YYYY.MM.DD') AS RETRY_DT
				               , FCBASS0300CDNM(A.DPOB_CD,A.LOG_SVC_YR_NUM_CD) AS LOG_SVC_YR_NUM_NM
				               , FCBASS0300CDNM(A.DPOB_CD,A.LOG_SVC_MNTH_ICM_CD ) AS LOG_SVC_MNTH_ICM_NM
				               , FCBASS0300CDNM(A.DPOB_CD,B.DABTY_DIV_CD) AS DABTY_DIV_NM 
				               , (C.HUS_ROAD_NM_FNDTN_ADDR || C.HUS_ROAD_NM_DTL_PATR_ADDR) AS ADDR
				               , C.HUS_PHN_NUM
				               , C.CELL_PHNE_NUM
				               , C.EMAIL_ADDR
				               , A.PERN_NOTE_CTNT
				             /*   , A.SYSTEMKEY  */
				               , FCBASS0300CDNM(A.DPOB_CD ,A.SX_DIV_CD) AS SX_DIV_NM   
				               
				]]>          
				   
						<include refid="emymtDivSelectSql"/>
						           
						FROM PSNL0100 A, PSNL0113 B, PSNL0111 C , PSNL0101 P101, PSNL0110 P0110
						
							<isEqual property="psnl0112Chk" compareValue="Y">  
								, PSNL0112 D
							</isEqual>
				         	
				         	<isEqual property="psnl0114Chk" compareValue="Y">  	
				         		, PSNL0114 E
				         	</isEqual>
				         	
				         	<isEqual property="psnl0116Chk" compareValue="Y">  	
				         		, PSNL0116 F
				         	</isEqual>
				         	
				    		<isEqual property="psnl0119Chk" compareValue="Y">  	
				         		, PSNL0119 G
				         	</isEqual>	
				         	
				         	<isEqual property="psnl0118Chk" compareValue="Y">  	
				         		, PSNL0118 O
				         	</isEqual>	
				         		
				         	<isEqual property="psnl0120Chk" compareValue="Y">  	
				         		, PSNL0120 P
				         	</isEqual>
				         	
				         	<isEqual property="psnl0121Chk" compareValue="Y">  
				         		, PSNL0121 R
				         	</isEqual>	
				         	
				         	<isEqual property="psnl0122Chk" compareValue="Y">  	
				         		, PSNL0122 S
				         		
				         	</isEqual>	
				         	
				         	<isEqual property="psnl0123Chk" compareValue="Y">  	
				         		, PSNL0123 T
				         	</isEqual>	
				         		, PAYR0500 U
				         		
						WHERE A.DPOB_CD = B.DPOB_CD(+)
							AND A.SYSTEMKEY = B.SYSTEMKEY(+)
				              
				       		AND A.DPOB_CD = C.DPOB_CD(+)
				       		AND A.SYSTEMKEY = C.SYSTEMKEY(+)
				       		
				       		AND A.DPOB_CD = P101.DPOB_CD(+)
				       		AND A.SYSTEMKEY = P101.SYSTEMKEY(+)
				       		AND P0110.EMYMT_DIV_CD = P101.EMYMT_DIV_CD					
						
							<include refid="emymtDivWhereSql"/> 
							
							AND A.DPOB_CD = P0110.DPOB_CD
							AND A.SYSTEMKEY = P0110.SYSTEMKEY
	    					AND P0110.EMYMT_BGNN_DT = ( SELECT MAX(EMYMT_BGNN_DT)
		                             						FROM PSNL0110
		                                         		WHERE DPOB_CD = P0110.DPOB_CD
		                                       				AND SYSTEMKEY = P0110.SYSTEMKEY
		                                                    AND EMYMT_DIV_CD = P0110.EMYMT_DIV_CD
		                                                    AND EMYMT_TYP_CD NOT IN ('A0420990')
		                               					)
		                               					
		            		      					
		                    <isEqual property="emymtDivCd" compareValue="A0020010">
									AND A.EMYMT_DIV_CD='A0020020'
									AND P0110.EMYMT_DIV_CD='A0020010'
							</isEqual>
								
							<isEqual property="emymtDivCd" compareValue="A0020020">
									AND A.EMYMT_DIV_CD='A0020010'
									AND P0110.EMYMT_DIV_CD='A0020020'
							</isEqual>     
				     		 
				</isEqual>      		
				
				ORDER BY CURR_DEPT_NM, EMYMT_DIV_NM, TYPE_OCCU_NM, RESN_REGN_NUM   
			)TA
	
	</select>
	
<!-- 기본 엑셀 
	<select id="psnl0600DAO.selectPsnl0600ListXls" parameterClass="psnl0600SrhVO" resultClass="egovMap">
	    <![CDATA[
			
	    SELECT ROW_NUMBER() OVER(ORDER BY (SELECT LPAD(DEPT_RANK,5,'0') FROM BASS0400 NN WHERE NN.DEPT_CD = A.CURR_AFFN_DEPT_CD)
	           , A.EMYMT_DIV_CD,A.TYP_OCCU_CD, A.PYSP_GRDE_CD,A.RESN_REGN_NUM ) AS RNUM 
		       , FCBASS0400CDNM (A.DPOB_CD, A.CURR_AFFN_DEPT_CD, '2') AS CURR_DEPT_NM
		       , FCBASS0400CDNM (A.DPOB_CD, A.DEPT_CD, '2') AS DEPT_NM
		       , FCBASS0300CDNM(A.DPOB_CD, A.EMYMT_DIV_CD) as EMYMT_DIV_NM
		       , A.HAN_NM
		       , SUBSTR(A.RESN_REGN_NUM,0,6)||'-'||SUBSTR(A.RESN_REGN_NUM,7) AS RESN_REGN_NUM
		       , fcBass0320CDNM(A.DPOB_CD, A.TYP_OCCU_CD) AS  TYPE_OCCU_NM 
		       , A.DTIL_OCCU_INTTN_CD 
		       , fcBassEx0350CDNM(A.DPOB_CD,A.TYP_OCCU_CD,A.DTIL_OCCU_INTTN_CD,'1' ) AS DTIL_OCCU_INTTN_NM
		       , FCBASS0500CDNM (A.DPOB_CD, SUBSTR (A.EMYMT_BGNN_DT, 1, 4), A.CURR_AFFN_DEPT_CD, A.BUSIN_CD) AS BUSIN_NM
		       , FCBASS0300CDNM(A.DPOB_CD, A.HDOFC_CODTN_CD) as HDOFC_CODTN_NM
		       , DECODE(LENGTH(A.FRST_EMYMT_DT), 8, TO_CHAR(TO_DATE(A.FRST_EMYMT_DT,'YYYYMMDD'),'YYYY.MM.DD'),A.FRST_EMYMT_DT) AS FRST_EMYMT_DT
		       , DECODE(LENGTH(A.CURR_DEPT_APPMT_DT), 8, TO_CHAR(TO_DATE(A.CURR_DEPT_APPMT_DT,'YYYYMMDD'),'YYYY.MM.DD'),A.CURR_DEPT_APPMT_DT) AS CURR_DEPT_APPMT_DT
		       , DECODE(LENGTH(A.RETRY_DT), 8, TO_CHAR(TO_DATE(A.RETRY_DT,'YYYYMMDD'),'YYYY.MM.DD'),A.RETRY_DT) AS RETRY_DT
		       , FCBASS0300CDNM(A.DPOB_CD,A.LOG_SVC_YR_NUM_CD) AS LOG_SVC_YR_NUM_NM
		       , FCBASS0300CDNM(A.DPOB_CD,A.LOG_SVC_MNTH_ICM_CD ) AS LOG_SVC_MNTH_ICM_NM
		       , FCBASS0300CDNM(A.DPOB_CD,B.DABTY_DIV_CD) AS DABTY_DIV_NM 
		       , C.HUS_ROAD_NM_FNDTN_ADDR || C.HUS_ROAD_NM_DTL_PATR_ADDR AS ADDR
		       , C.HUS_PHN_NUM
		       , C.CELL_PHNE_NUM
		       , C.EMAIL_ADDR
		       , A.PERN_NOTE_CTNT
		       , A.SYSTEMKEY 
		       , A.SX_DIV_CD
		       , FCBASS0300CDNM(A.DPOB_CD,A.SX_DIV_CD) AS SX_DIV_NM   
		 FROM PSNL0100 A, PSNL0113 B, PSNL0111 C, PAYR0500 D
		 WHERE A.DPOB_CD = B.DPOB_CD(+)
		      AND A.SYSTEMKEY = B.SYSTEMKEY(+)
		      AND A.DPOB_CD = C.DPOB_CD(+)
		      AND A.SYSTEMKEY = C.SYSTEMKEY(+)
		      AND A.DPOB_CD = D.DPOB_CD(+)
		      AND A.SYSTEMKEY = D.SYSTEMKEY(+)
		 ]]>
		 <include refid="defaultWhereSql"/>
		<isNotNull property="payrMangDeptCd">
			<isNotEmpty property="payrMangDeptCd" >
		  AND EXISTS  (
                         SELECT  C.DPOB_CD,
                                 C.DTIL_OCCU_INTTN_CD,
                                 C.TYP_OCCU_CD,
                                 C.DEPT_CD FROM 
                                             ( SELECT * 
                                                 FROM TABLE(PKG_DTIL_AUTH.FN_DTIL_AUTH_TB(#dpobCd#,#payrMangDeptYn#,#payrMangDeptCd#,#deptCd#,#usrId#,#deptCdAuth#,'' )) ) C
                                            WHERE     C.DPOB_CD = A.DPOB_CD
						                        AND C.DEPT_CD = A.CURR_AFFN_DEPT_CD
						                        AND NVL(C.TYP_OCCU_CD,'TT')  = NVL(A.TYP_OCCU_CD,'TT') 
                                                AND NVL(C.DTIL_OCCU_INTTN_CD,'TT')  = NVL(A.DTIL_OCCU_INTTN_CD,'TT')
                                               <isNotEmpty property="deptCd" prepend="AND">
												<![CDATA[
												 C.DEPT_CD
												]]>
												<iterate prepend="IN" property="deptCdArr" open="(" close=")" conjunction=",">
												 #deptCdArr[]#
												</iterate>
												</isNotEmpty> 
		) 
		</isNotEmpty> 
	</isNotNull>
		ORDER BY  A.DPOB_CD ASC , A.RESN_REGN_NUM ASC		
	</select>
	 -->
	 <select id="psnl0600DAO.selectPsnl0600ListXls" parameterClass="psnl0600SrhVO" resultClass="egovMap">
	  <![CDATA[
	 SELECT DISTINCT SYSTEMKEY
				                    , DPOB_CD
				                    , CURR_DEPT_NM
				                    , DEPT_NM
				                    , EMYMT_DIV_NM
				                    , HAN_NM
				                    , RESN_REGN_NUM
				                    , TYPE_OCCU_NM
				                    , DTIL_OCCU_INTTN_CD
				                    , DTIL_OCCU_INTTN_NM
				                    , BUSIN_NM
				                    , HDOFC_CODTN_NM
				                    , FRST_EMYMT_DT
				                    , EMYMT_BGNN_DT
				                    , RETRY_DT
				                    , LOG_SVC_YR_NUM_NM
				                    , LOG_SVC_MNTH_ICM_NM
				                    , DABTY_DIV_NM
				                    , ADDR
				                    , HUS_PHN_NUM
				                    , CELL_PHNE_NUM
				                    , EMAIL_ADDR
				                    , PERN_NOTE_CTNT
				                    , SX_DIV_CD
				                    , SX_DIV_NM
					
		 				FROM  (    SELECT A.SYSTEMKEY
				                         , A.DPOB_CD
				                         , FCBASS0400CDNM (A.DPOB_CD, A.CURR_AFFN_DEPT_CD, '2') AS CURR_DEPT_NM
				                         , FCBASS0400CDNM (A.DPOB_CD, A.DEPT_CD, '2') AS DEPT_NM
				                         , FCBASS0300CDNM (A.DPOB_CD, A.EMYMT_DIV_CD) AS EMYMT_DIV_NM
				                         , A.HAN_NM
				                         , SUBSTR (A.RESN_REGN_NUM, 0, 6) || '-' || SUBSTR (A.RESN_REGN_NUM, 7)AS RESN_REGN_NUM
				                         , fcBass0320CDNM (A.DPOB_CD, A.TYP_OCCU_CD) AS TYPE_OCCU_NM
				                         , A.DTIL_OCCU_INTTN_CD
				                         , fcBassEx0350CDNM (A.DPOB_CD, A.TYP_OCCU_CD, A.DTIL_OCCU_INTTN_CD,'1')AS DTIL_OCCU_INTTN_NM
				                         , FCBASS0500CDNM (A.DPOB_CD,SUBSTR (A.EMYMT_BGNN_DT, 1, 4),A.CURR_AFFN_DEPT_CD, A.BUSIN_CD)AS BUSIN_NM
				                         , FCBASS0300CDNM (A.DPOB_CD, A.HDOFC_CODTN_CD) AS HDOFC_CODTN_NM
				                      	 , DECODE (E.FRST_BSE_EMYMT_DT, '', TO_CHAR (TO_DATE (A.FRST_EMYMT_DT, 'YYYYMMDD'), 'YYYY.MM.DD') , TO_CHAR (TO_DATE (E.FRST_BSE_EMYMT_DT, 'YYYYMMDD'), 'YYYY.MM.DD'))AS FRST_EMYMT_DT
									 	 , CASE 
									 	 	WHEN #emymtDivCd# = 'A0020020' THEN DECODE (LENGTH (A.EMYMT_BGNN_DT),8, TO_CHAR (TO_DATE (A.EMYMT_BGNN_DT, 'YYYYMMDD'), 'YYYY.MM.DD'),A.EMYMT_BGNN_DT)
				                            WHEN #emymtDivCd# = 'A0020010' THEN DECODE (LENGTH (A.CURR_DEPT_APPMT_DT),8, TO_CHAR (TO_DATE (A.CURR_DEPT_APPMT_DT, 'YYYYMMDD'),'YYYY.MM.DD'), A.CURR_DEPT_APPMT_DT)
				                           END AS EMYMT_BGNN_DT
				                         , DECODE (LENGTH (A.RETRY_DT), 8, TO_CHAR (TO_DATE (A.RETRY_DT, 'YYYYMMDD'), 'YYYY.MM.DD'), A.RETRY_DT)AS RETRY_DT
				                         , FCBASS0300CDNM (A.DPOB_CD, A.LOG_SVC_YR_NUM_CD) AS LOG_SVC_YR_NUM_NM
				                         , FCBASS0300CDNM (A.DPOB_CD, A.LOG_SVC_MNTH_ICM_CD)AS LOG_SVC_MNTH_ICM_NM
				                         , FCBASS0300CDNM (A.DPOB_CD, B.DABTY_DIV_CD) AS DABTY_DIV_NM
				                         , C.HUS_ROAD_NM_FNDTN_ADDR || C.HUS_ROAD_NM_DTL_PATR_ADDR AS ADDR
				                         , C.HUS_PHN_NUM
				                         , C.CELL_PHNE_NUM
				                         , C.EMAIL_ADDR
				                         , A.PERN_NOTE_CTNT
				                         , A.SX_DIV_CD
				                         , FCBASS0300CDNM (A.DPOB_CD, A.SX_DIV_CD) AS SX_DIV_NM
					                FROM PSNL0100 A,
					                     PSNL0113 B,
					                     PSNL0111 C,
					                     PAYR0500 D,
					                     PSNL0101 E          
					               WHERE     A.DPOB_CD = B.DPOB_CD(+)
					                     AND A.SYSTEMKEY = B.SYSTEMKEY(+)
					                     AND A.DPOB_CD = C.DPOB_CD(+)
					                     AND A.SYSTEMKEY = C.SYSTEMKEY(+)
					                     AND A.DPOB_CD = D.DPOB_CD(+)
					                     AND A.SYSTEMKEY = D.SYSTEMKEY(+)
					                     AND A.DPOB_CD 		= E.DPOB_CD(+)
					                     AND A.SYSTEMKEY 	= E.SYSTEMKEY(+)
					                     AND A.EMYMT_DIV_CD = E.EMYMT_DIV_CD(+)
					                     
	]]>	 
					 				<include refid="defaultWhereSql"/>
					 				
					 				
									 <isNotNull property="emymtDivCd">
									     <isNotEmpty property="emymtDivCd">
									 		AND A.EMYMT_DIV_CD = #emymtDivCd#
									 	 </isNotEmpty>
									 </isNotNull>
									 
									<isNotEmpty property="hdofcCodtnCd" prepend="AND">
										<![CDATA[
											A.HDOFC_CODTN_CD
										]]>
										<iterate prepend="IN" property="hdofcCodtnCdArr" open="(" close=")" conjunction=",">
											 #hdofcCodtnCdArr[]#
										</iterate>
									</isNotEmpty> 	 
		 					 				
									<isNotNull property="payrMangDeptCd">
										<isNotEmpty property="payrMangDeptCd" >
									  	AND EXISTS  (
							                         SELECT  C.DPOB_CD,
							                                 C.DTIL_OCCU_INTTN_CD,
							                                 C.TYP_OCCU_CD,
							                                 C.DEPT_CD FROM 
							                                             ( SELECT * 
                                                 FROM TABLE(PKG_DTIL_AUTH.FN_DTIL_AUTH_TB(#dpobCd#,#payrMangDeptYn#,#payrMangDeptCd#,#deptCd#,#usrId#,#deptCdAuth#,'' )) ) C
							                                            WHERE     C.DPOB_CD = A.DPOB_CD
													                        AND C.DEPT_CD = A.CURR_AFFN_DEPT_CD
													                        AND NVL(C.TYP_OCCU_CD,'TT')  = NVL(A.TYP_OCCU_CD,'TT') 
							                                                AND NVL(C.DTIL_OCCU_INTTN_CD,'TT')  = NVL(A.DTIL_OCCU_INTTN_CD,'TT')
							                                                
							                                                <isNotEmpty property="deptCd" prepend="AND">
																			    C.DEPT_CD IN ( SELECT BA0400.DEPT_CD
																										FROM BASS0400 BA0400
																									WHERE BA0400.DEPT_USE_YN = 'Y'
																									START WITH BA0400.DEPT_CD 							
																										<iterate prepend="IN" property="deptCdArr" open="(" close=")" conjunction=",">
																											#deptCdArr[]#
																										</iterate>
																			                         CONNECT BY PRIOR BA0400.DEPT_CD = BA0400.HHRK_DEPT_CD
																									 ) 
																			</isNotEmpty>
							                                                
							                                                <!-- 
							                                               <isNotEmpty property="deptCd" prepend="AND">
																			<![CDATA[
																			 C.DEPT_CD
																			]]>
																			<iterate prepend="IN" property="deptCdArr" open="(" close=")" conjunction=",">
																			 #deptCdArr[]#
																			</iterate>
																			</isNotEmpty> 
																			 -->
														) 
										</isNotEmpty> 
									</isNotNull>
						
							
			 				<isEqual property="srhFlag" compareValue="Y">
								 				
			 <![CDATA[		UNION ALL
			 				
			 				SELECT A.SYSTEMKEY
				                         , A.DPOB_CD
				                         , FCBASS0400CDNM (F.DPOB_CD, F.DEPT_CD, '2') AS CURR_DEPT_NM
				                         , FCBASS0400CDNM (A.DPOB_CD, A.DEPT_CD, '2') AS DEPT_NM
				                         , FCBASS0300CDNM (F.DPOB_CD, F.EMYMT_DIV_CD) AS EMYMT_DIV_NM
				                         , A.HAN_NM
				                         , SUBSTR (A.RESN_REGN_NUM, 0, 6) || '-' || SUBSTR (A.RESN_REGN_NUM, 7)AS RESN_REGN_NUM
				                         , fcBass0320CDNM (F.DPOB_CD, F.TYP_OCCU_CD) AS TYPE_OCCU_NM
				                         , F.DTIL_OCCU_INTTN_CD
				                         , fcBassEx0350CDNM (F.DPOB_CD, F.TYP_OCCU_CD, F.DTIL_OCCU_INTTN_CD,'1')AS DTIL_OCCU_INTTN_NM
				                         , FCBASS0500CDNM (F.DPOB_CD,SUBSTR (A.EMYMT_BGNN_DT, 1, 4),F.DEPT_CD, F.BUSIN_CD)AS BUSIN_NM
				                         , FCBASS0300CDNM (A.DPOB_CD, 'A0030020') AS HDOFC_CODTN_NM
				    					 , DECODE (E.FRST_BSE_EMYMT_DT, '', TO_CHAR (TO_DATE (A.FRST_EMYMT_DT, 'YYYYMMDD'), 'YYYY.MM.DD') , TO_CHAR (TO_DATE (E.FRST_BSE_EMYMT_DT, 'YYYYMMDD'), 'YYYY.MM.DD'))AS FRST_EMYMT_DT 
				                         , DECODE (LENGTH (A.CURR_DEPT_APPMT_DT),8, TO_CHAR (TO_DATE (A.CURR_DEPT_APPMT_DT, 'YYYYMMDD'),'YYYY.MM.DD'), A.CURR_DEPT_APPMT_DT)AS CURR_DEPT_APPMT_DT
				                         , DECODE (LENGTH (A.RETRY_DT), 8, TO_CHAR (TO_DATE (A.RETRY_DT, 'YYYYMMDD'), 'YYYY.MM.DD'), A.RETRY_DT)AS RETRY_DT
				                         , FCBASS0300CDNM (A.DPOB_CD, A.LOG_SVC_YR_NUM_CD) AS LOG_SVC_YR_NUM_NM
				                         , FCBASS0300CDNM (A.DPOB_CD, A.LOG_SVC_MNTH_ICM_CD)AS LOG_SVC_MNTH_ICM_NM
				                         , FCBASS0300CDNM (A.DPOB_CD, B.DABTY_DIV_CD) AS DABTY_DIV_NM
				                         , C.HUS_ROAD_NM_FNDTN_ADDR || C.HUS_ROAD_NM_DTL_PATR_ADDR AS ADDR
				                         , C.HUS_PHN_NUM
				                         , C.CELL_PHNE_NUM
				                         , C.EMAIL_ADDR
				                         , A.PERN_NOTE_CTNT
				                         , A.SX_DIV_CD
				                         , FCBASS0300CDNM (A.DPOB_CD, A.SX_DIV_CD) AS SX_DIV_NM
					                FROM PSNL0100 A,
					                     PSNL0113 B,
					                     PSNL0111 C,
					                     PAYR0500 D,
					                     PSNL0110 F,
					                     PSNL0101 E        
					               WHERE     A.DPOB_CD = B.DPOB_CD(+)
					                     AND A.SYSTEMKEY = B.SYSTEMKEY(+)
					                     AND A.DPOB_CD = C.DPOB_CD(+)
					                     AND A.SYSTEMKEY = C.SYSTEMKEY(+)
					                     AND A.DPOB_CD = D.DPOB_CD(+)
					                     AND A.SYSTEMKEY = D.SYSTEMKEY(+)
					                     AND A.DPOB_CD = F.DPOB_CD(+)
                     					 AND A.SYSTEMKEY = F.SYSTEMKEY(+) 
                     					 AND A.DPOB_CD 		= E.DPOB_CD(+)
					                     AND A.SYSTEMKEY 	= E.SYSTEMKEY(+)
					                     AND F.EMYMT_DIV_CD = E.EMYMT_DIV_CD
					                     
                     					 AND F.EMYMT_BGNN_DT = ( SELECT MAX(EMYMT_BGNN_DT)
				                                                  FROM PSNL0110
				                                                 WHERE DPOB_CD = F.DPOB_CD
				                                 					AND SYSTEMKEY = F.SYSTEMKEY
				                                           			AND EMYMT_DIV_CD = F.EMYMT_DIV_CD
				                                      				AND EMYMT_TYP_CD NOT IN ('A0420990')
                           										)	
                     					 
                     					  
             ]]>	        			
									<isEqual property="emymtDivCd" compareValue="A0020010">	  
										 AND A.EMYMT_DIV_CD='A0020020'
						 				 AND F.EMYMT_DIV_CD='A0020010'
									</isEqual>
									
									<isEqual property="emymtDivCd" compareValue="A0020020">	  
										 AND A.EMYMT_DIV_CD='A0020010'
						 				 AND F.EMYMT_DIV_CD='A0020020'
									</isEqual>
										 
                     					 
					 				<include refid="defaultWhereSql"/>
									<isNotNull property="payrMangDeptCd">
										 
									
									<isNotEmpty property="payrMangDeptCd" >
									  	AND EXISTS  (
							                         SELECT  C.DPOB_CD,
							                                 C.DTIL_OCCU_INTTN_CD,
							                                 C.TYP_OCCU_CD,
							                                 C.DEPT_CD FROM 
							                                             ( SELECT * 
                                                 FROM TABLE(PKG_DTIL_AUTH.FN_DTIL_AUTH_TB(#dpobCd#,#payrMangDeptYn#,#payrMangDeptCd#,#deptCd#,#usrId#,#deptCdAuth#,'' )) ) C
							                                            WHERE     C.DPOB_CD = A.DPOB_CD
													                        AND C.DEPT_CD = A.CURR_AFFN_DEPT_CD
													                        AND NVL(C.TYP_OCCU_CD,'TT')  = NVL(A.TYP_OCCU_CD,'TT') 
							                                                AND NVL(C.DTIL_OCCU_INTTN_CD,'TT')  = NVL(A.DTIL_OCCU_INTTN_CD,'TT')
							                                                
							                                                <isNotEmpty property="deptCd" prepend="AND">
																			    C.DEPT_CD IN ( SELECT BA0400.DEPT_CD
																										FROM BASS0400 BA0400
																									WHERE BA0400.DEPT_USE_YN = 'Y'
																									START WITH BA0400.DEPT_CD 							
																										<iterate prepend="IN" property="deptCdArr" open="(" close=")" conjunction=",">
																											#deptCdArr[]#
																										</iterate>
																			                         CONNECT BY PRIOR BA0400.DEPT_CD = BA0400.HHRK_DEPT_CD
																									 ) 
																			</isNotEmpty>
							                                                
							                                                <!-- 
							                                               <isNotEmpty property="deptCd" prepend="AND">
																			<![CDATA[
																			 C.DEPT_CD
																			]]>
																			<iterate prepend="IN" property="deptCdArr" open="(" close=")" conjunction=",">
																			 #deptCdArr[]#
																			</iterate>
																			</isNotEmpty> 
																			-->
														) 
										</isNotEmpty> 
									</isNotNull>
			 				
			 				</isEqual>
			 							 				
				)
	</select> 
	 
	 
	 
	
	
	<!-- 병역 엑셀 -->
	<select id="psnl0600DAO.selectPsnl0112Xls" parameterClass="psnl0600SrhVO" resultClass="egovMap">

	    SELECT ROW_NUMBER() OVER(ORDER BY (SELECT LPAD(DEPT_RANK,5,'0') FROM BASS0400 NN WHERE NN.DEPT_CD = A.CURR_AFFN_DEPT_CD)
	           , A.EMYMT_DIV_CD,A.TYP_OCCU_CD, A.PYSP_GRDE_CD,A.RESN_REGN_NUM ) AS RNUM 
		       , FCBASS0400CDNM (A.DPOB_CD, A.CURR_AFFN_DEPT_CD, '2') AS CURR_DEPT_NM
		       , FCBASS0400CDNM (A.DPOB_CD, A.DEPT_CD, '2') AS DEPT_NM
		       , FCBASS0300CDNM(A.DPOB_CD, A.EMYMT_DIV_CD) as EMYMT_DIV_NM
		       , A.HAN_NM
		       , SUBSTR(A.RESN_REGN_NUM,0,6)||'-'||SUBSTR(A.RESN_REGN_NUM,7) AS RESN_REGN_NUM
		       , fcBass0320CDNM(A.DPOB_CD, A.TYP_OCCU_CD) AS  TYPE_OCCU_NM 
		       , A.DTIL_OCCU_INTTN_CD 
		       , fcBassEx0350CDNM(A.DPOB_CD,A.TYP_OCCU_CD,A.DTIL_OCCU_INTTN_CD,'1' ) AS DTIL_OCCU_INTTN_NM
		       , FCBASS0500CDNM (A.DPOB_CD, SUBSTR (A.EMYMT_BGNN_DT, 1, 4), A.CURR_AFFN_DEPT_CD, A.BUSIN_CD) AS BUSIN_NM
		       , FCBASS0300CDNM(A.DPOB_CD, A.HDOFC_CODTN_CD) as HDOFC_CODTN_NM
		       , FCBASS0300CDNM(A.DPOB_CD, B.DSAGE_DIV_CD) as DSAGE_DIV_CD
			   , DECODE(B.ENRLNT_DT, '', '',  '00000000', '', DECODE (LENGTH (B.ENRLNT_DT),  8, TO_CHAR (TO_DATE (B.ENRLNT_DT, 'YYYYMMDD'), 'YYYY.MM.DD'), B.ENRLNT_DT))AS ENRLNT_DT
               , DECODE(B.DSAGE_DT, '',  '', '00000000', '', DECODE (LENGTH (B.DSAGE_DT), 8, TO_CHAR (TO_DATE (B.DSAGE_DT, 'YYYYMMDD'), 'YYYY.MM.DD') ,B.DSAGE_DT))AS DSAGE_DT
		       , FCBASS0300CDNM(A.DPOB_CD, B.SERVC_RCGTN_PRID_CD) as SERVC_RCGTN_PRID_CD
		       , FCBASS0300CDNM(A.DPOB_CD, B.SRVSS_CD) as SRVSS_CD
		       , FCBASS0300CDNM(A.DPOB_CD, B.BAGGRP_CD) as BAGGRP_CD
		       , FCBASS0300CDNM(A.DPOB_CD, B.ABOTS_CD) as ABOTS_CD
		       , FCBASS0300CDNM(A.DPOB_CD, B.CLS_CD) as CLS_CD
		       , B.MITY_SILNUM
		       , B.MOS
		       , FCBASS0300CDNM(A.DPOB_CD, B.EXMTN_REAS_CD) as EXMTN_REAS_CD
		       , A.SYSTEMKEY
		 FROM PSNL0100 A, PSNL0112 B, PAYR0500 D
		 WHERE A.DPOB_CD = B.DPOB_CD(+)
		   AND A.SYSTEMKEY = B.SYSTEMKEY(+)
		   AND A.DPOB_CD = D.DPOB_CD(+)
		   AND A.SYSTEMKEY = D.SYSTEMKEY(+)
		   
		   
	    <include refid="defaultWhereSql"/>
	    
		 <isNotNull property="emymtDivCd">
		     <isNotEmpty property="emymtDivCd">
		 		AND A.EMYMT_DIV_CD = #emymtDivCd#
		 	 </isNotEmpty>
		 </isNotNull>
		 
		 
 		<isNotEmpty property="hdofcCodtnCd" prepend="AND">
			<![CDATA[
				A.HDOFC_CODTN_CD
			]]>
			<iterate prepend="IN" property="hdofcCodtnCdArr" open="(" close=")" conjunction=",">
				 #hdofcCodtnCdArr[]#
			</iterate>
		</isNotEmpty> 	 	    
	    
	    <isNotNull property="payrMangDeptCd">
			<isNotEmpty property="payrMangDeptCd" >
		  AND EXISTS  (
                         SELECT  C.DPOB_CD,
                                 C.DTIL_OCCU_INTTN_CD,
                                 C.TYP_OCCU_CD,
                                 C.DEPT_CD FROM 
                                             ( SELECT * 
                                                 FROM TABLE(PKG_DTIL_AUTH.FN_DTIL_AUTH_TB(#dpobCd#,#payrMangDeptYn#,#payrMangDeptCd#,#deptCd#,#usrId#,#deptCdAuth#,'' )) ) C
                                            WHERE     C.DPOB_CD = A.DPOB_CD
						                        AND C.DEPT_CD = A.CURR_AFFN_DEPT_CD
						                        AND NVL(C.TYP_OCCU_CD,'TT')  = NVL(A.TYP_OCCU_CD,'TT') 
                                                AND NVL(C.DTIL_OCCU_INTTN_CD,'TT')  = NVL(A.DTIL_OCCU_INTTN_CD,'TT')
                                                
												<isNotEmpty property="deptCd" prepend="AND">
												    C.DEPT_CD IN ( SELECT BA0400.DEPT_CD
																			FROM BASS0400 BA0400
																		WHERE BA0400.DEPT_USE_YN = 'Y'
																		START WITH BA0400.DEPT_CD 							
																			<iterate prepend="IN" property="deptCdArr" open="(" close=")" conjunction=",">
																				#deptCdArr[]#
																			</iterate>
												                         CONNECT BY PRIOR BA0400.DEPT_CD = BA0400.HHRK_DEPT_CD
																		 ) 
												</isNotEmpty>                                                
                                                
                                                <!-- 
                                               <isNotEmpty property="deptCd" prepend="AND">
												<![CDATA[
												 C.DEPT_CD
												]]>
												<iterate prepend="IN" property="deptCdArr" open="(" close=")" conjunction=",">
												 #deptCdArr[]#
												</iterate>
												</isNotEmpty> 
												-->
		) 
		</isNotEmpty> 
		</isNotNull>
	    
		<isNotNull property="dsageDivCd">
		     <isNotEmpty property="dsageDivCd">
		 		AND B.DSAGE_DIV_CD = #dsageDivCd# 
		 	 </isNotEmpty>
		</isNotNull>
		
	    <isNotNull property="dsageDtS">
		     <isNotEmpty property="dsageDtS">
		 		AND B.DSAGE_DT &gt;= #dsageDtS#
		 	 </isNotEmpty>
		</isNotNull>
		<isNotNull property="dsageDtE">
		     <isNotEmpty property="dsageDtE">
		 		AND B.DSAGE_DT &lt;= #dsageDtE#
		 	 </isNotEmpty>
		</isNotNull>
	    
		<isNotNull property="baggrpCd">
		     <isNotEmpty property="baggrpCd">
		 		AND B.BAGGRP_CD = #baggrpCd# 
		 	 </isNotEmpty>
		</isNotNull>
		
		<isNotNull property="abotsCd">
		     <isNotEmpty property="abotsCd">
		 		AND B.ABOTS_CD = #abotsCd# 
		 	 </isNotEmpty>
		</isNotNull>
		
		<isNotNull property="clsCd">
		     <isNotEmpty property="clsCd">
		 		AND B.CLS_CD = #clsCd# 
		 	 </isNotEmpty>
		</isNotNull>	
		
	</select>

	
	<!-- 단체 엑셀 -->
	<select id="psnl0600DAO.selectPsnl0114Xls" parameterClass="psnl0600SrhVO" resultClass="egovMap">

		SELECT ROW_NUMBER() OVER(ORDER BY (SELECT LPAD(DEPT_RANK,5,'0') FROM BASS0400 NN WHERE NN.DEPT_CD = A.CURR_AFFN_DEPT_CD)
				, A.EMYMT_DIV_CD,A.TYP_OCCU_CD, A.PYSP_GRDE_CD,A.RESN_REGN_NUM ) AS RNUM 
				, FCBASS0400CDNM (A.DPOB_CD, A.CURR_AFFN_DEPT_CD, '2') AS CURR_DEPT_NM
				, FCBASS0400CDNM (A.DPOB_CD, A.DEPT_CD, '2') AS DEPT_NM
				, FCBASS0300CDNM(A.DPOB_CD, A.EMYMT_DIV_CD) as EMYMT_DIV_NM
				, A.HAN_NM
				, SUBSTR(A.RESN_REGN_NUM,0,6)||'-'||SUBSTR(A.RESN_REGN_NUM,7) AS RESN_REGN_NUM
				, fcBass0320CDNM(A.DPOB_CD, A.TYP_OCCU_CD) AS  TYPE_OCCU_NM 
		       	, A.DTIL_OCCU_INTTN_CD 
		       	, fcBassEx0350CDNM(A.DPOB_CD,A.TYP_OCCU_CD,A.DTIL_OCCU_INTTN_CD,'1' ) AS DTIL_OCCU_INTTN_NM
				, FCBASS0500CDNM (A.DPOB_CD, SUBSTR (A.EMYMT_BGNN_DT, 1, 4), A.CURR_AFFN_DEPT_CD, A.BUSIN_CD) AS BUSIN_NM
		        , FCBASS0300CDNM(A.DPOB_CD, A.HDOFC_CODTN_CD) as HDOFC_CODTN_NM
		    	, DECODE(LENGTH(B.JN_DT), 8, TO_CHAR(TO_DATE(B.JN_DT,'YYYYMMDD'),'YYYY.MM.DD'),B.JN_DT) AS JN_DT
		     	, B.JN_OPZTN_NM
		      	, FCBASS0300CDNM(A.DPOB_CD, B.ODTY_CD) as ODTY_CD
		    	, DECODE(LENGTH(B.WIRL_DT), 8, TO_CHAR(TO_DATE(B.WIRL_DT,'YYYYMMDD'),'YYYY.MM.DD'),B.WIRL_DT) AS WIRL_DT
		       	, A.SYSTEMKEY
		FROM PSNL0100 A, PSNL0114 B, PAYR0500 D
		WHERE A.DPOB_CD = B.DPOB_CD(+)
			AND A.SYSTEMKEY = B.SYSTEMKEY(+)
			AND A.DPOB_CD = D.DPOB_CD(+)
			AND A.SYSTEMKEY = D.SYSTEMKEY(+)
			AND B.OPZTN_SEIL_NUM IS NOT NULL
        <include refid="defaultWhereSql"/>
        
        <isNotNull property="emymtDivCd">
		     <isNotEmpty property="emymtDivCd">
		 		AND A.EMYMT_DIV_CD = #emymtDivCd#
		 	 </isNotEmpty>
		 </isNotNull>
        
		<isNotEmpty property="hdofcCodtnCd" prepend="AND">
			<![CDATA[
				A.HDOFC_CODTN_CD
			]]>
			<iterate prepend="IN" property="hdofcCodtnCdArr" open="(" close=")" conjunction=",">
				 #hdofcCodtnCdArr[]#
			</iterate>
		</isNotEmpty> 	         
        
        <isNotNull property="payrMangDeptCd">
			<isNotEmpty property="payrMangDeptCd" >
		  AND EXISTS  (
                         SELECT  C.DPOB_CD,
                                 C.DTIL_OCCU_INTTN_CD,
                                 C.TYP_OCCU_CD,
                                 C.DEPT_CD FROM 
                                             ( SELECT * 
                                                 FROM TABLE(PKG_DTIL_AUTH.FN_DTIL_AUTH_TB(#dpobCd#,#payrMangDeptYn#,#payrMangDeptCd#,#deptCd#,#usrId#,#deptCdAuth#,'' )) ) C
                                            WHERE     C.DPOB_CD = A.DPOB_CD
						                        AND C.DEPT_CD = A.CURR_AFFN_DEPT_CD
						                        AND NVL(C.TYP_OCCU_CD,'TT')  = NVL(A.TYP_OCCU_CD,'TT') 
                                                AND NVL(C.DTIL_OCCU_INTTN_CD,'TT')  = NVL(A.DTIL_OCCU_INTTN_CD,'TT')
                                                
												<isNotEmpty property="deptCd" prepend="AND">
												    C.DEPT_CD IN ( SELECT BA0400.DEPT_CD
																			FROM BASS0400 BA0400
																		WHERE BA0400.DEPT_USE_YN = 'Y'
																		START WITH BA0400.DEPT_CD 							
																			<iterate prepend="IN" property="deptCdArr" open="(" close=")" conjunction=",">
																				#deptCdArr[]#
																			</iterate>
												                         CONNECT BY PRIOR BA0400.DEPT_CD = BA0400.HHRK_DEPT_CD
																		 ) 
												</isNotEmpty>                                                
                                                
                                                <!-- 
                                               <isNotEmpty property="deptCd" prepend="AND">
												<![CDATA[
												 C.DEPT_CD
												]]>
												<iterate prepend="IN" property="deptCdArr" open="(" close=")" conjunction=",">
												 #deptCdArr[]#
												</iterate>
												</isNotEmpty> 
												-->
		) 
		</isNotEmpty> 
		</isNotNull>
        
         <isNotNull property="jnOpztnNm">
		     <isNotEmpty property="jnOpztnNm">
		 		AND B.JN_OPZTN_NM LIKE '%' || #jnOpztnNm# || '%' 
		 	 </isNotEmpty>
		</isNotNull>
		<isNotNull property="jnDtS">
		     <isNotEmpty property="jnDtS">
		 		AND B.JN_DT &gt;= #jnDtS#
		 	 </isNotEmpty>
		</isNotNull>
		<isNotNull property="jnDtE">
		     <isNotEmpty property="jnDtE">
		 		AND B.JN_DT &lt;= #jnDtE#
		 	 </isNotEmpty>
		</isNotNull>
		
	</select>
	
	
	<!-- 학력 엑셀 -->
	<select id="psnl0600DAO.selectPsnl0116Xls" parameterClass="psnl0600SrhVO" resultClass="egovMap">
			
		SELECT ROW_NUMBER() OVER(ORDER BY (SELECT LPAD(DEPT_RANK,5,'0') FROM BASS0400 NN WHERE NN.DEPT_CD = A.CURR_AFFN_DEPT_CD)
				, A.EMYMT_DIV_CD,A.TYP_OCCU_CD, A.PYSP_GRDE_CD,A.RESN_REGN_NUM ) AS RNUM 
		       	, FCBASS0400CDNM (A.DPOB_CD, A.CURR_AFFN_DEPT_CD, '2') AS CURR_DEPT_NM
		       	, FCBASS0400CDNM (A.DPOB_CD, A.DEPT_CD, '2') AS DEPT_NM
		       	, FCBASS0300CDNM(A.DPOB_CD, A.EMYMT_DIV_CD) as EMYMT_DIV_NM
		       	, A.HAN_NM
		       	, SUBSTR(A.RESN_REGN_NUM,0,6)||'-'||SUBSTR(A.RESN_REGN_NUM,7) AS RESN_REGN_NUM
		        , fcBass0320CDNM(A.DPOB_CD, A.TYP_OCCU_CD) AS  TYPE_OCCU_NM 
		       	, A.DTIL_OCCU_INTTN_CD 
		       	, fcBassEx0350CDNM(A.DPOB_CD,A.TYP_OCCU_CD,A.DTIL_OCCU_INTTN_CD,'1' ) AS DTIL_OCCU_INTTN_NM
		       	, FCBASS0500CDNM (A.DPOB_CD, SUBSTR (A.EMYMT_BGNN_DT, 1, 4), A.CURR_AFFN_DEPT_CD, A.BUSIN_CD) AS BUSIN_NM
               	, FCBASS0300CDNM(A.DPOB_CD, A.HDOFC_CODTN_CD) as HDOFC_CODTN_NM
               	, DECODE(LENGTH(B.ETNC_ITSHL_DT), 8, TO_CHAR(TO_DATE(B.ETNC_ITSHL_DT,'YYYYMMDD'),'YYYY.MM.DD'),B.ETNC_ITSHL_DT) AS ETNC_ITSHL_DT  
               	, DECODE(LENGTH(B.GRDTN_DT), 8, TO_CHAR(TO_DATE(B.GRDTN_DT,'YYYYMMDD'),'YYYY.MM.DD'),B.GRDTN_DT) AS GRDTN_DT 
               	, FCBASS0300CDNM(A.DPOB_CD, B.ACAD_ABTY_DIV_CD) as ACAD_ABTY_DIV_CD
               	, FCBASS0300CDNM(A.DPOB_CD, B.SCHL_CD) as SCHL_CD 
               	, FCBASS0300CDNM(A.DPOB_CD, B.DEPR_MAJR_CD) as DEPR_MAJR_CD
               	, FCBASS0300CDNM(A.DPOB_CD, B.DEGR_DIV_CD) as DEGR_DIV_CD 
               	, FCBASS0300CDNM(A.DPOB_CD, B.LESN_YR_NUM_CD) as LESN_YR_NUM_CD
               	, B.ACAD_ABTY_NOTE_CTNT
               	, A.SYSTEMKEY 
		FROM PSNL0100 A, PSNL0116 B, PAYR0500 D
     	WHERE A.DPOB_CD = B.DPOB_CD(+)
			AND A.SYSTEMKEY = B.SYSTEMKEY(+)
			AND A.DPOB_CD = D.DPOB_CD(+)
		    AND A.SYSTEMKEY = D.SYSTEMKEY(+)
         	AND B.ACAD_ABTY_SEIL_NUM IS NOT NULL
         
         <include refid="defaultWhereSql"/>

		 <isNotNull property="emymtDivCd">
		     <isNotEmpty property="emymtDivCd">
		 		AND A.EMYMT_DIV_CD = #emymtDivCd#
		 	 </isNotEmpty>
		 </isNotNull>
 
		<isNotEmpty property="hdofcCodtnCd" prepend="AND">
			<![CDATA[
				A.HDOFC_CODTN_CD
			]]>
			<iterate prepend="IN" property="hdofcCodtnCdArr" open="(" close=")" conjunction=",">
				 #hdofcCodtnCdArr[]#
			</iterate>
		</isNotEmpty> 	  
         
         <isNotNull property="payrMangDeptCd">
			<isNotEmpty property="payrMangDeptCd" >
		  AND EXISTS  (
                         SELECT  C.DPOB_CD,
                                 C.DTIL_OCCU_INTTN_CD,
                                 C.TYP_OCCU_CD,
                                 C.DEPT_CD FROM 
                                             ( SELECT * 
                                                 FROM TABLE(PKG_DTIL_AUTH.FN_DTIL_AUTH_TB(#dpobCd#,#payrMangDeptYn#,#payrMangDeptCd#,#deptCd#,#usrId#,#deptCdAuth#,'' ))) C
                                            WHERE     C.DPOB_CD = A.DPOB_CD
						                        AND C.DEPT_CD = A.CURR_AFFN_DEPT_CD
						                        AND NVL(C.TYP_OCCU_CD,'TT')  = NVL(A.TYP_OCCU_CD,'TT') 
                                                AND NVL(C.DTIL_OCCU_INTTN_CD,'TT')  = NVL(A.DTIL_OCCU_INTTN_CD,'TT')
                                        
												<isNotEmpty property="deptCd" prepend="AND">
												    C.DEPT_CD IN ( SELECT BA0400.DEPT_CD
																			FROM BASS0400 BA0400
																		WHERE BA0400.DEPT_USE_YN = 'Y'
																		START WITH BA0400.DEPT_CD 							
																			<iterate prepend="IN" property="deptCdArr" open="(" close=")" conjunction=",">
																				#deptCdArr[]#
																			</iterate>
												                         CONNECT BY PRIOR BA0400.DEPT_CD = BA0400.HHRK_DEPT_CD
																		 ) 
												</isNotEmpty>                                        
                                                
                                                <!-- 
                                               <isNotEmpty property="deptCd" prepend="AND">
												<![CDATA[
												 C.DEPT_CD
												]]>
												<iterate prepend="IN" property="deptCdArr" open="(" close=")" conjunction=",">
												 #deptCdArr[]#
												</iterate>
												</isNotEmpty> 
												-->
		) 
		</isNotEmpty> 
		</isNotNull>
         
         <isNotNull property="acadAbtyDivCd">
		     <isNotEmpty property="acadAbtyDivCd">
		 		AND B.ACAD_ABTY_DIV_CD = #acadAbtyDivCd# 
		 	 </isNotEmpty>
		</isNotNull>
		<isNotNull property="degrDivCd">
		     <isNotEmpty property="degrDivCd">
		 		AND B.DEGR_DIV_CD = #degrDivCd# 
		 	 </isNotEmpty>
		</isNotNull>
		<isNotNull property="deprMajrCd">
		     <isNotEmpty property="deprMajrCd">
		 		AND B.DEPR_MAJR_CD = #deprMajrCd# 
		 	 </isNotEmpty>
		</isNotNull>
		<isNotNull property="schlCd">
		     <isNotEmpty property="schlCd">
		 		AND B.SCHL_CD = #schlCd#  
		 	 </isNotEmpty>
		</isNotNull>
		
	</select>
	
	
	<!-- 경력 경력 -->
	<select id="psnl0600DAO.selectPsnl0119Xls" parameterClass="psnl0600SrhVO" resultClass="egovMap">
	
		SELECT ROW_NUMBER() OVER(ORDER BY (SELECT LPAD(DEPT_RANK,5,'0') FROM BASS0400 NN WHERE NN.DEPT_CD = A.CURR_AFFN_DEPT_CD)
				, A.EMYMT_DIV_CD,A.TYP_OCCU_CD, A.PYSP_GRDE_CD,A.RESN_REGN_NUM ) AS RNUM 
				, FCBASS0400CDNM (A.DPOB_CD, A.CURR_AFFN_DEPT_CD, '2') AS CURR_DEPT_NM
				, FCBASS0400CDNM (A.DPOB_CD, A.DEPT_CD, '2') AS DEPT_NM
				, FCBASS0300CDNM(A.DPOB_CD, A.EMYMT_DIV_CD) as EMYMT_DIV_NM
				, A.HAN_NM
				, SUBSTR(A.RESN_REGN_NUM,0,6)||'-'||SUBSTR(A.RESN_REGN_NUM,7) AS RESN_REGN_NUM
				, fcBass0320CDNM(A.DPOB_CD, A.TYP_OCCU_CD) AS  TYPE_OCCU_NM 
		       	, A.DTIL_OCCU_INTTN_CD 
		       	, fcBassEx0350CDNM(A.DPOB_CD,A.TYP_OCCU_CD,A.DTIL_OCCU_INTTN_CD,'1' ) AS DTIL_OCCU_INTTN_NM
				, FCBASS0500CDNM (A.DPOB_CD, SUBSTR (A.EMYMT_BGNN_DT, 1, 4), A.CURR_AFFN_DEPT_CD, A.BUSIN_CD) AS BUSIN_NM
		     	, FCBASS0300CDNM(A.DPOB_CD, A.HDOFC_CODTN_CD) as HDOFC_CODTN_NM
		        , DECODE(LENGTH(B.CARR_BGNN_DT), 8, TO_CHAR(TO_DATE(B.CARR_BGNN_DT,'YYYYMMDD'),'YYYY.MM.DD'),B.CARR_BGNN_DT) AS CARR_BGNN_DT
		        , DECODE(LENGTH(B.CARR_END_DT), 8, TO_CHAR(TO_DATE(B.CARR_END_DT,'YYYYMMDD'),'YYYY.MM.DD'),B.CARR_END_DT) AS CARR_END_DT
		        , B.PAE_WORK_NM
		        , B.ODTY_NM
		        , B.REPBTY_BUSIN_NM
		        , B.CARR_NOTE_CTNT
		        , A.SYSTEMKEY
		FROM PSNL0100 A, PSNL0119 B, PAYR0500 D
		WHERE A.DPOB_CD = B.DPOB_CD(+)
			AND A.SYSTEMKEY = B.SYSTEMKEY(+)
			AND A.DPOB_CD = D.DPOB_CD(+)
		    AND A.SYSTEMKEY = D.SYSTEMKEY(+)
			AND B.CARR_RSPT_SEIL_NUM IS NOT NULL
		         
			<include refid="defaultWhereSql"/>

		 <isNotNull property="emymtDivCd">
		     <isNotEmpty property="emymtDivCd">
		 		AND A.EMYMT_DIV_CD = #emymtDivCd#
		 	 </isNotEmpty>
		 </isNotNull>
		
		<isNotEmpty property="hdofcCodtnCd" prepend="AND">
			<![CDATA[
				A.HDOFC_CODTN_CD
			]]>
			<iterate prepend="IN" property="hdofcCodtnCdArr" open="(" close=")" conjunction=",">
				 #hdofcCodtnCdArr[]#
			</iterate>
		</isNotEmpty> 	 		
			
			<isNotNull property="payrMangDeptCd">
			<isNotEmpty property="payrMangDeptCd" >
		  AND EXISTS  (
                         SELECT  C.DPOB_CD,
                                 C.DTIL_OCCU_INTTN_CD,
                                 C.TYP_OCCU_CD,
                                 C.DEPT_CD FROM 
                                             ( SELECT * 
                                                 FROM TABLE(PKG_DTIL_AUTH.FN_DTIL_AUTH_TB(#dpobCd#,#payrMangDeptYn#,#payrMangDeptCd#,#deptCd#,#usrId#,#deptCdAuth#,'' ))) C
                                            WHERE     C.DPOB_CD = A.DPOB_CD
						                        AND C.DEPT_CD = A.CURR_AFFN_DEPT_CD
						                        AND NVL(C.TYP_OCCU_CD,'TT')  = NVL(A.TYP_OCCU_CD,'TT') 
                                                AND NVL(C.DTIL_OCCU_INTTN_CD,'TT')  = NVL(A.DTIL_OCCU_INTTN_CD,'TT')
                                                
												<isNotEmpty property="deptCd" prepend="AND">
												    C.DEPT_CD IN ( SELECT BA0400.DEPT_CD
																			FROM BASS0400 BA0400
																		WHERE BA0400.DEPT_USE_YN = 'Y'
																		START WITH BA0400.DEPT_CD 							
																			<iterate prepend="IN" property="deptCdArr" open="(" close=")" conjunction=",">
																				#deptCdArr[]#
																			</iterate>
												                         CONNECT BY PRIOR BA0400.DEPT_CD = BA0400.HHRK_DEPT_CD
																		 ) 
												</isNotEmpty>                                                
                                                
                                                <!-- 
                                               <isNotEmpty property="deptCd" prepend="AND">
												<![CDATA[
												 C.DEPT_CD
												]]>
												<iterate prepend="IN" property="deptCdArr" open="(" close=")" conjunction=",">
												 #deptCdArr[]#
												</iterate>
												</isNotEmpty> 
												-->
		) 
		</isNotEmpty> 
		</isNotNull>
		    
			<isNotNull property="paeWorkNm">
				<isNotEmpty property="paeWorkNm">
					AND B.PAE_WORK_NM LIKE '%' || #paeWorkNm# || '%' 
				</isNotEmpty>
			</isNotNull>
			<isNotNull property="carrBgnnDtS">
				<isNotEmpty property="carrBgnnDtS">
					AND B.CARR_BGNN_DT &gt;= #carrBgnnDtS#
				 </isNotEmpty>
			</isNotNull>
			<isNotNull property="carrBgnnDtE">
				<isNotEmpty property="carrBgnnDtE">
					AND B.CARR_BGNN_DT &lt;= #carrBgnnDtE#
				</isNotEmpty>
			</isNotNull>			
		         
	</select>
			
	
	<!-- 자격 엑셀 -->
	<select id="psnl0600DAO.selectPsnl0118Xls" parameterClass="psnl0600SrhVO" resultClass="egovMap">

		SELECT ROW_NUMBER() OVER(ORDER BY (SELECT LPAD(DEPT_RANK,5,'0') FROM BASS0400 NN WHERE NN.DEPT_CD = A.CURR_AFFN_DEPT_CD)
				, A.EMYMT_DIV_CD,A.TYP_OCCU_CD, A.PYSP_GRDE_CD,A.RESN_REGN_NUM ) AS RNUM 
		       	, FCBASS0400CDNM (A.DPOB_CD, A.CURR_AFFN_DEPT_CD, '2') AS CURR_DEPT_NM
		       	, FCBASS0400CDNM (A.DPOB_CD, A.DEPT_CD, '2') AS DEPT_NM
		       	, FCBASS0300CDNM(A.DPOB_CD, A.EMYMT_DIV_CD) as EMYMT_DIV_NM
		       	, A.HAN_NM
		       	, SUBSTR(A.RESN_REGN_NUM,0,6)||'-'||SUBSTR(A.RESN_REGN_NUM,7) AS RESN_REGN_NUM
		        , fcBass0320CDNM(A.DPOB_CD, A.TYP_OCCU_CD) AS  TYPE_OCCU_NM 
		       	, A.DTIL_OCCU_INTTN_CD 
		       	, fcBassEx0350CDNM(A.DPOB_CD,A.TYP_OCCU_CD,A.DTIL_OCCU_INTTN_CD,'1' ) AS DTIL_OCCU_INTTN_NM
		       	, FCBASS0500CDNM (A.DPOB_CD, SUBSTR (A.EMYMT_BGNN_DT, 1, 4), A.CURR_AFFN_DEPT_CD, A.BUSIN_CD) AS BUSIN_NM
	        	, FCBASS0300CDNM(A.DPOB_CD, A.HDOFC_CODTN_CD) as HDOFC_CODTN_NM
	         	, DECODE(LENGTH(B.AQTN_DT), 8, TO_CHAR(TO_DATE(B.AQTN_DT,'YYYYMMDD'),'YYYY.MM.DD'),B.AQTN_DT) AS AQTN_DT
	            , FCBASS0300CDNM(A.DPOB_CD, B.QFTNT_LICNS_CD) as QFTNT_LICNS_CD
	            , B.QFTNT_LICNS_POVNC_CTNT
	            , B.EFMN_ISTUT_NM
	            , B.QFTNT_LICNS_NUM
	            , A.SYSTEMKEY
		FROM PSNL0100 A, PSNL0118 B, PAYR0500 D
		WHERE A.DPOB_CD = B.DPOB_CD(+)
			AND A.SYSTEMKEY = B.SYSTEMKEY(+)
			AND A.DPOB_CD = D.DPOB_CD(+)
			AND A.SYSTEMKEY = D.SYSTEMKEY(+)
			AND B.QFTNT_LICNS_SEIL_NUM IS NOT NULL
			
	        <include refid="defaultWhereSql"/>

		 <isNotNull property="emymtDivCd">
		     <isNotEmpty property="emymtDivCd">
		 		AND A.EMYMT_DIV_CD = #emymtDivCd#
		 	 </isNotEmpty>
		 </isNotNull>
	 
		<isNotEmpty property="hdofcCodtnCd" prepend="AND">
			<![CDATA[
				A.HDOFC_CODTN_CD
			]]>
			<iterate prepend="IN" property="hdofcCodtnCdArr" open="(" close=")" conjunction=",">
				 #hdofcCodtnCdArr[]#
			</iterate>
		</isNotEmpty> 	 	 
	 
	        
	        <isNotNull property="payrMangDeptCd">
			<isNotEmpty property="payrMangDeptCd" >
		  AND EXISTS  (
                         SELECT  C.DPOB_CD,
                                 C.DTIL_OCCU_INTTN_CD,
                                 C.TYP_OCCU_CD,
                                 C.DEPT_CD FROM 
                                             (  SELECT * 
                                                 FROM TABLE(PKG_DTIL_AUTH.FN_DTIL_AUTH_TB(#dpobCd#,#payrMangDeptYn#,#payrMangDeptCd#,#deptCd#,#usrId#,#deptCdAuth#,'' )) ) C
                                            WHERE     C.DPOB_CD = A.DPOB_CD
						                        AND C.DEPT_CD = A.CURR_AFFN_DEPT_CD
						                        AND NVL(C.TYP_OCCU_CD,'TT')  = NVL(A.TYP_OCCU_CD,'TT') 
                                                AND NVL(C.DTIL_OCCU_INTTN_CD,'TT')  = NVL(A.DTIL_OCCU_INTTN_CD,'TT')
                                                
												<isNotEmpty property="deptCd" prepend="AND">
												    C.DEPT_CD IN ( SELECT BA0400.DEPT_CD
																			FROM BASS0400 BA0400
																		WHERE BA0400.DEPT_USE_YN = 'Y'
																		START WITH BA0400.DEPT_CD 							
																			<iterate prepend="IN" property="deptCdArr" open="(" close=")" conjunction=",">
																				#deptCdArr[]#
																			</iterate>
												                         CONNECT BY PRIOR BA0400.DEPT_CD = BA0400.HHRK_DEPT_CD
																		 ) 
												</isNotEmpty>                                                
                                                
                                                <!-- 
                                               <isNotEmpty property="deptCd" prepend="AND">
												<![CDATA[
												 C.DEPT_CD
												]]>
												<iterate prepend="IN" property="deptCdArr" open="(" close=")" conjunction=",">
												 #deptCdArr[]#
												</iterate>
												</isNotEmpty> 
												-->
		) 
		</isNotEmpty> 
		</isNotNull>
	         
	        <isNotNull property="qftntLicnsPovncCtnt">
				<isNotEmpty property="qftntLicnsPovncCtnt">
					AND B.QFTNT_LICNS_POVNC_CTNT LIKE '%' || #qftntLicnsPovncCtnt# || '%' 
			 	</isNotEmpty>
			</isNotNull>
			<isNotNull property="aqtnDtS">
				<isNotEmpty property="aqtnDtS">
					AND B.AQTN_DT &gt;= #aqtnDtS#
				</isNotEmpty>
			</isNotNull>
			<isNotNull property="aqtnDtE">
			     <isNotEmpty property="aqtnDtE">
					AND B.AQTN_DT &lt;= #aqtnDtE#
			 	 </isNotEmpty>
			</isNotNull>
			
	</select>
	
	
	
	<!-- 교육 엑셀 -->
	<select id="psnl0600DAO.selectPsnl0120Xls" parameterClass="psnl0600SrhVO" resultClass="egovMap">
	
		SELECT ROW_NUMBER() OVER(ORDER BY (SELECT LPAD(DEPT_RANK,5,'0') FROM BASS0400 NN WHERE NN.DEPT_CD = A.CURR_AFFN_DEPT_CD)
				, A.EMYMT_DIV_CD,A.TYP_OCCU_CD, A.PYSP_GRDE_CD,A.RESN_REGN_NUM ) AS RNUM 
		       	, FCBASS0400CDNM (A.DPOB_CD, A.CURR_AFFN_DEPT_CD, '2') AS CURR_DEPT_NM
		       	, FCBASS0400CDNM (A.DPOB_CD, A.DEPT_CD, '2') AS DEPT_NM
		       	, FCBASS0300CDNM(A.DPOB_CD, A.EMYMT_DIV_CD) as EMYMT_DIV_NM
		       	, A.HAN_NM
		       	, SUBSTR(A.RESN_REGN_NUM,0,6)||'-'||SUBSTR(A.RESN_REGN_NUM,7) AS RESN_REGN_NUM
		       	, fcBass0320CDNM(A.DPOB_CD, A.TYP_OCCU_CD) AS  TYPE_OCCU_NM 
		       	, A.DTIL_OCCU_INTTN_CD 
		       	, fcBassEx0350CDNM(A.DPOB_CD,A.TYP_OCCU_CD,A.DTIL_OCCU_INTTN_CD,'1' ) AS DTIL_OCCU_INTTN_NM
		       	, FCBASS0500CDNM (A.DPOB_CD, SUBSTR (A.EMYMT_BGNN_DT, 1, 4), A.CURR_AFFN_DEPT_CD, A.BUSIN_CD) AS BUSIN_NM
	          	, FCBASS0300CDNM(A.DPOB_CD, A.HDOFC_CODTN_CD) as HDOFC_CODTN_NM
	         	, DECODE(LENGTH(B.EDU_BGNN_DT), 8, TO_CHAR(TO_DATE(B.EDU_BGNN_DT,'YYYYMMDD'),'YYYY.MM.DD'),B.EDU_BGNN_DT) AS EDU_BGNN_DT
	          	, DECODE(LENGTH(B.EDU_END_DT), 8, TO_CHAR(TO_DATE(B.EDU_END_DT,'YYYYMMDD'),'YYYY.MM.DD'),B.EDU_END_DT) AS EDU_END_DT
	        	, B.EDU_CMPTE_TM
	        	, B.EDU_KND_NM
	          	, B.EDU_ISTUT_NM
	         	, B.EDU_NOTE_CTNT
	          	, A.SYSTEMKEY
		FROM PSNL0100 A, PSNL0120 B, PAYR0500 D
		WHERE A.DPOB_CD = B.DPOB_CD(+)
			AND A.SYSTEMKEY = B.SYSTEMKEY(+)
			AND A.DPOB_CD = D.DPOB_CD(+)
			AND A.SYSTEMKEY = D.SYSTEMKEY(+)
	  		AND B.EDU_SEIL_NUM IS NOT NULL
	  		
         	<include refid="defaultWhereSql"/>

		 <isNotNull property="emymtDivCd">
		     <isNotEmpty property="emymtDivCd">
		 		AND A.EMYMT_DIV_CD = #emymtDivCd#
		 	 </isNotEmpty>
		 </isNotNull>


		<isNotEmpty property="hdofcCodtnCd" prepend="AND">
			<![CDATA[
				A.HDOFC_CODTN_CD
			]]>
			<iterate prepend="IN" property="hdofcCodtnCdArr" open="(" close=")" conjunction=",">
				 #hdofcCodtnCdArr[]#
			</iterate>
		</isNotEmpty> 	 
        	
         	<isNotNull property="payrMangDeptCd">
			<isNotEmpty property="payrMangDeptCd" >
		  AND EXISTS  (
                         SELECT  C.DPOB_CD,
                                 C.DTIL_OCCU_INTTN_CD,
                                 C.TYP_OCCU_CD,
                                 C.DEPT_CD FROM 
                                             ( SELECT * 
                                                 FROM TABLE(PKG_DTIL_AUTH.FN_DTIL_AUTH_TB(#dpobCd#,#payrMangDeptYn#,#payrMangDeptCd#,#deptCd#,#usrId#,#deptCdAuth#,'' )) ) C
                                            WHERE     C.DPOB_CD = A.DPOB_CD
						                        AND C.DEPT_CD = A.CURR_AFFN_DEPT_CD
						                        AND NVL(C.TYP_OCCU_CD,'TT')  = NVL(A.TYP_OCCU_CD,'TT') 
                                                AND NVL(C.DTIL_OCCU_INTTN_CD,'TT')  = NVL(A.DTIL_OCCU_INTTN_CD,'TT')
                                                
												<isNotEmpty property="deptCd" prepend="AND">
												    C.DEPT_CD IN ( SELECT BA0400.DEPT_CD
																			FROM BASS0400 BA0400
																		WHERE BA0400.DEPT_USE_YN = 'Y'
																		START WITH BA0400.DEPT_CD 							
																			<iterate prepend="IN" property="deptCdArr" open="(" close=")" conjunction=",">
																				#deptCdArr[]#
																			</iterate>
												                         CONNECT BY PRIOR BA0400.DEPT_CD = BA0400.HHRK_DEPT_CD
																		 ) 
												</isNotEmpty>                                                
                                                
                                                <!-- 
                                               <isNotEmpty property="deptCd" prepend="AND">
												<![CDATA[
												 C.DEPT_CD
												]]>
												<iterate prepend="IN" property="deptCdArr" open="(" close=")" conjunction=",">
												 #deptCdArr[]#
												</iterate>
												</isNotEmpty> 
												-->
		) 
		</isNotEmpty> 
		</isNotNull>
         
          	<isNotNull property="eduKndNm">
				<isNotEmpty property="eduKndNm">
					AND B.EDU_KND_NM LIKE '%' || #eduKndNm# || '%' 
		 	 	</isNotEmpty>
			</isNotNull>
			<isNotNull property="eduBgnnDtS">
		     	<isNotEmpty property="eduBgnnDtS">
		 			AND B.EDU_BGNN_DT &gt;= #eduBgnnDtS#
		 	 	</isNotEmpty>
			</isNotNull>
			<isNotNull property="eduBgnnDtE">
		     	<isNotEmpty property="eduBgnnDtE">
		 			AND B.EDU_BGNN_DT &lt;= #eduBgnnDtE#
		 	 	</isNotEmpty>
			</isNotNull>     
          
	</select>
	
	
	
	<!-- 포상 엑셀 -->
	<select id="psnl0600DAO.selectPsnl0121Xls" parameterClass="psnl0600SrhVO" resultClass="egovMap">
	
		SELECT ROW_NUMBER() OVER(ORDER BY (SELECT LPAD(DEPT_RANK,5,'0') FROM BASS0400 NN WHERE NN.DEPT_CD = A.CURR_AFFN_DEPT_CD)
				, A.EMYMT_DIV_CD,A.TYP_OCCU_CD, A.PYSP_GRDE_CD,A.RESN_REGN_NUM ) AS RNUM 
		       	, FCBASS0400CDNM (A.DPOB_CD, A.CURR_AFFN_DEPT_CD, '2') AS CURR_DEPT_NM
		       	, FCBASS0400CDNM (A.DPOB_CD, A.DEPT_CD, '2') AS DEPT_NM
		       	, FCBASS0300CDNM(A.DPOB_CD, A.EMYMT_DIV_CD) as EMYMT_DIV_NM
		       	, A.HAN_NM
		       	, SUBSTR(A.RESN_REGN_NUM,0,6)||'-'||SUBSTR(A.RESN_REGN_NUM,7) AS RESN_REGN_NUM
		        , fcBass0320CDNM(A.DPOB_CD, A.TYP_OCCU_CD) AS  TYPE_OCCU_NM 
		       	, A.DTIL_OCCU_INTTN_CD 
		       	, fcBassEx0350CDNM(A.DPOB_CD,A.TYP_OCCU_CD,A.DTIL_OCCU_INTTN_CD,'1' ) AS DTIL_OCCU_INTTN_NM
		       	, FCBASS0500CDNM (A.DPOB_CD, SUBSTR (A.EMYMT_BGNN_DT, 1, 4), A.CURR_AFFN_DEPT_CD, A.BUSIN_CD) AS BUSIN_NM
	            , FCBASS0300CDNM(A.DPOB_CD, A.HDOFC_CODTN_CD) as HDOFC_CODTN_NM
	            , B.ACCLD_YR
	            , DECODE(LENGTH(B.ACCLD_PRTT_DT), 8, TO_CHAR(TO_DATE(B.ACCLD_PRTT_DT,'YYYYMMDD'),'YYYY.MM.DD'),B.ACCLD_PRTT_DT) AS ACCLD_PRTT_DT
	            , FCBASS0300CDNM(A.DPOB_CD, B.ACCLD_KND_CD) as ACCLD_KND_CD
	            , FCBASS0300CDNM(A.DPOB_CD, B.ACCLD_DIV_CD) as ACCLD_DIV_CD
	            , B.ACCLD_NM
	            , B.ACCLD_CFMNT_NUM
	            , B.EFMN_ISTUT_NM
	            , B.ACCLD_MNANT_CTNT
	            , B.ACCLD_NOTE_CTNT
	            , A.SYSTEMKEY
		FROM PSNL0100 A, PSNL0121 B, PAYR0500 D
		
		WHERE A.DPOB_CD = B.DPOB_CD(+)
			AND A.SYSTEMKEY = B.SYSTEMKEY(+)
			AND A.DPOB_CD = D.DPOB_CD(+)
			AND A.SYSTEMKEY = D.SYSTEMKEY(+)
			AND B.ACCLD_SEIL_NUM IS NOT NULL
		<include refid="defaultWhereSql"/>

		 <isNotNull property="emymtDivCd">
		     <isNotEmpty property="emymtDivCd">
		 		AND A.EMYMT_DIV_CD = #emymtDivCd#
		 	 </isNotEmpty>
		 </isNotNull>

		<isNotEmpty property="hdofcCodtnCd" prepend="AND">
			<![CDATA[
				A.HDOFC_CODTN_CD
			]]>
			<iterate prepend="IN" property="hdofcCodtnCdArr" open="(" close=")" conjunction=",">
				 #hdofcCodtnCdArr[]#
			</iterate>
		</isNotEmpty> 	 

		
		<isNotNull property="payrMangDeptCd">
			<isNotEmpty property="payrMangDeptCd" >
		  AND EXISTS  (
                         SELECT  C.DPOB_CD,
                                 C.DTIL_OCCU_INTTN_CD,
                                 C.TYP_OCCU_CD,
                                 C.DEPT_CD FROM 
                                             ( SELECT * 
                                                 FROM TABLE(PKG_DTIL_AUTH.FN_DTIL_AUTH_TB(#dpobCd#,#payrMangDeptYn#,#payrMangDeptCd#,#deptCd#,#usrId#,#deptCdAuth#,'' )) ) C
                                            WHERE     C.DPOB_CD = A.DPOB_CD
						                        AND C.DEPT_CD = A.CURR_AFFN_DEPT_CD
						                        AND NVL(C.TYP_OCCU_CD,'TT')  = NVL(A.TYP_OCCU_CD,'TT') 
                                                AND NVL(C.DTIL_OCCU_INTTN_CD,'TT')  = NVL(A.DTIL_OCCU_INTTN_CD,'TT')
                                               
												<isNotEmpty property="deptCd" prepend="AND">
												    C.DEPT_CD IN ( SELECT BA0400.DEPT_CD
																			FROM BASS0400 BA0400
																		WHERE BA0400.DEPT_USE_YN = 'Y'
																		START WITH BA0400.DEPT_CD 							
																			<iterate prepend="IN" property="deptCdArr" open="(" close=")" conjunction=",">
																				#deptCdArr[]#
																			</iterate>
												                         CONNECT BY PRIOR BA0400.DEPT_CD = BA0400.HHRK_DEPT_CD
																		 ) 
												</isNotEmpty>                                               
                                                
                                                <!-- 
                                               <isNotEmpty property="deptCd" prepend="AND">
												<![CDATA[
												 C.DEPT_CD
												]]>
												<iterate prepend="IN" property="deptCdArr" open="(" close=")" conjunction=",">
												 #deptCdArr[]#
												</iterate>
												</isNotEmpty> 
												-->
		) 
		</isNotEmpty> 
		</isNotNull>	
			
    </select>
 
	
	<!-- 징계 엑셀 -->
	<select id="psnl0600DAO.selectPsnl0122Xls" parameterClass="psnl0600SrhVO" resultClass="egovMap">	

		SELECT ROW_NUMBER() OVER(ORDER BY (SELECT LPAD(DEPT_RANK,5,'0') FROM BASS0400 NN WHERE NN.DEPT_CD = A.CURR_AFFN_DEPT_CD)
				, A.EMYMT_DIV_CD,A.TYP_OCCU_CD, A.PYSP_GRDE_CD,A.RESN_REGN_NUM ) AS RNUM 
		       	, FCBASS0400CDNM (A.DPOB_CD, A.CURR_AFFN_DEPT_CD, '2') AS CURR_DEPT_NM
		       	, FCBASS0400CDNM (A.DPOB_CD, A.DEPT_CD, '2') AS DEPT_NM
		       	, FCBASS0300CDNM(A.DPOB_CD, A.EMYMT_DIV_CD) as EMYMT_DIV_NM
		       	, A.HAN_NM
		       	, SUBSTR(A.RESN_REGN_NUM,0,6)||'-'||SUBSTR(A.RESN_REGN_NUM,7) AS RESN_REGN_NUM
		        , fcBass0320CDNM(A.DPOB_CD, A.TYP_OCCU_CD) AS  TYPE_OCCU_NM 
		       	, A.DTIL_OCCU_INTTN_CD 
		       	, fcBassEx0350CDNM(A.DPOB_CD,A.TYP_OCCU_CD,A.DTIL_OCCU_INTTN_CD,'1' ) AS DTIL_OCCU_CLS_DIV_NM
		       	, FCBASS0500CDNM (A.DPOB_CD, SUBSTR (A.EMYMT_BGNN_DT, 1, 4), A.CURR_AFFN_DEPT_CD, A.BUSIN_CD) AS BUSIN_NM
	        	, FCBASS0300CDNM(A.DPOB_CD, A.HDOFC_CODTN_CD) as HDOFC_CODTN_NM
	            , DECODE(LENGTH(B.DSNY_ACT_DSPL_DT), 8, TO_CHAR(TO_DATE(B.DSNY_ACT_DSPL_DT,'YYYYMMDD'),'YYYY.MM.DD'),B.DSNY_ACT_DSPL_DT) AS DSNY_ACT_DSPL_DT
	            , FCBASS0300CDNM(A.DPOB_CD, B.DSNY_ACT_DIV_CD) as DSNY_ACT_DIV_CD
	            , B.DSNY_ACT_NM
	            , B.DSNY_ACT_REAS_CTNT
	            , B.DSNY_ACT_ECTG_ORGN
	            , DECODE(LENGTH(B.DSNY_ACT_BGNN_DT), 8, TO_CHAR(TO_DATE(B.DSNY_ACT_BGNN_DT,'YYYYMMDD'),'YYYY.MM.DD'),B.DSNY_ACT_BGNN_DT) AS DSNY_ACT_BGNN_DT
	            , DECODE(LENGTH(B.DSNY_ACT_END_DT), 8, TO_CHAR(TO_DATE(B.DSNY_ACT_END_DT,'YYYYMMDD'),'YYYY.MM.DD'),B.DSNY_ACT_END_DT) AS DSNY_ACT_END_DT
	            , DECODE(LENGTH(B.DSNY_ACT_ANSTY_DT), 8, TO_CHAR(TO_DATE(B.DSNY_ACT_ANSTY_DT,'YYYYMMDD'),'YYYY.MM.DD'),B.DSNY_ACT_ANSTY_DT) AS DSNY_ACT_ANSTY_DT
	            , FCBASS0300CDNM(A.DPOB_CD, B.DSNY_ACT_ANSTY_DIV_CD) as DSNY_ACT_ANSTY_DIV_CD
	            , B.DSNY_ACT_CTWP_MNTH_ICM
	            , B.DSNY_ACT_NOTE_CTNT
	            , A.SYSTEMKEY
		FROM PSNL0100 A, PSNL0122 B, PAYR0500 D
		WHERE A.DPOB_CD = B.DPOB_CD(+)
			AND A.SYSTEMKEY = B.SYSTEMKEY(+)
			AND A.DPOB_CD = D.DPOB_CD(+)
			AND A.SYSTEMKEY = D.SYSTEMKEY(+)
			AND B.DSNY_ACT_SEIL_NUM IS NOT NULL
			<include refid="defaultWhereSql"/>

		 <isNotNull property="emymtDivCd">
		     <isNotEmpty property="emymtDivCd">
		 		AND A.EMYMT_DIV_CD = #emymtDivCd#
		 	 </isNotEmpty>
		 </isNotNull>

		<isNotEmpty property="hdofcCodtnCd" prepend="AND">
			<![CDATA[
				A.HDOFC_CODTN_CD
			]]>
			<iterate prepend="IN" property="hdofcCodtnCdArr" open="(" close=")" conjunction=",">
				 #hdofcCodtnCdArr[]#
			</iterate>
		</isNotEmpty> 	 

			
			<isNotNull property="payrMangDeptCd">
			<isNotEmpty property="payrMangDeptCd" >
		  AND EXISTS  (
                         SELECT  C.DPOB_CD,
                                 C.DTIL_OCCU_INTTN_CD,
                                 C.TYP_OCCU_CD,
                                 C.DEPT_CD FROM 
                                             ( SELECT * 
                                                 FROM TABLE(PKG_DTIL_AUTH.FN_DTIL_AUTH_TB(#dpobCd#,#payrMangDeptYn#,#payrMangDeptCd#,#deptCd#,#usrId#,#deptCdAuth#,'' ))) C
                                            WHERE     C.DPOB_CD = A.DPOB_CD
						                        AND C.DEPT_CD = A.CURR_AFFN_DEPT_CD
						                        AND NVL(C.TYP_OCCU_CD,'TT')  = NVL(A.TYP_OCCU_CD,'TT') 
                                                AND NVL(C.DTIL_OCCU_INTTN_CD,'TT')  = NVL(A.DTIL_OCCU_INTTN_CD,'TT')
                                                
												<isNotEmpty property="deptCd" prepend="AND">
												    C.DEPT_CD IN ( SELECT BA0400.DEPT_CD
																			FROM BASS0400 BA0400
																		WHERE BA0400.DEPT_USE_YN = 'Y'
																		START WITH BA0400.DEPT_CD 							
																			<iterate prepend="IN" property="deptCdArr" open="(" close=")" conjunction=",">
																				#deptCdArr[]#
																			</iterate>
												                         CONNECT BY PRIOR BA0400.DEPT_CD = BA0400.HHRK_DEPT_CD
																		 ) 
												</isNotEmpty>                                                
                                                <!-- 
                                               <isNotEmpty property="deptCd" prepend="AND">
												<![CDATA[
												 C.DEPT_CD
												]]>
												<iterate prepend="IN" property="deptCdArr" open="(" close=")" conjunction=",">
												 #deptCdArr[]#
												</iterate>
												</isNotEmpty> 
												-->
		) 
		</isNotEmpty> 
		</isNotNull>
		
			<isNotNull property="dsnyActDivCd">
		    	<isNotEmpty property="dsnyActDivCd">
		 			AND B.DSNY_ACT_DIV_CD = #dsnyActDivCd# 
		 	 	</isNotEmpty>
			</isNotNull>
			<isNotNull property="dsnyActDsplDtS">
		     	<isNotEmpty property="dsnyActDsplDtS">
		 			AND B.DSNY_ACT_DSPL_DT &gt;= #dsnyActDsplDtS#
		 	 	</isNotEmpty>
			</isNotNull>
			<isNotNull property="dsnyActDsplDtE">
		     	<isNotEmpty property="dsnyActDsplDtE">
		 			AND B.DSNY_ACT_DSPL_DT &lt;= #dsnyActDsplDtE#
		 	 	</isNotEmpty>
			</isNotNull>			
		 
	</select>
	
	
	<!-- 휴직 엑셀 -->
	<select id="psnl0600DAO.selectPsnl0123Xls" parameterClass="psnl0600SrhVO" resultClass="egovMap">		
	
		SELECT ROW_NUMBER() OVER(ORDER BY (SELECT LPAD(DEPT_RANK,5,'0') FROM BASS0400 NN WHERE NN.DEPT_CD = A.CURR_AFFN_DEPT_CD)
				, A.EMYMT_DIV_CD,A.TYP_OCCU_CD, A.PYSP_GRDE_CD,A.RESN_REGN_NUM ) AS RNUM 
		       	, FCBASS0400CDNM (A.DPOB_CD, A.CURR_AFFN_DEPT_CD, '2') AS CURR_DEPT_NM
		       	, FCBASS0400CDNM (A.DPOB_CD, A.DEPT_CD, '2') AS DEPT_NM
		       	, FCBASS0300CDNM(A.DPOB_CD, A.EMYMT_DIV_CD) as EMYMT_DIV_NM
		       	, A.HAN_NM
		       	, SUBSTR(A.RESN_REGN_NUM,0,6)||'-'||SUBSTR(A.RESN_REGN_NUM,7) AS RESN_REGN_NUM
			   	, fcBass0320CDNM(A.DPOB_CD, A.TYP_OCCU_CD) AS  TYPE_OCCU_NM 
		       	, A.DTIL_OCCU_INTTN_CD 
		       	, fcBassEx0350CDNM(A.DPOB_CD,A.TYP_OCCU_CD,A.DTIL_OCCU_INTTN_CD,'1' ) AS DTIL_OCCU_INTTN_NM
		       	, FCBASS0500CDNM (A.DPOB_CD, SUBSTR (A.EMYMT_BGNN_DT, 1, 4), A.CURR_AFFN_DEPT_CD, A.BUSIN_CD) AS BUSIN_NM
	           	, FCBASS0300CDNM(A.DPOB_CD, A.HDOFC_CODTN_CD) as HDOFC_CODTN_NM
	           	, FCBASS0300CDNM(A.DPOB_CD, B.LEVF_ABNC_DIV_CD) as LEVF_ABNC_DIV_CD
	           	, DECODE(LENGTH(B.LEVF_ABNC_BGNN_DT), 8, TO_CHAR(TO_DATE(B.LEVF_ABNC_BGNN_DT,'YYYYMMDD'),'YYYY.MM.DD'),B.LEVF_ABNC_BGNN_DT) AS LEVF_ABNC_BGNN_DT
	           	, DECODE(LENGTH(B.LEVF_ABNC_END_DT), 8, TO_CHAR(TO_DATE(B.LEVF_ABNC_END_DT,'YYYYMMDD'),'YYYY.MM.DD'),B.LEVF_ABNC_END_DT) AS LEVF_ABNC_END_DT
	           	, DECODE(LENGTH(B.TURTY_RNTMNT_DT), 8, TO_CHAR(TO_DATE(B.TURTY_RNTMNT_DT,'YYYYMMDD'),'YYYY.MM.DD'),B.TURTY_RNTMNT_DT) AS TURTY_RNTMNT_DT
	           	, B.LEVF_ABNC_NOTE_CTNT
	           	, A.SYSTEMKEY
		FROM PSNL0100 A, PSNL0123 B, PAYR0500 D
		
		WHERE A.DPOB_CD = B.DPOB_CD(+)
			AND A.SYSTEMKEY = B.SYSTEMKEY(+)
			AND A.DPOB_CD = D.DPOB_CD(+)
			AND A.SYSTEMKEY = D.SYSTEMKEY(+)
	  		AND B.LEVF_ABNC_SEIL_NUM IS NOT NULL
	     	<include refid="defaultWhereSql"/>

		 <isNotNull property="emymtDivCd">
		     <isNotEmpty property="emymtDivCd">
		 		AND A.EMYMT_DIV_CD = #emymtDivCd#
		 	 </isNotEmpty>
		 </isNotNull>


		<isNotEmpty property="hdofcCodtnCd" prepend="AND">
			<![CDATA[
				A.HDOFC_CODTN_CD
			]]>
			<iterate prepend="IN" property="hdofcCodtnCdArr" open="(" close=")" conjunction=",">
				 #hdofcCodtnCdArr[]#
			</iterate>
		</isNotEmpty> 	 
	     	
	     	<isNotNull property="payrMangDeptCd">
			<isNotEmpty property="payrMangDeptCd" >
		  AND EXISTS  (
                         SELECT  C.DPOB_CD,
                                 C.DTIL_OCCU_INTTN_CD,
                                 C.TYP_OCCU_CD,
                                 C.DEPT_CD FROM 
                                             ( SELECT * 
                                                 FROM TABLE(PKG_DTIL_AUTH.FN_DTIL_AUTH_TB(#dpobCd#,#payrMangDeptYn#,#payrMangDeptCd#,#deptCd#,#usrId#,#deptCdAuth#,'' )) ) C
                                            WHERE     C.DPOB_CD = A.DPOB_CD
						                        AND C.DEPT_CD = A.CURR_AFFN_DEPT_CD
						                        AND NVL(C.TYP_OCCU_CD,'TT')  = NVL(A.TYP_OCCU_CD,'TT') 
                                                AND NVL(C.DTIL_OCCU_INTTN_CD,'TT')  = NVL(A.DTIL_OCCU_INTTN_CD,'TT')
                                                
												<isNotEmpty property="deptCd" prepend="AND">
												    C.DEPT_CD IN ( SELECT BA0400.DEPT_CD
																			FROM BASS0400 BA0400
																		WHERE BA0400.DEPT_USE_YN = 'Y'
																		START WITH BA0400.DEPT_CD 							
																			<iterate prepend="IN" property="deptCdArr" open="(" close=")" conjunction=",">
																				#deptCdArr[]#
																			</iterate>
												                         CONNECT BY PRIOR BA0400.DEPT_CD = BA0400.HHRK_DEPT_CD
																		 ) 
												</isNotEmpty>                                                
                                                
                                                <!-- 
                                               <isNotEmpty property="deptCd" prepend="AND">
												<![CDATA[
												 C.DEPT_CD
												]]>
												<iterate prepend="IN" property="deptCdArr" open="(" close=")" conjunction=",">
												 #deptCdArr[]#
												</iterate>
												</isNotEmpty> 
												-->
		) 
		</isNotEmpty> 
		</isNotNull>
	     
	     	<isNotNull property="levfAbncDivCd">
				<isNotEmpty property="levfAbncDivCd">
		 			AND B.LEVF_ABNC_DIV_CD = #levfAbncDivCd# 
		 	 	</isNotEmpty>
			</isNotNull>
			<isNotNull property="levfAbncBgnnDtS">
		     	<isNotEmpty property="levfAbncBgnnDtS">
		 			AND B.LEVF_ABNC_BGNN_DT &gt;= #levfAbncBgnnDtS#
		 	 	</isNotEmpty>
			</isNotNull>
			<isNotNull property="levfAbncBgnnDtE">
		     	<isNotEmpty property="levfAbncBgnnDtE">
		 			AND B.LEVF_ABNC_BGNN_DT &lt;= #levfAbncBgnnDtE#
		 	 	</isNotEmpty>
			</isNotNull>	
	     
	</select>
		
	
	
	
</sqlMap>
